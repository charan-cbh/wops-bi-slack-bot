{
  "daily_last_time_hcps_int": {
    "description": "",
    "columns": {}
  },
  "monthly_hcf_growth_accounting_by_msa": {
    "description": "",
    "columns": {}
  },
  "app_profilechangelogs_stg": {
    "description": "Staging model for data coming from the application's profile change log table\n",
    "columns": {
      "id": "Primary key, unique indentifier for the profile change event\n",
      "action": "The type of action that was taken for the update. Can be one of ADDED, UPDATED, REMOVED",
      "update_type": "The type of field that was updated",
      "performed_for_id": "The unique identifier for the profile that was changed",
      "performed_for_email": "The email of the profile that was changed",
      "performed_by_id": "The unique identifier for the user that changed the profile",
      "performed_by_email": "The email of the user that changed the profile",
      "user_type": "The type of user for the profile that was changed. Can be one of SIGNATORY, FACILITY_USER, and FACILITY ",
      "user_email": "The email of the profile that was changed",
      "updated_field": "The field that was updated",
      "new_status": "The new state that the updated field is",
      "previous_status": "The previous state that the updated field was",
      "admin_id": "The unique identifier for the user that changed the profile",
      "updated_at": "timestamp of when the record was last updated",
      "created_at": "Timestamp of when the record was created"
    }
  },
  "master_invoice_tracker": {
    "description": "",
    "columns": {}
  },
  "zd_ticket_tags_stg": {
    "description": "",
    "columns": {}
  },
  "int_billing_payment_metrics_daily_snapshot": {
    "description": "Intermediate reporting table containing invoice information for billing payment metrics",
    "columns": {
      "invoice_id": "Invoice number displayed on the invoice (i.e. reference number)",
      "customer_id": "Invoiced Customer ID",
      "salesforce_account_id": "Salesforce account ID of the Invoiced customer",
      "salesforce_account_parent_id": "Salesforce parent account ID of the Invoiced customer",
      "invoice_status": "Invoice status, one of: draft, not_sent, sent, viewed, past_due, pending, paid, voided, bad_debt",
      "p2p_status": "Promised-to-pay (p2p) status can be one of the following statuses:\n\n| status         | description                                                               |\n|----------------|---------------------------------------------------------------------------|\n| NULL           | The invoice does not have an expected payment date                        |\n| open           | The invoice expected payment date is upcoming (after current date)        |\n| broken         | The latest invoice payment date is after the expected payment date OR the invoice has not yet been paid based on expected payment date, has a non-zero balance, and has a valid invoice status |\n| underpaid      | The latest invoice payment date is on/before the expected payment date, however the invoice has still not been paid in full |\n| successful     | The latest invoice payment date is on/before the expected payment date, and the invoice has been paid in full  |",
      "balance": "Balance owed on the invoice",
      "total_payment_amount": "The total payment amount across all fct_payments or fct_transaction records. If null, this invoice has no payment/transaction",
      "p2p_creation_date": "Expected payment date",
      "latest_payment_date": "Either the latest payment date or latest transaction date. If null, this invoice has no payment/transaction",
      "dso_date_due": "If the invoice is paid, this is the number of days between the payment date and the invoice date, otherwise this is number of days since the invoice date of the invoice",
      "total_payment_last_7_days": "The total payment amount in the last 7 days since the last payment date of the invoice for invoices where the invoice_status is not NULL nor 'pending'",
      "aging": "Based on the dso_date_due column, this catagorizes the number of days past due",
      "type_payment_made": "If the total_payment_last_7_days > 0 and dso_date_due > 0 then 'Payment on Past Due A/R, if total_payment_last_7_days > 0 and dso_date_due <= 0 then 'Payment on Current A/R'",
      "total_payment_current_balance_last_7_days": "If type_payment_made = 'Payment on Current A/R' and total_payment_last_7_days > 0 then this equals the value in the field total_payment_last_7_days",
      "total_payment_past_due_balance_last_7_days": "If type_payment_made = 'Payment on Past Due A/R' and total_payment_last_7_days > 0 then this equals the value in the field total_payment_last_7_days",
      "workstream_handling": "Based on the Salesforce boolean columns, if is_with_legal is true, then the value is 'Legal', else if the is_handled_by_corp_pod is true then the value is 'Parent Account Pod', else if is is_handled_by_mini_corp_pod is true then the value is 'Mini Corp Pod', else if is_handled_by_weekly_workstream is true then the value is 'Weekly Workstream', else if has_insurance_claim_raised_for_facility is true then the value is 'Insurance', else if is_endorsed_to_third_party_debt_collector then the value is '3rd Party' else 'Not Handled'",
      "stage_of_legal_process": "The current stage of the legal process that the account is in, if applicable",
      "has_payment_plan": "If the account has a payment plan to pay CBH, then TRUE",
      "is_with_legal": "If CBH Legal team is helping collect outstanding A/R on this account then TRUE",
      "is_handled_by_corp_pod": "If the Corp Pod within the CBH Collections team chasing outstanding A/R at the parent account level then TRUE",
      "is_handled_by_mini_corp_pod": "If the Mini Corp Account workstream within the CBH Collections team chasing outstanding A/R then TRUE",
      "is_handled_by_weekly_workstream": "Catch-all workstream for remaining accounts showing delinquency that are not handled by other workstreams",
      "has_insurance_claim_raised_for_facility": "If CBH has submitted an A/R insurance claim for the facility then true",
      "is_endorsed_to_third_party_debt_collector": "If the account endorsed to one of our external debt collectors then true",
      "snapshot_day": "The current day which is used to create a daily snapshot (dbt run checks to see when this is incremented and creates a snapshot)"
    }
  },
  "pa_dashboard_Lead_Time_in_Mins_Shifts_Claimed_During_Priority_Access": {
    "description": "",
    "columns": {}
  },
  "stg_app__agent_profiles_test_accounts": {
    "description": "Staging model for test accounts coming from the application's agentprofiles",
    "columns": {
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "salesforce_id": "Related Salesforce ID for the worker",
      "referrer_id": "If the worker was referred by another worker, this is the id of that worker",
      "referral_bonus_type": "Type of Referral Bonus",
      "referral_amount_applied": "Amount applied towards referral bonus",
      "amount_paid": "Amount paid towards referral amount",
      "ota_build_id": "The id for OTA builds to the worker's app",
      "first_name": "First name of the worker",
      "last_name": "Last name of the worker",
      "full_name": "Full name of the worker",
      "phone_number": "Phone number of the worker",
      "email": "Email of the worker",
      "timezone": "Timezone of the worker",
      "referral_code": "Unique referral code associated to the worker",
      "signed_contractor_agreements": "Information about the contractor agreements that were signed",
      "ssn_encrypted": "The encrypted social security number of the worker",
      "country": "Country of the worker",
      "state": "State of the worker",
      "state_code": "Corresponding state code of the worker",
      "csa": "Combined statistical area (CSA) of the employee based on their location",
      "msa": "Metropolitan statistical area (MSA) of the employee based on their location",
      "city": "City of the worker",
      "postal_code": "Postal code of the worker",
      "region": "Region/county of the worker",
      "formatted_address": "Formatted address of the worker",
      "distance_preference": "Distance preference of the worker for shifts, in miles",
      "location_1": "No additional info found about this field",
      "location_2": "No additional info found about this field",
      "qualification": "The qualification of the worker (i.e. CNA, LVN, etc.)",
      "other_qualification": "Any additional qualifications of the worker",
      "account_stage": "The current stage of the worker's account (i.e. onboarding, deactivated etc.)",
      "is_activated": "If the worker's account is activated then TRUE",
      "longitude": "The longitude of the worker",
      "latitude": "The latitude of the worker",
      "profile_image_url": "if the worker has a profile image, this is the URL. Potentially deprecated field",
      "profile_image_file_storage_file_key": "Directory/location/name of the profile image in its storage location within S3 bucket",
      "profile_image_file_storage_root_folder": "The storage root folder where the worker's profile image is stored (S3 bucket)",
      "app_version": "The current app version of the user/worker",
      "app_platform": "The current app platform of the user/worker",
      "license_state": "State where the worker is currently licensed",
      "signup_stage": "The stage of signup that the worker is currently on within the app",
      "is_manual_msa": "If the MSA of the worker is manually set, then TRUE",
      "is_approximate_msa": "If the MSA of the worker is approximate, then TRUE",
      "has_show_referral_alert_enabled": "No additional info about this field",
      "has_push_notifications_enabled": "If the worker has push notifications enabled on the app, then TRUE",
      "has_sms_notifications_enabled": "If the worker has sms notifications enabled on the app, then TRUE",
      "has_notifications_off": "If the worker has notifications turned off, then TRUE",
      "has_urgent_shift_notifications_enabled": "If the worker has notifications for available urgent shifts enabled, then TRUE",
      "urgent_shift_notification_snoozed_days": "The number of days that the urgent shift notification is snoozed for, if applicable",
      "has_priority_access_notifications_enabled": "If the worker has notifications priority access shifts enabled, then TRUE",
      "has_marketing_push_enabled": "If the worker has marketing push notifications enabled, then TRUE",
      "has_marketing_email_enabled": "If the worker has marketing email notifications enabled, then TRUE",
      "has_marketing_sms_enabled": "If the worker has marketing sms notifications enabled, then TRUE",
      "has_profile_image": "If the worker has a profile image uploaded to the app, then TRUE",
      "has_hide_as_colleague_on_shifts_enabled": "No additional info about this field",
      "has_location_enabled": "If the worker has location enabled on the app, then TRUE",
      "is_precise_location_enabled": "If the worker has precise location enabled on the app, then TRUE",
      "location_permission": "The location permissions for the worker (i.e. location always, when the app is in use, etc.)",
      "is_signup_initiated": "If the worker has initiated signup stage on the app, then TRUE",
      "is_signup_completed": "If the worker has completed signup, then TRUE",
      "is_higher_rate_enabled": "Whether or not the agent is enabled for a higher rate",
      "rate": "Rate in agentprofile mongo document",
      "number_of_future_shifts_staffed": "The number of upcoming shifts for the worker, if applicable",
      "attendance_pct": "Percentage of attendance (i.e. completed_shifts/all shifts)",
      "completed_shifts": "Number of shifts completed",
      "cancelled_shifts": "Number of shifts cancelled",
      "instant_pay_rate": "No additional info about this field",
      "num_no_call_no_show": "Number of shifts where the worker was a no call no show (excused + unexcused)",
      "num_excused_no_call_no_show": "Number of shifts where the worker had an excused no call no show (NCNS)",
      "num_unexcused_no_call_no_show": "Number of shifts where the worker had an unexcused no call no show (NCNS)",
      "cancel_credit_count": "No additional info about this field",
      "verified_shift_streak_count": "If the worker has an active streak of verified shifts, this is that count",
      "created_at": "Timestamp of when the record was created",
      "created_week": "The date of the week that the shift was created, with the week starting on Mondays",
      "last_logged_in_at": "Timestamp of the worker's last login to the app",
      "next_shift_at": "Timestamp of the worker's next shift, if applicable",
      "future_shifts_staffed_last_updated_at": "Timestamp of the last update to the 'Number of future shifts staffed' field",
      "last_worked_at": "Timestamp of the last shift worked",
      "updated_at": "timestamp of when the record was last updated",
      "signup_completed_at": "Timestamp of when signup was completed, if applicable",
      "urgent_shift_notification_snoozed_at": "If the worker snoozed urgent shift notifications, this is the timestamp when they did so",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "app_wwf_phase_1_pilot_workers_stg": {
    "description": "",
    "columns": {}
  },
  "first_time_booked_week_fin": {
    "description": "For a given week, this table details the cumulative shifts that first time HCPs have booked for that week for each day until the end of the week. Each row says something like, by September 21st, 200 new HCPs had signed up for shifts starting during the second week of October.",
    "columns": {}
  },
  "stg_app__worker_onboardings": {
    "description": "Staging model for new worker onboarding data\n",
    "columns": {
      "worker_id": "Primary key, unique indentifier for the onboarding\n",
      "mio_enabled": "Whether the worker went through the MIO flow",
      "mio_onboard_stage": "At which stage of the sign-up flow the worker entered the MIO flow",
      "created_at": "When the MIO availability was first checked",
      "updated_at": "When the MIO availability was last checked",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "pa_dashboard_95th_Percentile_Priority_Till_Lead_Time_for_CNA_Shifts": {
    "description": "",
    "columns": {}
  },
  "stg_docs__docs_requirement_mapping_logs": {
    "description": "Staging table containing logs of changes to the documentation requirement mappings",
    "columns": {
      "req_mapping_log_id": "Primary Key, unique identifer to the log of changes",
      "req_mapping_id": "The requirement mapping id that the changes are being applied to",
      "performed_by": "The id and email of the user who performed the action",
      "action": "Type of action performed to the documentation mapping requirments (i.e. created a new mapping, updated a mapping, etc.)",
      "new_value": "An object containing the new values to the requirement",
      "prev_value": "An object containing the previous values to the requirement, if applicable",
      "removed_value": "An object containing any removed values to the requirement, if applicable, as this can happen as part of an update",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "monthly_hcf_growth_accounting_verticals": {
    "description": "",
    "columns": {}
  },
  "pa_dashboard_Share_of_Shifts_Booked_by_Priority_Workers_During_vs_Post_Priority_Period": {
    "description": "",
    "columns": {}
  },
  "app_priority_access": {
    "description": "",
    "columns": {}
  },
  "stg_app__shifts_test_accounts": {
    "description": "Staging model for data coming from the application's shifts table, filtering for test accounts\n",
    "columns": {
      "shift_id": "Unique identifier for the shift",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "invoice_id": "Invoice associated to the shift. Note: potentially deprecated field.",
      "workplace_worker_combination_id": "Concat of the workplace and worker id, respectively",
      "group_id": "No additional info found. Note: potentially deprecated field",
      "verification_task_id": "Potentially used in table verification joins. Note: potentially deprecated field.",
      "timecard_id": "Timecard associated with the shift, if applicable",
      "verified_by_id": "No additional info found about this field",
      "previously_assigned_worker_id": "No additional info found about this field",
      "external_id": "No additional info found about this field",
      "request_replacement_by_id": "No additional info found about this field",
      "assigned_by_id": "No additional info found about this field",
      "shift_block_id": "Shift block which the shift is a part of",
      "shift_poster_id": "User who posted the shift",
      "worker_name": "Name of the worker, if applicable",
      "workplace_name": "Name of the workplace",
      "shift_type": "The working time set by the facility (i.e. PM, AM, etc.)",
      "worker_requirement": "The type/level of worker that is required for the shift (i.e. nurse, EMT, etc.)",
      "original_requirement": "The type/level of worker when the shift was created, but only set when booked. This may be empty before booking, and after booking it will be the original requirement when posted, which in most cases is the same as worker_requirement, but with exceptions for shifts posted as NURSE and CAREGIVER, for which the worker_requirement may be changed according to the worker that books the shift.",
      "cancellation_reason": "Reason why the shift was cancelled, if applicable",
      "invoice_number": "Invoice number associated to the shift, if applicable",
      "urgent_shift_type": "If a shift is defined as an urgent shift, this field denotes the type/urgency of the shift:\n\n| type           | description                                                      |\n|----------------|------------------------------------------------------------------|\n| 1              | No Call No Show (NCNS)                                           |\n| 2              | Late/Last Minute Cancellation (<= 8 hours before shift start)    |\n| 3              | Last minute shifts (posted within 24 hours of start)             |\n| 4              | DEPRECATED - part of instant fill feature                        |\n| NULL           | Not an urgent shift                                              |",
      "urgent_shift_reason": "The reason for the urgency of the shift. This field is only populated if the shift is an urgent shift. The reason can be one of the following:\n\n| enum value                          | description                                      |\n|-------------------------------------|--------------------------------------------------|\n| WORKER_REPLACEMENT_REQUESTED        | Worker replacement is requested                  |\n| ATTENDANCE_TRACKING_ALGO            | Urgency by attendance tracking algo              |\n| LATE_CANCELLATION                   | Urgency due to late shift cancellation           |\n| MAGIC_SHIFT                         | The shift is urgent because it's a magic shift   |",
      "urgent_shift_updated_at": "The date and time when the urgency of the shift was last updated. This field is only populated if the shift is an urgent shift.",
      "extend_bookability_to": "The date and time to which a shift's bookability was extended past it's start if the worker cancelled late or was a no show.",
      "clock_in_method": "Deprecated field, all values are NULL",
      "nfc_status_converted_by": "No additional info about this field",
      "nfc_status_converted_reason": "No additional info about this field",
      "verification_comments": "Notes regarding the verification of the shift",
      "clock_in_connectivity_mode": "Indicates whether the worker was connected to the internet (i.e. online) when they clocked in, if applicable. Potentially deprecated",
      "clock_out_connectivity_mode": "Indicates whether the worker was connected to the internet (i.e. online) when they clocked out, if applicable. Potentially deprecated",
      "lunch_in_connectivity_mode": "Indicates whether the worker was connected to the internet (i.e. online) when they punched in from lunch, if applicable. Potentially deprecated",
      "lunch_out_connectivity_mode": "Indicates whether the worker was connected to the internet (i.e. online) when they punched out for lunch, if applicable. Potentially deprecated",
      "previously_assigned_worker_name": "No additional info about this field",
      "request_replacement_note": "If a facility requested a replacement worker, these are the notes added by the facility",
      "timecard_status": "Status of the worker's timecard for this shift, if applicable",
      "digital_signature": "The digital signature used to verify the shift, if applicable",
      "verification_method": "Method as to how the shift was verified, if applicable",
      "is_booked_same_shift": "No additional info about this field, potentially deprecated",
      "is_invoiced": "If shift is applicable to have an invoice, then TRUE",
      "is_deleted": "If shift is deleted/cancelled, then TRUE",
      "is_confirmed": "No additional info about this field, potentially deprecated",
      "is_verified": "If the worker's shift is verified by the workplace. This means the HCP should get paid and the facility charged. NOTE: This field may not be correct as it differs from the one found in fct_shift_logs",
      "is_signed": "No additional info about this field, potentially deprecated",
      "is_billable": "Related to \"Late Cancel\" and \"Sent Home\" fees, set to TRUE if toggled on from the manual bonus UI",
      "is_auto_assign_shift": "If the shift was created via Shift Invites and the worker accepted the shift, then TRUE. This shift is not released to the marketplace nor can a worker book this shift that was not the invited worker. Priority access and urgent shifts creation will be completely ignored if the provided shift has this value set to TRUE",
      "is_instant_pay": "If the shift is an instant pay shift, then TRUE",
      "is_hot_shift": "If the shift is a hot shift (subsidized shift due to being in GTM), then TRUE",
      "is_urgently_booked": "If the shift is an urgent shift and booked, then TRUE",
      "is_hcppaid_cancellation": "If the worker was paid for the shift after it was cancelled, then TRUE",
      "is_self_claimed": "If the worker booked the shift in the app, then TRUE",
      "is_auto_clocked_out": "If the worker was auto-clocked out, then TRUE\"",
      "is_changed_to_non_instant_pay": "If the shift was changed from 'Instant Pay' to 'Non-Instant Pay', then TRUE",
      "is_hazard_shift": "If the shift is designated as a hazard shift, then TRUE",
      "has_hazard_pay": "If hazard pay is offered by facility, then TRUE",
      "is_by_facility": "No additional info about this field",
      "is_holiday_shift": "If the shift is on a holiday, the TRUE",
      "is_verified_same_day": "If the shift is verified the same day it was worked, then TRUE",
      "has_nfc_tag": "If the facility has NFC tags enabled, then TRUE",
      "has_left_facility_geofence": "If the worker left the facility geofence during the shift, then TRUE",
      "has_sedation_experience": "If the shift requires sedation experience, then TRUE",
      "has_tray_assembly_experience": "If the shift requires tray assembly experience, then TRUE",
      "pay_inheritance_level": "The pay level that the shift inherited parameters from (the MSA level are market pricing parameters, the facility level are from HCF-pricing parameters, etc)",
      "hazard_charge": "If hazard pay is offered by facility, then this is the harzard charge for the facility",
      "max_charge_credit": "This is set when we apply max charge caps to the shift",
      "base_charge_rate": "Charge rate before any differentials are applied",
      "api_charge_rate": "Charge and pay breakdown when pay is configured",
      "time_differential": "Charge and pay breakdown when pay is configured",
      "holiday_differential": "Charge and pay breakdown when pay is configured",
      "manual_override": "Charge and pay breakdown when pay is configured",
      "hazard_pay": "If hazard pay is offered by facility, then this is that additional pay",
      "configured_pay": "Charge and pay breakdown when pay is configured",
      "holiday_pay": "Additonal pay for when shift is holiday shift",
      "rush_fee": "Charge and pay breakdown when pay is configured",
      "workplace_rating": "Rating of the facility/workplace (1-5 stars) that posted the shift, if available",
      "worker_rating": "Rating of the worker (1-5 starts) that worked the shift, if applicable",
      "api_pay": "Charge and pay breakdown when pay is configured",
      "base_pay": "Charge and pay breakdown when pay is configured",
      "boost_pay": "Additional amount to pay if the worker is eligible for boost pay related to streak rewards",
      "urgent_pay": "Additional amount to pay if the shift is an urgent shift",
      "nurse_pay_breakdown": "pay breakdown for shifts for HCPs with NURSE (LVN+RN) qualification",
      "nurse_charge_breakdown": "charge breakdown for shifts for HCPs with NURSE (LVN+RN) qualification",
      "pay": "Hourly pay of the shift for the worker",
      "charge": "Hourly charge of the shift for the facility",
      "shift_length": "Length of the shift, in hours",
      "net_pay": "Total net pay of the shift (i.e. pay * shift_length) for the worker",
      "net_charge": "Total net charge of the shift (i.e. charge * shift_length) for the facility",
      "net_revenue": "Total net revenue of the shift (i.e. net_charge - net_pay)",
      "clock_in_longitude": "Longitude of the worker when they clocked into the shift",
      "clock_in_latitude": "Latitude of the worker when they clocked into the shift",
      "clock_out_longitude": "Longitude of the worker when they clocked out of the shift",
      "clock_out_latitude": "Latitude of the worker when they clocked out of the shift",
      "lunch_out_longitude": "Longitude of the worker when they punched out to lunch",
      "lunch_out_latitude": "Latitude of the worker when they punched out to lunch",
      "lunch_in_longitude": "Longitude of the worker when they punched back in from lunch",
      "lunch_in_latitude": "Latitude of the worker when they punched back in from lunch",
      "lunch_skip_longitude": "If the worker skipped lunch, indicated their longitude at that point in time",
      "lunch_skip_latitude": "If the worker skipped lunch, indicated their latitude at that point in time",
      "shift_poster_name": "Name of the user who posted the shift",
      "shift_poster_type": "Type of the user who posted the shift, either can be EMPLOYEE or WORKPLACE_USER",
      "shift_start_at": "Start timestamp of the shift in UTC",
      "shift_end_at": "End timestamp of the shift in UTC",
      "updated_at": "timestamp of when the record was last updated",
      "created_from": "Can be used to determine source of shift creation. With Maple Integration we allow syncing of shift created on Maple to CBH",
      "created_at": "Timestamp of when the record was created",
      "created_week": "The date of the week that the shift was created, with the week starting on Mondays",
      "cancelled_at": "Timestamp of when the shift was cancelled, if applicable",
      "request_replacement_at": "Timestamp of when a replacement worker was requested by facility",
      "left_facility_geofence_at": "Timestamp of when a worker left the facility based on the geofence coordinates of the facility",
      "arrived_facility_geofence_at": "Timestamp of when a worker arrived at the facility based on the geofence coordinates of the facility",
      "timecard_created_at": "Timestamp that a corresponding timecard was created, if applicable",
      "verified_at": "Timestamp of when the shift was verified, if applicable",
      "clock_in_at": "Timestamp of when a worker clocked into the shift, if applicable",
      "clock_out_at": "Timestamp of when a worker clocked out of the shift, if applicable",
      "lunch_in_at": "Timestamp of when a worker clocked in from lunch, if applicable",
      "lunch_out_at": "Timestamp of when a worker clocked out to lunch, if applicable",
      "lunch_skip_created_at": "No additional info about this field",
      "priority_till_at": "No additional info about this field",
      "maple_integration_id": "If the shift was created via Maple, this is the ID of the shift in the Maple platform",
      "ingested_at": "{ doc(\"ingested_at\") }",
      "loaded_at": "{ doc(\"loaded_at\") }"
    }
  },
  "HCP_Future_shifts_booked": {
    "description": "",
    "columns": {}
  },
  "farmed_last_week": {
    "description": "",
    "columns": {}
  },
  "live_shift_msa_percentiles_fin": {
    "description": "",
    "columns": {}
  },
  "fct_amazon_connect__queue_metrics": {
    "description": "Amazon Connect metrics for customer ops queues. This data is retrieved from the getmetrics API, and is limited by what the API provides",
    "columns": {
      "queue_metric_id": "Unique ID for the queue metric record",
      "queue_id": "Unique ID of the queue",
      "queue_name": "Display name of the queue",
      "queue_description": "Text description of the queue purpose and handling requirements",
      "queue_metric_start_time": "Starting time of the metric period",
      "queue_metric_end_time": "Ending time of the metric period",
      "abandonment_rate": "Percentage of incoming calls abandoned while waiting in queue before being answered",
      "agent_adherent_time": "Total time agents spent actively handling contacts while clocked in",
      "agent_answer_rate": "Percentage of contacts answered by agents versus abandoned or given up on by customer",
      "agent_non_adherent_time": "Total time agents were clocked in but not available to handle contacts",
      "agent_non_response": "Number of contacts agents did not respond to by answering, declining, or going unavailable",
      "agent_non_response_without_customer_abandons": "Number of unanswered contacts not including those abandoned by the customer",
      "agent_schedule_adherence": "Percentage of time agents were clocked in during their scheduled work hours",
      "agent_scheduled_time": "Total scheduled work time for agents handling this queue across the report period",
      "avg_abandon_time": "Average wait time of abandoned calls",
      "avg_active_time": "Average time agents spent actively handling contacts",
      "avg_after_contact_work_time": "Average time agents spent doing after call wrap up work per contact",
      "avg_agent_connecting_time": "Average time it took for agents to answer contacts after being routed",
      "avg_agent_pause_time": "Average time agents spent in pause state per pause event",
      "avg_contact_duration": "Average duration of inbound contacts including hold time",
      "avg_conversation_duration": "Average time agents spent talking to customers during contacts",
      "avg_dials_per_minute": "Average number of outbound call attempts agents made per minute",
      "avg_flow_time": "Average duration contacts spent flowing through IVR, routing, queues before disconnecting",
      "avg_greeting_time_agent": "Average duration of agents' greetings when answering contacts",
      "avg_handle_time": "Average time agents spent handling each contact from answer to disconnect",
      "avg_hold_time": "Average duration contacts were placed on hold by agents",
      "avg_hold_time_all_contacts": "Average hold time including contacts never placed on hold",
      "avg_holds": "Average number of times agents placed contacts on hold",
      "avg_interaction_and_hold_time": "Average handle plus hold time per contact",
      "avg_interaction_time": "Average time agents interacted with customers per contact",
      "avg_interruptions_agent": "Average number of interruptions agents experienced per contact",
      "avg_interruption_time_agent": "Average duration of interruptions for agents while handling contacts",
      "avg_non_talk_time": "Average time agents spent not talking to customers per contact",
      "avg_queue_answer_time": "Average wait time of answered calls from entering queue to agent answer",
      "avg_resolution_time": "Average duration from contact creation to resolution in queue",
      "avg_talk_time": "Average time agents spent talking to customers per contact",
      "avg_talk_time_agent": "Average talk time from the agent side per contact",
      "avg_talk_time_customer": "Average talk time from the customer side per contact",
      "avg_wait_time_after_customer_connection": "Average time answered calls waited with customer connected but no agent yet",
      "contacts_created": "Total contacts created and entering the queue",
      "contacts_handled": "Total contacts answered by agents",
      "contacts_handled_by_connected_to_agent": "Total contacts transferred to and handled by another agent",
      "contacts_hold_abandons": "Total contacts abandoned by customer while on hold",
      "contacts_on_hold_agent_disconnect": "Total contacts where agent disconnected while customer was on hold",
      "contacts_on_hold_customer_disconnect": "Total contacts where customer disconnected while on hold",
      "contacts_put_on_hold": "Total contacts placed on hold by an agent at least once",
      "contacts_transferred_out_external": "Total contacts transferred to an external number by agents",
      "contacts_transferred_out_internal": "Total contacts transferred to another internal queue by agents",
      "contacts_queued": "Total contacts waiting in queue",
      "contacts_queued_by_enqueue": "Total contacts entering the queue via enqueue flow",
      "contacts_transferred_out": "Total contacts transferred out of the queue by agents",
      "contacts_transferred_out_by_agent": "Total contacts transferred to another agent by an agent",
      "contacts_transferred_out_from_queue": "Total contacts transferred out of the queue automatically via configuration",
      "flows_outcome": "Total number of final flow outcomes reached",
      "flows_started": "Total number of contact flows started",
      "human_answered_calls": "Total contacts answered by agents versus by an automated system",
      "max_flow_time": "Longest time a contact spent traversing the system from creation to resolution",
      "max_queued_time": "Longest time a contact spent waiting in queue",
      "min_flow_time": "Shortest time a contact spent traversing the system from creation to resolution",
      "percent_contacts_step_expired": "Percentage of contacts exiting the system due to a timeout configured for the contact flow",
      "percent_contacts_step_joined": "Percentage of contacts traversing through a particular step in the contact flow",
      "percent_non_talk_time": "Percentage of handle time agents spent not talking to customers",
      "percent_talk_time": "Percentage of handle time agents spent talking to customers",
      "percent_talk_time_agent": "Percentage of handle time counted as talk time from the agent side",
      "percent_talk_time_customer": "Percentage of handle time counted as talk time from the customer side",
      "service_level": "Percentage of contacts answered within a defined service level threshold time",
      "step_contacts_queued": "Total contacts that reached a particular step of the inbound contact flow",
      "sum_after_contact_work_time": "Total after call work time for all contacts",
      "sum_connecting_time_agent": "Total time agents spent connecting to contacts",
      "contacts_abandoned": "Total contacts abandoned by customers while waiting in queue",
      "sum_contacts_abandoned_in_x": "Total contacts abandoned before a configured service level threshold time",
      "sum_contacts_answered_in_x": "Total contacts answered before a configured service level threshold time",
      "sum_contact_flow_time": "Total duration of all contacts traversing the system",
      "sum_contacts_disconnected": "Total contacts ended by customer or agent disconnect",
      "sum_handle_time": "Total handle time for all contacts",
      "sum_hold_time": "Total hold time for all contacts",
      "sum_interaction_and_hold_time": "Total handle plus hold time for all contacts",
      "sum_interaction_time": "Total interaction time between agents and contacts",
      "sum_retry_callback_attempts": "Total number of callback attempts made to retry reaching resolved contacts"
    }
  },
  "sales_opportunity_funnel": {
    "description": "",
    "columns": {}
  },
  "fct_docs_requirement_mappings": {
    "description": "Fact table containing the mappings between the document requirements and the various worker/workplaces that require them. Each row represents a unique entity (which state/location requires this documentation, what type of workplace requires this documentation, and what type of worker requires this documentation) based on the requirement.",
    "columns": {
      "req_mapping_line_id": "Primary key, unique identifier for the requirement mapping and the unique combination of fields that require this (i.e. a combination betwee the original mapping id, required_by, workplace_type, and worker_type)",
      "req_mapping_id": "The original mapping ID from the source data coming from the CBH app. This is included to audit records back to stg_docs__docs_requirement_mappings, but most likely not needed for analysis.",
      "req_id": "The requirement ID, this maps to dim_docs_requirements",
      "required_by": "The location that requires this document requirement (i.e. CBH, state, or in the case of workplace requirements, this is the workplace ID)",
      "req_level": "The requirement level (i.e. if this is required globally, specifically required by a facility (HCF), etc.). This field will determine what is available in the required_by field",
      "workplace_type": "The workplace type for the requirement",
      "worker_type": "The worker type fo the requirement",
      "is_archived": "If the requirement is archived, the TRUE",
      "is_required_for_booking": "If the requirement is required to book a shift, then TRUE",
      "is_deleted": "Flag indicating whether the record has been marked as deleted",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated"
    }
  },
  "fct_home_health_visits": {
    "description": "Fact table for visits from the home health service\n",
    "columns": {
      "visit_id": "Visit ID",
      "booked_at": "Booked at",
      "booked_worker_id": "Booked worker ID",
      "charge_rate_in_minor_units": "Charge rate in minor units",
      "confirmed_visit_date": "Confirmed visit date",
      "created_at": "Created at",
      "days_of_week": "Days of week availability",
      "deadline": "Deadline",
      "details": "Details",
      "discharge_date": "Discharge date",
      "display_id": "Display id",
      "duration_in_weeks": "Duration in weeks",
      "estimated_duration": "Estimated duration",
      "estimated_start_time": "Estimated start time",
      "interested_workers_ids": "Interested workers IDs",
      "invited_workers_ids": "Invited workers IDs",
      "invited_workers_names": "Invited workers names",
      "pay_rate_in_minor_units": "Pay rate in minor units",
      "pended_at": "Pended at",
      "pending_visit_reason": "Pending visit reason",
      "pricing_type": "Pricing type can be PER_VISIT or PER_HOUR",
      "status": "Visit Occurrence status",
      "visit_type": "Visit type",
      "type_of_care": "Type of care can be HOME_HEALTH or HOSPICE",
      "visits_per_week": "Visits per week",
      "worker_req": "Worker req",
      "worker_id": "Worker ID",
      "workplace_id": "Workplace ID is the same facility ID",
      "case_id": "Case ID",
      "patient_id": "Patient ID"
    }
  },
  "shift_transaction_chain": {
    "description": "",
    "columns": {}
  },
  "sales_facility_stats": {
    "description": "",
    "columns": {}
  },
  "int_docs_requirement_mapping_logs_weekly": {
    "description": "Intermediate table containing weekly snapshots of changes to docs requirement mappings",
    "columns": {
      "docs_req_mapping_logs_snapshot_id": "Primary Key, unique identifier to the weekly requirement mapping snapshots. Created from the combination of snapshot_week and req_mapping_log_id",
      "req_mapping_log_id": "Requirement mapping log ID",
      "req_mapping_id": "Requirement mapping ID",
      "req_id": "Unique identifier for the requirement",
      "new_value": "The updated change to the Requirement mapping",
      "prev_value": "The previous value to the Requirement mapping",
      "removed_value": "The removed value to the Requirement mapping, if applicable",
      "new_is_archived": "Derived from the new_value column, this is the updated is_archived field",
      "new_hcf_type": "Derived from the new_value column, this is the updated hcf_type field",
      "new_hcp_type": "Derived from the new_value column, this is the updated hcp_type field",
      "new_req_level": "Derived from the new_value column, this is the updated req_level field",
      "new_required_by": "Derived from the new_value column, this is the updated required_by field",
      "new_is_required_for_booking": "Derived from the new_value column, this is the updated new_is_required_for_booking field",
      "new_validity": "Derived from the new_value column, this is the updated validity field",
      "req_mapping_start_date": "When the requirement record was updated and active from",
      "req_mapping_end_date": "When the requirement record was updated until and active to",
      "req_mapping_start_week": "The week (starting on Sunday) of the req_start_date",
      "req_mapping_end_week": "The week (starting on Sunday) of the req_end_date",
      "snapshot_week": "Week of the snapshot for when the requirement was active"
    }
  },
  "hcp_activation_cohort_revenue_retention_monthly": {
    "description": "",
    "columns": {}
  },
  "monthly_hcf_growth_accounting": {
    "description": "",
    "columns": {}
  },
  "shift_fill_rate": {
    "description": "",
    "columns": {}
  },
  "pa_dashboard_FC_FCFs_and_Cancels_by_Open_Shifts_Priority_Access_Pilot_MSAs": {
    "description": "",
    "columns": {}
  },
  "hcf_first_shifts_and_reactivations": {
    "description": "Listing of all instances where a facility posted its first shift, or resumed posting after at least one full calendar month lapse\n",
    "columns": {
      "workplace_shift_date_id": "unique combination of workplace_id and activation date",
      "workplace_id": "ID of the salesforce account for th HCF",
      "workplace_salesforce_id": "ID of the salesforce account for th HCF",
      "workplace_type": "type of HCF as categorized in CBH app",
      "activation_date": "date of the activation",
      "activation_type": "whether the activation was the first ever shift or a reactivation",
      "closing_opportunity_id": "id of the opportunity in closest proximity to, but not after, the activation date. For reactivations only opportunities within 30 days will be pulled in",
      "opportunity_created_date": "date the closing opportunity was created in salesforce",
      "opportunity_close_date": "close date of the opportunity in salesforce",
      "pgmv_next_30d": "the posted GMV generated in the 30 day period following and including the reactivation"
    }
  },
  "investor_hcp_mom_created_at_cohort": {
    "description": "",
    "columns": {}
  },
  "lifetime_stats_cbh_accounts": {
    "description": "Lifetime statistics of CBH accounts. Will begin with Net Revenue and Number of Shifts Posted",
    "columns": {
      "sf_account_id": "Salesforce ID for each cbh account",
      "account_name": "Salesforce account name",
      "lifetime_net_revenue": "Lifetime Net Revenue Posted",
      "lifetime_shifts_posted": "Lifetime Shifts posted (verified)"
    }
  },
  "stg_app__facility_profiles": {
    "description": "Staging model for data coming from the application's facilityprofiles\n",
    "columns": {
      "workplace_id": "Primary key, unique indentifier for the workplace\n",
      "salesforce_id": "Salesforce account ID of the workplace. This ID ties back to the Salesforce account ID of the account in Salesforce tables.",
      "billing_specialist_id": "The ID of the billing specialist at the workplace",
      "type": "Type of workplace",
      "name": "Name of workplace",
      "email": "Email of workplace",
      "instant_book": "String describing whether or not instant book is enabled at the workplace",
      "rate_negotiation": "If ON, the the HCP can propose new rates for all the open shifts at this workplace. If OFF, then it will prevent HCPs from negotiating rates and will immediately reject and end any current negotiations that are open",
      "account_stage": "Current stage/status of the workplace'",
      "timezone": "Timezone of the workplace",
      "country": "Country of the workplace",
      "state": "State of the workplace",
      "state_code": "Two letter state code of the workplace",
      "csa": "The combined statistical area of the workplace",
      "msa": "The metropolitan statistical area of the workplace",
      "street_number": "Street number of the workplace",
      "street_name": "Street name of the workplace",
      "address": "Address (Street number and name) of the workplace",
      "postal_code": "Postal code of the workplace",
      "pricing_msa": "An MSA is a US Census Bureau-defined metropolitan statistical area used to define our areas of operation. Pricing MSAs are CBH-specific. While they typically map directly to MSAs, we may split large MSAs into multiple pieces. For example, the New York MSA is split into New York, NY and New York, NJ.",
      "city": "City of the workplace",
      "longitude": "Longitude of the workplace",
      "latitude": "Latitude of the workplace",
      "future_shifts_requested": "Number of future shifts requested by this workplace",
      "clock_in_method": "Potentially deprecated, all records are NULL",
      "time_system": "Potentially deprecated, all records are NULL",
      "is_test_account": "Always false as test accounts are filtered out in this staging models",
      "is_self_onboarded": "If the workplace self-onboarded, the TRUE",
      "is_manual_msa": "If the MSA of the worker is manually set, the TRUE",
      "verification_preference": "The shift verification preference of the workplace. Note that outbound verifcation may be deprecated in the future and may be already deprecated by the shift verification team.",
      "is_100_instant_pay_enabled": "If instant pay is enabled by the workplace to workers, then TRUE",
      "is_early_clockin_enabled": "If early clockin is enabled, then TRUE. This is related to the toggle in the app Facility drawer titled \"Prevent healthcare professionals from clocking in early?\"",
      "is_nfc_hcp_toggle_enabled": "No additional information about this field, however most records at FALSE, potentially indicating that this field could be deprecated.",
      "is_nfc_tag": "If the NFC tags are enabled for the workplace, then TRUE",
      "requires_lunch_break": "If the workplace requires workers to take a lunch break, then TRUE",
      "is_prospect": "If the facility is marked as a prospect in placement settings, then TRUE",
      "is_managed_by_parent_workplace": "If the facility is managed by a parent workplace, then TRUE",
      "rates": "Object containing the various set rates for the workplace per worker type",
      "cna_covid_charge": "Historically, the additional COVID charges for a CNA for the facility based on the covid status of the facility. Potentially to be deprecated. ",
      "lvn_covid_charge": "Historically, the additional COVID charges for a LVN for the facility based on the covid status of the facility. Potentially to be deprecated. ",
      "rn_covid_charge": "Historically, the additional COVID charges for a RN for the facility based on the covid status of the facility. Potentially to be deprecated. ",
      "np_covid_charge": "Historically, the additional COVID charges for a NP for the facility based on the covid status of the facility. Potentially to be deprecated. ",
      "caregiver_covid_charge": "Historically, the additional COVID charges for a Caregiver for the facility based on the covid status of the facility. Potentially to be deprecated. ",
      "hazard_pay": "Any additional hazard pay that the facility pays",
      "covid_active": "If COVID is currently active at the facility, then TRUE. Field is typically not accurate based on what the facility reports and may be deprecated in the future.",
      "late_cancellation_window": "The number of hours prior to a shift starting that a facility can cancel a shift and would be considered a late cancellation",
      "late_cancellation_fee_hours": "The number of hours paid to a worker by the facility if the facility cancelled a shift within the late cancellation window",
      "rush_fee_differential": "The additional amount to pay the worker if a rush fee period is applicable for the facility",
      "rush_fee_period": "The number of hours from the start time of a requested shift where it is considered for a rush fee differential",
      "net_terms": "Net invoicing terms for the facility",
      "dispute_terms": "How long the facility has after being invoiced to file a dispute.",
      "is_variable_charge_enabled": "Boolean field denoting facility's access to variable charge feature",
      "sent_home_charge_hours": "Number used for calculating caregiver compensation for sent-home or last-minute cancellations",
      "holiday_fee": "JSON that describes the pay increase this workplace gives for holidays",
      "has_pay_on_holiday": "True if the workplace has increased pay on all holidays, false otherwise",
      "has_pay_on_all_holidays": "JSON that describes the pay increase this workplace gives for holidays",
      "holiday_list": "List of holiday_ids that the workplace has holiday pay for\n",
      "rates_table": "Charge rate differentials for different shift types and days of the week.\nCharge Rates are calculated by taking base charge and adding these differentials as additional charges.",
      "is_quiz_workers_on_rules_enabled": "Signifies if the workplace has enabled the Quiz feature or not",
      "has_auto_declination_enabled": "Signifies if the workplace has enable the auto declination feature or not",
      "auto_declination_reason": "Reason for the enabling the auto-declination feature",
      "max_allowed_work_consecutive_hours": "Maximum number of consecutive hours a worker can work",
      "max_allowed_work_hours_per_week": "Maximum number of hours a worker can work in a week",
      "has_pending_notice_enabled": "Signifies if the admin has enabled the pending notice alert for the facility",
      "pending_notice_date": "Time at which the facility will move from enrolled status to Pending status, if facility donot clear their invoice dues",
      "parent_facility_id": "The parent of the facility",
      "has_location_awareness_enabled": "whether the workplace has the location awareness setting enabled\n",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "facility_last_logged_in_at": "When the facility last logged into CBH app/website",
      "covid_status_last_updated_at": "DEPRECATED",
      "is_deleted": "Flag indicating whether the record has been marked as deleted",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "last_min_call_offs_and_ncnss_and_verified_per_hcp": {
    "description": "",
    "columns": {}
  },
  "fct_zendesk__mqr_tickets": {
    "description": "Fact model for Zendesk's WOPS tickets. Uses Worker Ops group Ids to capture all Marketplace Quality and Reliability and Worker Ops Zendesk tickets. This model pivots and adds custom fields from the WOPS form to the ticket data. It can be used as a central table for WOPS and WOPS Zendesk tickets.\n",
    "columns": {
      "ticket_id": "unique identifier for zendesk tickets",
      "requester_id": "unique identifier for zendesk requesters\n",
      "assignee_id": "unique identifier for zendesk assignees\n",
      "worker_id": "identifier for workers in CBH\n",
      "workplace_user_id": "identifier for workplace users in CBH\n",
      "ticket_external_id": "external identifier for the zendesk ticket\n",
      "side_conversation_parent_id": "unique id of the side conversation the ticket was created from. Uses Zendesk's external Id to parse the side conversation id after the string 'ticket' occurence",
      "amazon_connect_contact_ids": "unique identifier for zendesk amazon connect contacts",
      "organization_id": "unique identifier for zendesk organizations\n",
      "group_id": "unique identifier for zendesk groups\n",
      "custom_status_id": "unique identifier for zendesk custom statuses\n",
      "brand_id": "unique identifier for zendesk brands\n",
      "ticket_form_id": "unique identifier for zendesk ticket forms\n",
      "collaborator_ids": "unique identifier for zendesk collaborators\n",
      "follower_ids": "unique identifier for zendesk followers\n",
      "email_cc_ids": "unique identifier for zendesk email cc\n",
      "followup_ids": "unique identifier for zendesk followups\n",
      "sharing_agreement_ids": "unique identifier for zendesk sharing agreements\n",
      "facility_id_s": "custom field for facility id in WOPS form\n",
      "shift_id_s": "custom field for shift id in WOPS form. This field is a string of shift ids separated by spaces, it removes all non-alphanumeric characters and only keeps the shift ids.\n",
      "replacement_worker_id_s": "custom field for replacement worker id in WOPS form\n",
      "original_worker_id_s": "custom field for original worker id in WOPS form\n",
      "requester_name": "name of the ticket requester\n",
      "requester_email": "email of the ticket requester\n",
      "assignee_name": "name of the ticket assignee\n",
      "assignee_email": "email of the ticket assignee\n",
      "assignee_supervisor": "supervisor of the ticket assignee\n",
      "assignee_agent_role": "role of the ticket assignee agent in their team/roster\n",
      "group_name": "name of the zendesk group the ticket is assigned to\n",
      "ticket_form_name": "name of the zendesk ticket form the ticket was created with\n",
      "channel": "channel the ticket was created from\n",
      "source_rel": "The relationship type from the ticket source metadata (e.g., 'follow_up') extracted from via_channel.",
      "original_ticket_id": "The original ticket ID referenced in follow-up conversations, extracted from via_channel.source.from.ticket_id.",
      "status": "status of the ticket\n",
      "priority": "priority of the ticket\n",
      "recipient": "address that received of the ticket\n",
      "description": "description of the ticket\n",
      "ticket_type": "type of the ticket\n",
      "ticket_tags_raw": "tags on the ticket\n",
      "ticket_tags": "tags on the ticket\n",
      "rating_reason": "reason for the rating\n",
      "provided_score": "score provided by the requester\n",
      "provided_comment": "comment provided by the requester\n",
      "is_ultimate_bot": "whether the ticket is handled by the ultimate bot",
      "scenario": "scenario recognized by the ultimate bot",
      "fallback": "fallback type if the ultimate bot has handed off the ticket",
      "is_chat_to_web": "If the ticket is converted to a web ticket after 30 minutes",
      "resolution_type": "Resolution type category for the self served tickets by the bot",
      "resolution": "Resolution for the self served tickets by the bot",
      "is_dropped_chat": "indicates if the ticket was a dropped chat, depending on if the ticket tags contain the tag '20mins_to_chat'\n",
      "is_wei_zap": "indicates if the ticket was a WEI ZAP ticket, depending on if the ticket tags contain the tag 'wei_triage_zap'\n",
      "vertical": "indicated which vertical the ticket is belonged to.\n",
      "escalation_team": "team that the ticket was escalated to\n",
      "escalating_agent": "agent that escalated the ticket\n",
      "is_payment_needed": "indicates if the ticket is a payment ticket\n",
      "waiver_request_driver": "Type of the Waiver Request that created the ticket\n",
      "waiver_request_resolution": "Resolution of the Waiver Request that created the ticket\n",
      "attendance_waiver_criteria": "Criteria of the Attendance Waiver that created the ticket\n",
      "dispute_acceptance_criteria": "value of custom field for dispute acceptance criteria in WOPS form\n",
      "product_help_category": "value of custom field for product help category in WOPS form\n",
      "experiment_type_a": "value of custom field for the experiment the ticket is associated with (Internal Field)\n",
      "general_assistance_category_a": "value of custom field for general assistance category in WOPS form (Internal Field)\n",
      "stripe_instant_pay_type": "value for conditional form field stripe_instant_pay_type when strip payment option is selected in general_assistance_category_a\n",
      "ip_overcharge_amount": "value for conditional form field ip_overcharge_amount when ip overcharge option is selected in stripe_instant_pay_type\n",
      "ccb_reason": "Reason for Clipboard Cares Bonus\n",
      "ccb_payment": "Payment for Clipboard Cares Bonus\n",
      "wops_ticket_type_a": "value of custom field for WOPS ticket type in WOPS form (Internal Field)\n",
      "wops_callback_category_a": "value of custom field for WOPS callback category in WOPS form (Internal Field)\n",
      "geofence_update_reason_a": "value of custom field for geofence update reason in WOPS form. Represents the reason for the geofence update (Internal Field)\n",
      "ust_resolution_a": "value of custom field for UST resolution in WOPS form. Represents the resolution for the UST case (Internal Field)\n",
      "unassign_resolution_a": "value of custom field for unassign resolution in WOPS form. Represents the resolution for the unassign case (Internal Field)\n",
      "facility_issue_sop_l1_a": "value of custom field for facility issue SOP L1 in WOPS form. Represents the first level of the facility issue being handled (Internal Field)\n",
      "facility_issue_sop_l2_a": "value of custom field for facility issue SOP L2 in WOPS form. Represents the second level of the facility issue being handled (Internal Field)\n",
      "who_worked_the_shift_a": "value of custom field for who worked the shift in WOPS form. Represents the worker who worked the shift (Internal Field)\n",
      "dispute_driver_a": "value of custom field for dispute driver in WOPS form. Represents the reason for the dispute initiated by the worker (Internal Field)\n",
      "documents_type_a": "value of custom field for documents type in WOPS form. Represents the type of documents required in the document review (Internal Field)\n",
      "document_review_a": "value of custom field for document review in WOPS form. Represents the resolution for the document review case (Internal Field)\n",
      "other_sop_a": "value of custom field for other SOP in WOPS form. Represents other SOPs not present in the custom fields list of choices (Internal Field)\n",
      "unassign_category_a": "value of custom field for unassign category in WOPS form. Represents the category of the shift unassign case (Internal Field)\n",
      "false_ns_reason_facility_a": "value of custom field for false NS reason facility in WOPS form. Represents the reason for the false No Show case (Internal Field)\n",
      "false_fraud_flag_reason_a": "value of custom field for false fraud flag reason in WOPS form. Represents the reason for the false fraud flag case (Internal Field)\n",
      "false_fraud_flag_resolution_a": "value of custom field for false fraud flag resolution in WOPS form. Represents the resolution for the false fraud flag case (Internal Field)\n",
      "false_ns_reason_location_a": "value of custom field for false NS reason location in WOPS form. Represents the reason for the false No Show case being a location issue (Internal Field)\n",
      "urgent_shifts_type_a": "value of custom field for urgent shifts type in WOPS form. Represents the type of the urgent shift (Internal Field)\n",
      "reactivation_resolution_a": "value of custom field for reactivation resolution in WOPS form. Represents the resolution for the reactivation case (Internal Field)\n",
      "rw_sent_home_pay_escalation_needed": "value of custom field for RW sent home pay in WOPS form. Represents the pay for the replacemet worker that was sent home (Internal Field)\n",
      "dnr_request_type_a": "value of custom field for DNR request type in WOPS form. Represents the type of the DNR request (Internal Field)\n",
      "dnr_accept_reason_a": "value of custom field for DNR accept reason in WOPS form. Represents the reason for accepting the DNR request (Internal Field)\n",
      "geofence_category_a": "value of custom field for geofence category in WOPS form. Represents the category of the geofence update (Internal Field)\n",
      "dnr_resolution_a": "value of custom field for DNR resolution in WOPS form. Represents the resolution for the DNR case (Internal Field)\n",
      "timesheet_reversal_category_a": "value of custom field for timesheet reversal category in WOPS form. Represents the category of the timesheet reversal case\n",
      "worker_pushback_a": "value of custom field for worker pushback in WOPS form. Represents if the worker pushed back on the dispute resolution (Internal Field)\n",
      "legal_regulatory_threat_a": "value of custom field for legal regulatory threat in WOPS form. Represents if the case is a legal or regulatory threat (Internal Field)\n",
      "app_issue_sop_a": "value of custom field for app issue SOP in WOPS form. Represents whether the issue is related to the app (Internal Field)\n",
      "worker_emergency_sop_a": "value of custom field for worker emergency SOP in WOPS form. Represents whether the case is related to a worker emergency (Internal Field)\n",
      "dispute_resolution_a": "value of custom field for dispute resolution in WOPS form. Represents the resolution for the dispute case (Internal Field)\n",
      "product_feature_a": "Product feature related to the ticket.\n",
      "payments_category_b": "value of custom field for payments category in WOPS form. Represents the category of the payments ticket\n",
      "is_first_incident": "value of custom field for first incident in MQR form. Represents if the ticket is the first incident of the worker\n",
      "paycharge_rate_issue_type_c": "value of custom field for paycharge rate issue type in WOPS form. Represents the type of the pay or charge rate issue in the payments ticket\n",
      "incorrect_payment_received_type_c": "value of custom field for incorrect payment received type in WOPS form. Represents the type of the incorrect payment received issue in the payments ticket\n",
      "contact_type": "value of custom field for contact type in WOPS form. Represents the type of the contact when the payments ticket is created\n",
      "payment_timesheet_status_c": "value of custom field for payment timesheet status in WOPS form. Represents the status of the payment timesheet in the payments ticket\n",
      "urgent_shift_c": "value of custom field for urgent shift in WOPS form. Conditional boolean, only when Cancellation Pay or Sent Home Pay is selected within Payments Category\n",
      "fcm_outcome_c": "value of custom field for fcm outcome in WOPS form. Conditional boolean, only when Sent Home Pay is selected within Payments Category\n",
      "dispute_resolution_c": "value of custom field for dispute resolution in WOPS form. Conditional boolean, only when Cancellation Pay or Sent Home Pay is selected within Payments Category\n",
      "reopens": "number of times the ticket was reopened\n",
      "payment_processed": "value of custom field for payment processed in WOPS form, represents the type of payment processed when the payments ticket is created\n",
      "a_ust_actioned_in_app": "value of custom field for ust actioned in app in WOPS form, represents whether ust is actioned in app or not\n",
      "deactivation_reason": "value of custom field for deactivation reason in WOPS form, represents the reason for deactivation\n",
      "reason_for_call": "value of custom field for reason for call in WOPS form, represents the reason for call\n",
      "rr_action_taken": "value of custom field for rr action taken in WOPS form, represents whether the action is taken or not\n",
      "replies": "number of replies on the ticket\n",
      "reply_time_in_minutes": "time taken to reply to the ticket in minutes\n",
      "first_resolution_time_in_minutes": "time taken to resolve the ticket for the first time in minutes\n",
      "full_resolution_time_in_minutes": "time taken to resolve the ticket in minutes\n",
      "handle_time": "time taken to handle the ticket in minutes\n",
      "last_touch_handle_time": "time taken to handle since the last touch on the ticket in minutes\n",
      "connect_handle_time_total_min": "total handle time of the amazon connect call in minutes",
      "connect_handle_time_last_call_min": "handle time of the last amazon connect call in minutes",
      "external_consult_escalation_team": "The team an external consult escalation is assigned to\n",
      "created_at": "\"Timestamp of when the record was created\"",
      "initially_assigned_at": "timestamp of when the ticket was initially assigned\n",
      "assigned_at": "timestamp of when the ticket was assigned\n",
      "solved_at": "timestamp of when the ticket was solved\n",
      "generated_timestamp": "timestamp of when the ticket was generated\n",
      "updated_at": "\"timestamp of when the record was last updated\"",
      "created_at_pst": "timestamp of when the ticket was created in PST\n",
      "initially_assigned_at_pst": "timestamp of when the ticket was initially assigned in PST\n",
      "assigned_at_pst": "timestamp of when the ticket was assigned in PST\n",
      "solved_at_pst": "timestamp of when the ticket was solved in PST"
    }
  },
  "app_priority_shift_assignment_stg": {
    "description": "",
    "columns": {}
  },
  "investor_monthly_new_hcp_revenue": {
    "description": "",
    "columns": {}
  },
  "zd_tickets_to_fields_mapping": {
    "description": "-- Legacy -- Intermediate model that maps Zendesk tickets to fields",
    "columns": {
      "id": "The unique identifier for each Zendesk ticket. This ID is used to link multiple field values to the same ticket.",
      "field_id": "The unique identifier for each field in a Zendesk ticket. This ID links each field value to its corresponding field.",
      "val": "The actual value entered for the field on the Zendesk ticket. For example, the subject line text or date a ticket was opened.",
      "title": "The name or label of the field. For example, 'Subject' or 'Description'.",
      "type": "The data type of the field value, such as 'text' or 'date'. This indicates how the field value should be interpreted and handled."
    }
  },
  "int_invoices__latest_distinct": {
    "description": "Table containing the latest, distinct invoices based on Invoiced logger data",
    "columns": {
      "invoice_id": "Unique invoice identifier for the latest invoice based on logging events",
      "invoice_number": "Invoice number displayed on the invoice (i.e. reference number)",
      "customer_id": "Customer ID",
      "sf_account_id": "Salesforce account ID",
      "invoice_status": "Invoice state, one of draft, not_sent, sent, viewed, past_due, pending, paid, voided",
      "has_autopay": "When true, autopay is enabled. Defaults to false",
      "has_chase": "When true, chasing is enabled",
      "has_late_fees": "Whether an invoice has late fees associated to it",
      "is_closed": "When true, an invoice is closed and considered bad debt. No further payments are allowed",
      "is_draft": "When false, the invoice is considered outstanding, or when true, the invoice is a draft",
      "is_paid": "Whether an invoice has been paid in full",
      "currency_code": "3-letter ISO currency_code",
      "app_status": "Metadata app status",
      "sync_source": "Metadata sync source",
      "former_invoices": "Whether the invoice has previous invoices associated to it",
      "invoice_type": "Invoice type can be one of the following:\n\n| status         | description                                                               |\n|----------------|---------------------------------------------------------------------------|\n| original       | The invoice does not have any former invoices associated to it            |\n| regenerated    | The invoice has former invoices associated to it                          |",
      "payment_terms": "Payment terms for the invoice, i.e. 'NET 30'",
      "net_number": "Derived from the payment term, this is the net number associated to the payment terms, if applicable",
      "line_items": "An array of the line items within an invoice",
      "balance": "Balance owed on the invoice",
      "attempt_count": "Number of payment attempts",
      "subtotal": "Subtotal of the invoice",
      "late_fee_amount": "Portion of the total invoice amount that is late fees",
      "principal_amount": "Portion of the total invoice amount that is the principal",
      "total": "Total amount of the invoice",
      "days_from_date_sent": "Number of days since the invoice date",
      "days_from_due_date": "Number of days since the due date",
      "invoice_date": "Date of the invoice",
      "due_date": "Date payment is due by",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "expected_payment_date": "Expected payment date",
      "p2p_creation_date": "p2p creation date",
      "period_start_date": "Period start date",
      "period_end_date": "Period end date",
      "metadata": "Additional metadata about the invoice",
      "metadata_expected_payment_date": "Expected payment date derived from invoice metadata"
    }
  },
  "stg_docs__docs_requirement_mappings": {
    "description": "Staging table containing documentation requirement mappings between the requirement and the workplaces",
    "columns": {
      "req_mapping_id": "Primary key, unique identifier for the requirement mapping",
      "req_id": "Unique identifier for the requirement",
      "required_by": "An object containing all the workplaces that require this requirement",
      "req_level": "The requirement level (i.e. if this is required globally, specifically required by a facility (HCF), etc.)",
      "workplace_type": "The workplace/facility type for the requirement",
      "worker_type": "The worker type fo the requirement",
      "is_archived": "If the requirement is archived, the TRUE",
      "is_required_for_booking": "If the requirement is required to book a shift, then TRUE",
      "is_deleted": "If the requirement was deleted by the source, the TRUE",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake",
      "modified_at": "Timestamp of when the record was last modified in the source system"
    }
  },
  "pa_dashboard_Assigned_Claimed_Unfilled_Next_6_Weeks": {
    "description": "",
    "columns": {}
  },
  "app_priority_shift_assignment_flatten_stg": {
    "description": "",
    "columns": {}
  },
  "fct_klaus__reviews": {
    "description": "This fact model combines and flattens the reviews, ratings, and time tracking data for Klaus reviews. It includes detailed information about the reviews, such as ticket details, review metadata, ratings, and time tracking periods.",
    "columns": {
      "review_score_id": "The unique identifier for the ticket and category id for the associated review.",
      "ticket_id": "The unique identifier for the ticket associated with the review.",
      "review_id": "The unique identifier of the review.",
      "scorecard_id": "The unique identifier of the scorecard used for the review.",
      "rating_category_id": "The unique identifier of the rating category.",
      "review_url": "The URL of the review in Klaus.",
      "ticket_url": "The URL of the ticket in the external system (e.g., Zendesk).",
      "source_type": "The source type of the ticket (e.g., Zendesk).",
      "workspace_id": "The unique identifier of the workspace in Klaus.",
      "review_comment": "The review json file containing the details regarding the review.",
      "reviewee_email": "The email address of the person being reviewed.",
      "reviewee_name": "The name of the person being reviewed.",
      "reviewee_avatar": "The avatar URL of the person being reviewed.",
      "reviewer_email": "The email address of the person who performed the review.",
      "reviewer_name": "The name of the person who performed the review.",
      "reviewer_avatar": "The avatar URL of the person who performed the review.",
      "scorecard_name": "The name of the scorecard used for the review.",
      "rating_category_name": "The name of the rating category.",
      "is_critical": "Indicates whether the rating category is critical.",
      "markdown_detail": "The markdown details that causes the score markdown",
      "rating_score": "The score given in the rating category.",
      "rating_weight": "The weight of the rating category.",
      "created_at_iso": "The ISO-formatted creation date of the review.",
      "updated_at_iso": "The ISO-formatted last updated date of the review.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "review_created_at": "The timestamp when the review was created.",
      "review_updated_at": "The timestamp when the review was last updated.",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system"
    }
  },
  "pa_dashboard_Undeleted_shifts_posted_per_facility_per_week": {
    "description": "",
    "columns": {}
  },
  "hcp_cohortized_mom_revenue_by_created_at": {
    "description": "",
    "columns": {}
  },
  "monthly_hcp_growth_accounting_by_agent": {
    "description": "",
    "columns": {}
  },
  "weekly_hcf_shift_churn": {
    "description": "",
    "columns": {}
  },
  "fct_placement_applications": {
    "description": "Fact table containing placement applications data, including details about placements and candidates.",
    "columns": {
      "placement_application_id": "Primary key, unique identifier for the placement application",
      "placement_id": "Identifier for the placement associated with the application",
      "placement_candidate_id": "Identifier for the candidate who applied for the placement",
      "status": "Status of the placement application: applied, rejected, or accepted",
      "applied_date": "Date when the application was submitted",
      "created_at": "Timestamp when the application record was created",
      "updated_at": "Timestamp when the application record was last updated",
      "ingested_at": "Timestamp when the application data was ingested into the system",
      "loaded_at": "Timestamp when the application data was loaded into the data warehouse",
      "workplace_id": "Identifier for the workplace associated with the placement",
      "worker_id": "Identifier for the worker associated with the placement candidate"
    }
  },
  "home_health_daily_workplace_churn": {
    "description": "Table that reports on workplace churn at the daily workplace grain for Home Healthcare and Hospice\n",
    "columns": {
      "daily_workplace_id": "Surrogate that is a combination of the workplace id and day\n",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "date_day": "The calendar day\n",
      "msa": "MSA of the workplace\n",
      "type": "The type of workplace\n",
      "csa": "CSA of the workplace\n",
      "state": "State where the workplace is located\n",
      "salesforce_id": "Salesforce account ID for the workplace\n",
      "salesforce_parent_id": "Salesforce account ID of the workplace's parent\n",
      "num_visits": "The number of visits for the workplace with start dates in the day\n",
      "cohort": "The day that the workplace first posted a visit\n",
      "is_first_visit_day": "If the date_day is also the day that the workplace first posted a visit\n",
      "initial_churn": "1 if the workplace is churned / churning for the first time, 0 otherwise\n",
      "is_activate_never_churned": "1 if the workplace posted at least one visits in the day and has never churned previously, 0 otherwise\n",
      "is_activate_reactivated": "1 if the workplace posted at least one visits in the day but has churned in a previous day, 0 otherwise\n",
      "reactivation_churn": "1 if the workplace is churned / churning for the second time or greater, 0 otherwise"
    }
  },
  "stg_app__placement_applications": {
    "description": "Staging model for data coming from the placement application table\n",
    "columns": {
      "placement_application_id": "Primary key, unique indentifier for the placement application\n",
      "placement_id": "A placement which is applied to\n",
      "placement_candidate_id": "A candidate who applied to\n",
      "workplace_id": "ID of the workplace associated with the application\n",
      "worker_id": "ID of the worker associated with the application\n",
      "status": "A placement application 's status: applied, rejected or accepted\n",
      "applied_date": "A date when application is applied to\n",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "session_number_mod": {
    "description": "",
    "columns": {}
  },
  "app_bonusespayments_stg": {
    "description": "",
    "columns": {}
  },
  "fct_zendesk__hcf_qa_tickets": {
    "description": "Fact model for HCF tickets which uses the HCF QA scorecard forms. These tickets represent Quality Assurance evaluations initiated by TLs and QAs for the agents. This model can be used as a central table for HCF's QA performance.\n",
    "columns": {
      "ticket_id": "unique identifier for the zendesk ticket\n",
      "requester_id": "Unique ID of the requester",
      "submitter_id": "Unique ID of the agent who submitted the ticket.",
      "assignee_id": "Unique ID of the agent assigned to the ticket.",
      "external_id": "The external ID of the ticket.",
      "organization_id": "The ID of the organization associated with the ticket.",
      "group_id": "The ID of the group associated with the ticket.",
      "custom_status_id": "The ID of the custom status associated with the ticket.",
      "brand_id": "The ID of the brand associated with the ticket.",
      "ticket_form_id": "The ID of the ticket form used to submit the ticket.",
      "collaborator_ids": "The IDs of collaborators on the ticket.",
      "follower_ids": "The IDs of followers on the ticket.",
      "email_cc_ids": "The IDs of users CC'd on emails for the ticket.",
      "followup_ids": "The IDs of followups on the ticket.",
      "sharing_agreement_ids": "The IDs of sharing agreements on the ticket.",
      "via_channel": "The channel the ticket came in from.",
      "requester_name": "Name of the auditor who created the ticket.",
      "requester_email": "Email of the auditor who created the ticket.",
      "assignee_name": "Name of the agent who was audited.",
      "assignee_email": "Email of the agent who was audited.",
      "recipient": "The recipient of the ticket.",
      "ticket_type": "The type of the ticket.",
      "subject": "The subject of the ticket.",
      "raw_subject": "The raw subject of the ticket.",
      "description": "The description of the issue provided in the ticket.",
      "status": "The status of the ticket.",
      "tags": "The tags associated with the ticket.",
      "custom_fields": "The custom fields associated with the ticket.",
      "satisfaction_rating": "The satisfaction rating given to the ticket.",
      "fields": "The fields associated with the ticket.",
      "priority": "The priority level of the ticket.",
      "ticket_url": "The URL of the ticket.",
      "has_incidents": "Whether the ticket has any associated incidents.",
      "is_public": "Whether the ticket is public.",
      "does_allow_channelback": "Whether channelback is allowed on the ticket.",
      "does_allow_attachments": "Whether attachments are allowed on the ticket.",
      "is_from_messaging_channel": "Whether the ticket came from a messaging channel.",
      "ticket_form": "The name of the ticket form used to submit the ticket.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "due_at": "The due date of the ticket.",
      "created_at_pst": "timestamp of when the ticket was created in PST\n",
      "initially_assigned_at_pst": "timestamp of when the ticket was initially assigned in PST\n",
      "due_at_pst": "timestamp of when the ticket is due in PST\n",
      "generated_timestamp": "The timestamp the ticket was generated.",
      "cf_customer_education_root_cause": "The customer education root cause",
      "cf_customer_experience_1_4": "The customer experience scoring criteria",
      "cf_customer_experience_1_4_root_cause": "The root cause for customer experience scoring criteria",
      "cf_resolution_1_4": "The customer resolution scoring criteria",
      "cf_resolution_1_4_root_cause": "The root cause for customer resolution scoring criteria",
      "cf_qat1_agent_email_address": "Email address of the agent being evaluated",
      "cf_evaluation_type": "Dropdown field indicating the type of evaluation (e.g., grade the grader, QA score, etc.)",
      "cf_customer_compliance_met_3_or_not_met_1": "The customer compliance scoring criteria",
      "cf_customer_compliance_met_3_or_not_met_1_root_cause": "The root cause for customer compliance scoring criteria",
      "cf_final_qa_score": "Sum of the QA score based on a weight logic",
      "cf_channel_of_ticket_being_evaluated": "Channel of the ticket being evaluated (e.g., Webform, Phone)",
      "cf_qa_evaluator_score": "Original score from the evaluator, needed for grade-the-grader evaluations only",
      "cf_ticket_being_evaluated": "Ticket number for the ticket being evaluated",
      "cf_delta_audit_the_auditor": "Difference between the Final QA Score and the QA Evaluator Score, only needed for grade-the-grader evaluations",
      "cf_internal_compliance_met_3_or_not_met_1": "The internal compliance scoring criteria",
      "cf_internal_compliance_met_3_or_not_met_1_root_cause": "The rooot cause for internal compliance scoring criteria",
      "cf_dispute_outcome": "The outcome of the dispute",
      "cf_feedback_score": "The feedback score provided by the QA. Uses the tag value associated with the custom field to parse out the score as a number.",
      "cf_ata_root_cause_gap": "The Root Cause gap of the ATA",
      "is_training_audit": "Whether the ticket is part of the training audit.",
      "cf_dispute_delta_hcf_qa_dispute": "The HCF delta of the dispute",
      "cf_dispute_root_cause": "The root cause of the dispute",
      "cf_final_qa_score_hcf_qa_dispute": "The final QA score provided for the dispute",
      "cf_core_behavior_s_being_disputed": "The core behaviours being disputed",
      "cf_dispute_requestor": "The requestor for the dispute",
      "cf_total_time_spent_sec": "The total time spent on resolving the ticket"
    }
  },
  "int_aggregate_worker_licenses_to_worker": {
    "description": "intermiedate model that aggregates worker licenses to the worker grain\n",
    "columns": {
      "worker_id": "primary key, unique id for the worker\n",
      "active_licenses": "JSON of active licenses that the worker holds"
    }
  },
  "attendance_policy_workers_stg": {
    "description": "DEPRECATED - Use stg_attendance_policy__workers if any analysis with worker attendance is needed. Note: dim_workers has attendance policy metrics integrated into the table and can also be used instead.",
    "columns": {
      "id": "Unique identifier (ID) for workers in attendance policy service\n",
      "user_id": "Worker's user_id in the main app",
      "name": "Worker's name",
      "msa": "Worker's MSA or Market name",
      "score": "Worker's current attendance score",
      "qualification": "Worker's current qualification preference",
      "status": "Worker's current status or stage in the application\n",
      "market_id": "Worker's current market or MSA ID\n",
      "created_at": "Time when the worker was created in the attendance policy app\n",
      "tmz": "Worker's timezone\n"
    }
  },
  "call_offs_to_verified": {
    "description": "",
    "columns": {}
  },
  "invoice_to_shift_and_line_item_mapping": {
    "description": "",
    "columns": {}
  },
  "shift_reviews_workplace_user_reviews_flatten_stg": {
    "description": "",
    "columns": {}
  },
  "stg_invoiced_api__contacts": {
    "description": "Staging table containing log of ingestions for contacts for the customers within Invoiced.com. Contains PII. This data is ingested via Dagster rather than Airbyte. Due to nature of ingestion, this data is only updated 1x a day.",
    "columns": {
      "contact_event_id": "Primary key, unique identifer to the contact event",
      "contact_id": "Unique identifer to the contact",
      "customer_id": "The customer in Invoiced.com that the contact is associated to",
      "contact_name": "Contact name",
      "title": "Contact's title",
      "department": "Contact's department",
      "address": "Contact's address (Address line 1)",
      "city": "Contact's city",
      "state": "Contact's state",
      "postal_code": "Contact's postal code",
      "country": "Contact's country",
      "email_address": "Contact's email address",
      "phone": "Contact's phone number",
      "is_primary": "When true the contact will be copied on any account communications",
      "is_sms_enabled": "When true the contact can be contacted via text message",
      "has_send_new_invoices_enabled": "When true the contact is sent new invoices on behalf of the customer that they are associated to",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the data was ingested in Dasgter"
    }
  },
  "stg_zendesk__tickets": {
    "description": "Staging model for zendesk tickets",
    "columns": {
      "ticket_id": "unique identifier for the zendesk ticket",
      "requester_id": "unique id of the ticket requester",
      "submitter_id": "unique id of the ticket submitter",
      "assignee_id": "unique id of the ticket assignee",
      "external_id": "external id assigned to the ticket, different from the user's external id",
      "side_conversation_parent_id": "unique id of the side conversation the ticket was created from. Uses Zendesk's external Id to parse the side conversation id after the string 'ticket' occurence",
      "organization_id": "unique id of the organization to which the ticket belongs",
      "group_id": "unique id of the group to which the ticket belongs",
      "custom_status_id": "unique identifier for the custom status of the ticket",
      "brand_id": "unique identifier for the brand of the ticket",
      "ticket_form_id": "unique identifier for the form that was used to create a ticket",
      "collaborator_ids": "ids of the collaborators on the ticket",
      "follower_ids": "ids of the followers of the ticket",
      "email_cc_ids": "ids of the users who are cc'd on the ticket",
      "followup_ids": "ids of the ticket followups on the ticket",
      "sharing_agreement_ids": "unique id for the sharing agreement\n",
      "via_channel": "json object containing metadate about the channel through which the ticket was created",
      "recipient": "recipient address of the ticket",
      "ticket_type": "type of the ticket",
      "subject": "subject of the ticket",
      "raw_subject": "raw subject of the ticket",
      "description": "description of the ticket",
      "status": "status of the ticket",
      "tags": "tags associated with the ticket",
      "custom_fields": "custom fields associated with the ticket",
      "satisfaction_rating": "satisfaction rating associated with the ticket",
      "fields": "JSON of field id to value mappings\n",
      "priority": "priority of the ticket",
      "ticket_url": "zendesk url of the ticket",
      "has_incidents": "boolean indicating whether the ticket has incidents",
      "is_public": "boolean indicating whether the ticket is public",
      "does_allow_channelback": "boolean field that indicates if the ticket allows channel back\n",
      "does_allow_attachments": "boolean field that indicates if the ticket allows attachments\n",
      "is_from_messaging_channel": "boolean field that indicates if the ticket is from a messaging channel\n",
      "created_at": "t \"Timestamp of when the record was created\"",
      "updated_at": "timestamp of when the record was last updated",
      "due_at": "Timestamp of when the ticket was due at\n",
      "generated_timestamp": "Timestamp of when the ticket was generated\n",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "add_friend_activity_stg": {
    "description": "",
    "columns": {}
  },
  "covid_active_intercom": {
    "description": "",
    "columns": {}
  },
  "timesheets_transferlogs_flags": {
    "description": "",
    "columns": {}
  },
  "fct_first_impressions_matter_automated_policy_runs": {
    "description": "This model stores the data for first impressions matter policy runs",
    "columns": {
      "automated_policy_run_id": "The id of the stored automated policy run",
      "policy_name": "The name of the policy being executed by this run (in this case FirstImpressionsMatter).",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "qualification": "Qualification title of an HCP",
      "segment": "Name of the metro-statistical area of this pricing market",
      "run_at": "The time at which this automated policy run was executed",
      "run_at_day": "The day on which this automated policy run was executed",
      "statistics_last_activation_at": "When was this workplace market last activated. An activation is the first facility shift's start or the first shift's start after a period of inactivity greater than 1 month.",
      "statistics_shifts_started": "The number of shifts started in the past week.",
      "statistics_filled_shifts_started": "The number of shifts filled in the past week.",
      "statistics_booked_shifts": "The number of shifts booked at the facility in the past week",
      "statistics_open_shifts": "The number of open shifts available at the facility in the past week",
      "statistics_total_booked_charge": "The total charge for shifts booked during the past week",
      "statistics_total_booked_revenue": "The total revenue for shifts booked during the past week",
      "statistics_market_booked_shifts": "The number of shifts booked at the market level in the past week",
      "statistics_market_open_shifts": "The number of open shifts available at the market level in the past week",
      "output_workplace_override_id": "The id of the stored output workplace override version. If null, the result from the run wasn't stored",
      "phase": "The current phase of the run",
      "intervention_start_at": "Date of the start of this intervention.",
      "iteration_number": "How many iterations have now been run for this intervention. Starts from 1.",
      "adjustment_weekday_base_multiplier": "For the First Impressions Matter policy, the multiplier (relative to market) applied to weekday base by this run.",
      "adjustment_weekend_base_multiplier": "For the First Impressions Matter policy, the multiplier (relative to market) applied to weekend base by this run.",
      "adjusted_margin_cap": "For the First Impressions Matter policy, the final margin cap that this run set.",
      "fill_rate": "The fill rate considered during this policy run",
      "book_rate": "The book rate considered during this policy run",
      "booked_take_rate": "The booked take rate considered during this policy run",
      "market_book_rate": "The market level book rate considered during this policy run",
      "market_margin_cap": "The market level margin cap at the time of the run",
      "market_weekday_base": "The market level weekday base at the time of the run",
      "market_weekend_base": "The market level weekend base at the time of the run",
      "has_workplace_overrides": "Whether the given workplace market had an workplace override at the time of the run",
      "workplace_margin_cap": "The workplace level margin cap at the time of the run",
      "workplace_weekday_base": "The workplace level weekday base at the time of the run",
      "workplace_weekend_base": "The workplace level weekend base at the time of the run",
      "current_margin_cap": "The current margin cap at the time of the run",
      "current_weekday_base": "The current weekday base at the time of the run",
      "current_weekend_base": "The current weekend base at the time of the run",
      "has_output_workplace_overrides": "Whether this automated policy run had its result stored in the database",
      "output_workplace_override_status": "Status of the output workplace_override",
      "output_margin_cap": "The output margin cap after the run",
      "output_weekday_base": "The output weekday base after the run",
      "output_weekend_base": "The output weekend base after the run"
    }
  },
  "int_survey_sparrow__responses": {
    "description": "Intermediate table that parses out flattened answers, tags, and variables from Survey Sparrow responses data.\n",
    "columns": {
      "response_answer_id": "A surrogate key generated to uniquely identify each response",
      "response_id": "The unique identifier for each survey response",
      "state": "The state of the survey response (e.g., completed, in progress)",
      "survey_id": "The unique identifier for the survey associated with the response",
      "contact_id": "The unique identifier for the contact who submitted the survey response",
      "start_time": "The timestamp when the survey response was started",
      "completed_time": "The timestamp when the survey response was completed",
      "device_name": "The name of the device used to submit the survey response",
      "device_type": "The type of the device used to submit the survey response",
      "airbyte_extracted_at": "The timestamp when the data was extracted by Airbyte",
      "tag_id": "The unique identifier for the tag associated with the survey response",
      "tag_name": "The name of the tag associated with the survey response",
      "survey_answer_value": "The value of the answer provided in response to the survey question",
      "survey_question_text": "The text of the survey question associated with the response",
      "question_id": "The unique identifier for the question associated with the response",
      "zd_ticket_id": "Zendesk Ticket ID (if available) extracted from the response variables",
      "zd_ticet_type": "Zendesk Ticket Type (if available) extracted from the response variables",
      "channel_name": "The name of the channel through which the survey response was submitted",
      "channel_status": "The status of the channel through which the survey was submitted",
      "nps_channel_name": "The name of the NPS channel associated with the survey response",
      "nps_channel_status": "The status of the NPS channel associated with the survey response"
    }
  },
  "sf_incident_stg": {
    "description": "",
    "columns": {}
  },
  "stg_stripe__balance_transactions": {
    "description": "Staging model for Stripe balance transactions, representing all monetary movements in the Stripe account, including payments, refunds, fees, reversals, and reserved funds. Integrates raw Stripe data with standardized field names and timestamps for analytics.",
    "columns": {
      "balance_transaction_id": "Unique identifier for the Stripe balance transaction record.",
      "amount": "Amount of the transaction in the smallest currency unit (e.g., cents for USD). Positive values are credits, negative are debits.",
      "currency": "Three-letter ISO currency code for the transaction (e.g., 'usd').",
      "description": "Freeform description of the transaction, often including context such as shift, refund, or bonus details.",
      "fee": "Total Stripe fee or charge deducted for this transaction, in the smallest currency unit.",
      "net": "Net amount after fees, in the smallest currency unit. Represents the actual impact on the Stripe balance.",
      "reporting_category": "Stripe reporting category, indicating the transaction's business purpose (e.g., 'transfer', 'transfer_reversal', 'fee', 'connect_reserved_funds').",
      "source": "Identifier of the original object or entity related to this transaction (e.g., transfer, refund, reserve transaction ID).",
      "status": "Current availability status of the transaction (e.g., 'available', 'pending').",
      "type": "Type of transaction as defined by Stripe (e.g., 'transfer', 'transfer_refund', 'reserve_transaction', 'topup', 'stripe_fee').",
      "available_at": "Timestamp when the funds from this transaction became available for payout in Stripe.",
      "created_at": "Timestamp of when the record was created",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "stg_app__shift_logs": {
    "description": "Staging model for data coming from the application's shift logs table\n",
    "columns": {
      "shift_log_id": "Primary key, unique identifier for the shift log events\n",
      "shift_id": "Identifier for the shift associated with the log event\n",
      "worker_id": "Identifier for the worker associated with the log event\n",
      "is_auto_assign_shift": "Boolean which tell if shift is is_auto_assign_shift at time shift log creation",
      "shift_block_id": "Shift block which the shift is a part of",
      "previous_shift_block_id": "Shift block which the shift was a part of",
      "workplace_id": "Identifier for the workplace associated with the shift log event\n",
      "admin_id": "Identifier for the admin user associated with the shift log event\n",
      "attendance_case_id": "Identifier for the attendance case associated with the shift log event\n",
      "agent_id": "Identifier for the agent associated with the shift log event\n",
      "performed_by_id": "Identifier for the user who performed the action associated with the shift log event\n",
      "workplace_worker_combination_id": "Identifier for the combination of workplace and worker associated with the shift log event\n",
      "workplace_cancelled_me_responder_id": "Identifier for the responder to the cancelled shift request associated with the shift log event\n",
      "worker_name": "Name of the worker associated with the shift log event\n",
      "worker_type": "Type of worker associated with the shift log event\n",
      "workplace_name": "Name of the workplace associated with the shift log event\n",
      "worker_account_stage": "Stage of the worker's account associated with the shift log event\n",
      "device_type": "Type of device used for the shift log event\n",
      "action": "Action performed in the shift log event\n",
      "sub_action": "Sub-action performed in the shift log event\n",
      "performed_by_type": "Type of user who performed the action associated with the shift log event\n",
      "reason_description": "Description of the reason for the action associated with the shift log event\n",
      "reason_type": "Type of reason for the action associated with the shift log event\n",
      "is_excused": "Boolean indicating if the shift log event is excused\n",
      "has_completed_one_week_suspension": "Boolean indicating if the worker has completed one week of suspension\n",
      "resolve_reason": "Reason for resolving the action associated with the shift log event\n",
      "mod_action": "Modified action associated with the shift log event\n",
      "search_mode": "Mode used for searching in the shift log event\n",
      "logs_notes": "Notes recorded in the shift log event\n",
      "is_approved_workplace_cancelled_me": "Boolean indicating if the cancelled shift request is approved\n",
      "workplace_cancelled_me_response_description": "Description of the response to the cancelled shift request associated with the shift log event\n",
      "four_hour_call_off": "1 if the worker called off the shift within four hours of the shift start time, 0 otherwise\n",
      "twenty_four_hour_cancel": "1 if the worker called off the shift within 24 hours of the shift start time, 0 otherwise\n",
      "seventy_two_hour_cancel": "1 if the worker called off the shift within 72 hours of the shift start time, 0 otherwise\n",
      "lead_time": "Lead time associated with the shift log event\n",
      "pay": "Pay associated with the shift log event\n",
      "charge": "Charge associated with the shift log event\n",
      "new_rate": "New rate associated with the shift log event\n",
      "previous_rate": "Previous rate associated with the shift log event\n",
      "rate_change_reason": "Reason for the rate change associated with the shift log event\n",
      "new_time": "New time associated with the shift log event\n",
      "previous_time": "Previous time associated with the shift log event\n",
      "time_change_reason": "Reason for the time change associated with the shift log event\n",
      "action_at": "Timestamp of the action associated with the shift log event\n",
      "created_at": "Timestamp of the creation of the shift log event\n",
      "created_week": "Week of creation of the shift log event\n",
      "shift_start_at": "Timestamp of the shift start associated with the shift log event\n",
      "event_at": "Timestamp of the event associated with the shift log event\n",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "first_shift_stats": {
    "description": "",
    "columns": {}
  },
  "fct_zendesk__hcf_cx_tickets": {
    "description": "Fact model for HCF tickets using the HCF CX evaluation forms. These tickets representCX evaluations for the zendesk tickets. This model serves as a central table for HCF's CX performance.\n",
    "columns": {
      "ticket_id": "Unique identifier for the Zendesk ticket.\n",
      "requester_id": "Unique ID of the requester.",
      "submitter_id": "Unique ID of the agent who submitted the ticket.",
      "assignee_id": "Unique ID of the agent assigned to the ticket.",
      "group_id": "The ID of the group associated with the ticket.",
      "brand_id": "The ID of the brand associated with the ticket.",
      "ticket_form_id": "The ID of the ticket form used to submit the ticket.",
      "via_channel": "The channel through which the ticket was created.",
      "recipient": "The recipient of the ticket.",
      "requester_name": "Name of the requester.",
      "requester_email": "Email of the requester.",
      "assignee_name": "Name of the assignee.",
      "assignee_email": "Email of the assignee.",
      "ticket_type": "The type of the ticket.",
      "subject": "The subject of the ticket.",
      "description": "The description of the issue provided in the ticket.",
      "status": "The status of the ticket.",
      "tags": "The tags associated with the ticket.",
      "satisfaction_rating": "The satisfaction rating given to the ticket.",
      "priority": "The priority level of the ticket.",
      "is_public": "Whether the ticket is public.",
      "is_from_messaging_channel": "Whether the ticket originated from a messaging channel.",
      "ticket_form": "The name of the ticket form used.",
      "cf_wko_cx_evaluation_type": "Evaluation type for CX workflow.",
      "cf_wko_cx_behavior_excellence": "Behavior excellence score for CX workflow.",
      "cf_wko_cx_behavior_ata": "Behavior ATA score for CX workflow.",
      "cf_wko_cx_critical_compliance_error": "Indicates a critical compliance error.",
      "cf_wko_cx_non_critical_compliance_error": "Indicates a non-critical compliance error.",
      "cf_wko_cx_1_10": "CX workflow score on a scale of 1 to 10.",
      "cf_wko_cx_delta_ata": "Delta ATA score for CX workflow.",
      "cf_channel_of_ticket_being_evaluated": "Communication channel used for the ticket being evaluated.",
      "cf_wko_cx_final_score_1_10": "Final CX score for the ticket on a scale of 1 to 10.",
      "cf_ticket_being_evaluated": "Ticket ID being evaluated.",
      "cf_wko_cx_feedback_score": "Feedback score for CX workflow.",
      "cf_wko_cx_behavior_growth_areas": "Behavior growth areas for CX workflow.",
      "cf_wko_feedback_score_reasoning": "Reasoning behind the feedback score.",
      "cf_wko_cx_dispute_requestor": "The requestor for the dispute.",
      "cf_wko_cx_critical_compliance_met_2_not_met_1": "Whether critical compliance criteria were met.",
      "cf_wko_cx_dispute_root_cause": "The root cause of the dispute.",
      "cf_wko_cx_non_critical_compliance_met_2_not_met_1": "Whether non-critical compliance criteria were met.",
      "cf_wko_qa_cx_critical_thinking_and_judgement": "Critical thinking and judgement score for CX workflow.",
      "cf_total_time_spent_sec": "The total time spent on resolving the ticket.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "created_at_pst": "Timestamp of when the ticket was created in PST.",
      "updated_at_pst": "Timestamp of when the ticket was last updated in PST."
    }
  },
  "pa_dashboard_First_Booked_Shifts": {
    "description": "",
    "columns": {}
  },
  "fct_market_pricing_parameters": {
    "description": "fact table for market level pricing parameters, where each records represents a single pricing parameters group version\n",
    "columns": {
      "config_id": "Unique id for the market-level pricing config",
      "market_segment": "Name of the metro-statistical area of this pricing market",
      "worker_qualification": "Qualification title of an HCP",
      "description": "Comments added by pricing admin when changing the market params",
      "is_opted_out_from_automated_policies": "When enabled, this market will be skipped by GTM scheduler even if it qualifies",
      "floor": "Minimum allowed pay value",
      "market_base": "Number of weekly shifts to subsidize",
      "market_fill": "Percentage of weekly shifts to subsidize",
      "intervention_strength": "Pay spread in dollars between min-fill and non min-fill facility-weeks",
      "weekday_base": "Average pay on weekday shifts",
      "weekend_base": "Average pay on weekend shifts",
      "margin_cap": "Minimum margin taken on non-subsidized shifts",
      "min_fill_margin_cap": "Minimum margin taken on min-fill subsidized shifts",
      "rolling_filled_ratio": "Multiple of the base pay to apply to all future shifts at currently min-fill facilities",
      "rolling_filled_margin": "Minimum margin taken on facilities that are currently min-fill subsidized shifts",
      "late_cancel_rate_multiplier": "Multiple of the base pay applied to late cancelled shifts",
      "late_cancel_margin_cap": "Minimum margin taken on late cancelled shifts",
      "target_irr": "Discount rate to apply to the pay <> charge ROI",
      "holiday_take": "Percentage take rate on the holiday charge boost",
      "late_cancel_lead_time_threshold1": "Lead time in minutes at which late cancel pricing begins to apply",
      "late_cancel_lead_time_threshold2": "Lead time in minutes at which late cancel pricing begins levels off",
      "ncns_rate_multiplier": "Multiple of the base pay applied to NCNS shifts",
      "tags": "Set of tags for the market such as \"GTM\"",
      "created_by": "The person who created this parameters version",
      "updated_by": "The person who last updated this parameters version",
      "created_at": "The time at which this market parameters version was created",
      "updated_at": "The time at which this market parameters version was updated",
      "has_gtm_tag": "Whether this market is tagged as GTM or not",
      "has_gtm_exit_tag": "Whether this market is tagged as GTM_EXIT or not",
      "has_gtm_exit_rollback_tag": "Whether this market is tagged as GTM_EXIT_ROLLBACK or not",
      "has_gtm_policy_run": "Whether this market parameters resulted from a GTM policy run",
      "has_gtm_exit_policy_run": "Whether this market parameters resulted from a GTM exit policy run",
      "has_gtm_exit_rollback_policy_run": "Whether this market parameters resulted from a GTM exit rollback policy run",
      "has_basic_policy_run": "Whether this market parameters resulted from a basic policy run",
      "has_late_cancellation_policy_run": "Whether this market parameters resulted from a late cancellation policy run",
      "next_config_id": "The market parameters version which superseded this market parameters version",
      "previous_config_id": "The market parameters version which was replaced by this market parameters version"
    }
  },
  "report_facility_reqs_snapshot": {
    "description": "Reporting table containing the facility requirements based on a snapshot week. In other words, for a given week, this table shows what the requirements were for a facility. This data has been pre-filtered for req_ids where the req_level = 'HCF', is_archived = FALSE, and is_required_for_booking = TRUE. If there are any missing weeks, that means there was no requirement appplicable for the given week and workplace. Note: requirement names can change, so use req_id when possible.",
    "columns": {
      "facility_req_snapshot_id": "Primary Key, unique identifer to the record. This is based on a combination of workplace_id, req_id, and snapshot_week",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "req_id": "Unique identifier for the requirement",
      "req_name": "Name of the requirement. Note: that this can change over time, use req_id when possible",
      "snapshot_week": "The week where the requirement was applicable to the workplace. Week starts on a sunday."
    }
  },
  "monthly_churn_by_workplace": {
    "description": "Table that reports on workplace churn at the monthly workplace grain. Churn is defined as the workplace having had at least one shift posted (based on the shift_start_at) in the previous month and having none posted in the current month. Deleted shifts are excluded from the shifts used to calculate churn.\n",
    "columns": {
      "monthly_workplace_id": "Surrogate that is a combination of the workplace id and month\n",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "date_month": "The calender month\n",
      "msa": "MSA of the workplace\n",
      "type": "The type of workplace\n",
      "csa": "CSA of the workplace\n",
      "state": "State where the workplace is located\n",
      "salesforce_id": "Salesforce account ID for the workplace\n",
      "salesforce_parent_id": "Salesforce account ID of the workplace's parent\n",
      "num_shifts": "The number of shifts for the workplace with start dates in the month\n",
      "cohort": "The month that the workplace first posted a shift\n",
      "is_first_shift_month": "If the date_month is also the month that the workplace first posted a shift\n",
      "initial_churn": "1 if the workplace is churned / churning for the first time, 0 otherwise\n",
      "is_activate_never_churned": "1 if the workplace posted at least one shift in the month and has never churned previously, 0 otherwise\n",
      "is_activate_reactivated": "1 if the workplace posted at least one shift in the month but has churned in a previous month, 0 otherwise"
    }
  },
  "hcp_cohortized_mom_revenue_by_activation_cohort": {
    "description": "",
    "columns": {}
  },
  "standard_cancellations_and_call_offs_by_week": {
    "description": "",
    "columns": {}
  },
  "facility_stage_start_and_end": {
    "description": "",
    "columns": {}
  },
  "app_wwf_phase_1_open_shift_colleagues_viewed_stg": {
    "description": "",
    "columns": {}
  },
  "dim_zendesk_organizations": {
    "description": "Dimensional model detailing Zendesk organizations informations. These organizations represent workplace accounts in Zendesk, which are being automatically linked to tickets and issues workplace users create when they reach out to our support team.\n",
    "columns": {
      "organization_id": "Unique ID that Zendesk uses to identify the organization",
      "cbh_app_account_id": "Unique ID used by the CBH app to identify the organization",
      "group_id": "ID of the Zendesk group the organization belongs to",
      "organization_name": "Name of the organization",
      "group_name": "Name of the Zendesk group the organization belongs to",
      "organization_state": "State where the organization is located",
      "workplace_drawer": "URL of the organization's profile page within CBH app",
      "organization_notes": "Any extra notes about the organization entered in Zendesk",
      "has_facility_tag": "Indicates if the organization is tagged as a facility in Zendesk (True/False)",
      "workplace_type": "Type of organization (for example, clinic, hospital, etc.)",
      "workplace_phone": "Main phone number on file for the organization",
      "workplace_vertical": "Business vertical the organization belongs to",
      "workplace_stage": "Stage in the customer lifecycle (for example, active or closed)",
      "workplace_msa": "Metropolitan statistical area the organization belongs to",
      "workplace_billing_county": "County used for billing purposes by the organization",
      "parent_workplace_id": "ID of the parent organization, if this organization is a sub-organization",
      "has_users": "Indicates if there are any Zendesk users associated with the organization (True/False)",
      "has_tickets": "Indicates if there are any Zendesk tickets associated with the organization (True/False)",
      "has_usertickets": "Indicates if there are any Zendesk tickets created by users associated with the organization (True/False)",
      "on_probation_suspension_reason": "Reason for the organization being on probation or suspended, if applicable",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated"
    }
  },
  "hcp_weekly_activation_cohort_7_day_rev": {
    "description": "",
    "columns": {}
  },
  "fasp_dashboard_faved_workers_post_restriction": {
    "description": "This contains information on workers that are rated highly after they have been unassigned from shifts, and the time between the unassign action and the rating action.",
    "columns": {
      "unassigned_at": "date when the unassign action was created.",
      "highly_rated_at": "date when the worker was highly rated.",
      "hours_to_high_rating": "hours between when worker is unassigned and being rated high (rating >= 4).",
      "facility_id": "facility ID of the shift owner",
      "worker_id": "ID of the worker who performed the action",
      "is_highly_rated": "is the worker favorite in the facility where the action is performed",
      "msa": "the msa of the facility",
      "state": "the state of the facility",
      "city": "city of the facility"
    }
  },
  "int_worker_activity_logs_views": {
    "description": "Table containing log of events performed by a worker on the app. This table only the events 'CALENDAR_OPEN', 'CALENDAR_DAY_OPEN' (i.e. app views).",
    "columns": {
      "worker_activity_log_id": "Primary key, unique identifier to the log",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "activity_type": "The type of activity the worker performed on the app",
      "created_at": "Timestamp of when the record was created"
    }
  },
  "fct_zendesk__wops_ea_tickets": {
    "description": "Fact model for MQR's Zendesk EA tickets. These tickets represent consultations from MQR agents to SMEs.",
    "columns": {
      "ticket_id": "The unique ID of the consult ticket.",
      "parent_ticket_id": "The ticket ID of the consult ticket, as captured in a custom field.",
      "requester_id": "The unique ID of the ticket requester. This is the agent who requested the consult",
      "assignee_id": "The unique ID of the agent assigned to the ticket. This is the SME who acted on the consult",
      "ticket_form_id": "The unique ID of the ticket form used to submit the ticket.",
      "requester_name": "The name of the ticket requester. This is the agent who requested the consult",
      "requester_email": "The email address of the ticket requester. This is the agent who requested the consult",
      "assignee_name": "The name of the agent assigned to the ticket. This is the SME who acted on the consult",
      "assignee_email": "The email address of the agent assigned to the ticket. This is the SME who acted on the consult",
      "assignee_supervisor": "The name of the supervisor for the agent assigned to the ticket. This is the SME who acted on the consult",
      "assignee_agent_role": "The role of the agent assigned to the ticket (e.g. Admin, Agent, etc.).",
      "cf_consult_type": "The type of consult for the ticket, as captured in a custom field.",
      "cf_incorrect_consult_reason": "The reason the consult was deemed incorrect, as captured in a custom field.",
      "cf_incorrect_escalation_reason": "The reason the escalation was deemed incorrect, as captured in a custom field.",
      "cf_relevant_sop_consult": "The relevant standard operating procedure used for the consult, as captured in a custom field.",
      "cf_relevant_sop_new": "The new relevant standard operating procedure used for the consult, as captured in a custom field.",
      "cf_agent_name_consult": "The name of the agent who consulted on the ticket, as captured in a custom field.",
      "cf_agent_name_mishandle": "The name of the agent on the mishandled ticket, as captured in a custom field.",
      "cf_result_mishandle_ticket": "Returns whether the mishandled ticket is valid or invalid.",
      "consult_method": "The method of consultation for the ticket used by the agent, as captured in a custom field.",
      "consult_subject": "The subject of consultation for the ticket used by the agent, as captured in a custom field.",
      "consult_description": "The description of consultation for the ticket used by the agent, as captured in a custom field.",
      "ea_ticket_type": "The custom field option which captures the type of EA Ticket chosen.",
      "escalation_type": "The type of escalation for the ticket.",
      "override_offered": "Checkbox field which captures if an override is offered.",
      "ticket_form_name": "The name of the ticket form used to submit the ticket.",
      "channel": "The channel through which the ticket was submitted (e.g. Chat, Email, Phone, etc.).",
      "status": "The current status of the ticket (e.g. Open, Pending, Solved, Closed).",
      "priority": "The priority level of the ticket (e.g. High, Normal, Low).",
      "description": "The content and details provided in the initial ticket submission.",
      "ticket_tags": "Tags applied on the ticket.",
      "reopens": "The number of times the ticket was reopened.",
      "replies": "The number of public replies on the ticket.",
      "reply_time_in_minutes": "The time in minutes from ticket creation to the first public reply.",
      "first_resolution_time_in_minutes": "The time in minutes from ticket creation to the first resolution.",
      "full_resolution_time_in_minutes": "The total time in minutes from ticket creation to final resolution.",
      "created_at": "Timestamp of when the record was created",
      "initially_assigned_at": "The date and time the ticket was first assigned to an agent.",
      "assigned_at": "The date and time the ticket was assigned to an agent.",
      "solved_at": "The date and time the ticket was marked as solved.",
      "generated_timestamp": "The timestamp when the ticket was generated in the Zendesk system.",
      "updated_at": "timestamp of when the record was last updated",
      "created_at_pst": "Timestamp of when the record was created. Converted to Pacific Standard Time",
      "updated_at_pst": "timestamp of when the record was last updated. Converted to Pacific Standard Time",
      "initially_assigned_at_pst": "The date and time the ticket was first assigned to an agent, converted to Pacific Standard Time.",
      "assigned_at_pst": "The date and time the ticket was assigned to an agent, converted to Pacific Standard Time.",
      "solved_at_pst": "The date and time the ticket was marked as solved, converted to Pacific Standard Time."
    }
  },
  "hcps_cohort_active_weekly_fin": {
    "description": "",
    "columns": {}
  },
  "invoiced_facilities_net_terms_stg": {
    "description": "",
    "columns": {}
  },
  "facility_num_posted_next_30": {
    "description": "",
    "columns": {}
  },
  "facility_status_during_shift_start": {
    "description": "",
    "columns": {}
  },
  "hypothesis_probation_churn_more": {
    "description": "",
    "columns": {}
  },
  "stg_app__facility_users": {
    "description": "Staging model for data coming from the application's facility users table",
    "columns": {
      "workplace_user_id": "Primary key, unique indentifier for the facility user",
      "firebase_id": "This is the unique identifier for the user in Firebase, which is the platform used for user authentication and management. It is crucial for linking user data across different systems and for tracking user activity.",
      "name": "Full name of the user",
      "email": "Email address of the user",
      "phone_number": "Phone number of the user",
      "timezone": "This field represents the timezone in which the user is located. It is important for scheduling and time-related calculations, ensuring that all times are displayed correctly for the user's location.",
      "user_role_1": "This field represents the primary role of the user within the facility. It can be used to determine the user's permissions and access within the system. For example, an 'ADM' role typically has administrative permissions such as managing shifts and invoices.",
      "user_role_2": "This column represents the second role assigned to a user in the facility. A user can have multiple roles, and this field captures the second role if applicable. The role could be 'Admin', 'Manager', 'Staff', etc. depending on the permissions and responsibilities assigned to the user.",
      "user_role_3": "This column represents the third role assigned to a user in the facility. A user can have multiple roles, and this field captures the third role if applicable. The role could be 'Admin', 'Manager', 'Staff', etc. depending on the permissions and responsibilities assigned to the user.",
      "user_role_4": "This column represents the fourth role assigned to a user in the facility. A user can have multiple roles, and this field captures the fourth role if applicable. The role could be 'Admin', 'Manager', 'Staff', etc. depending on the permissions and responsibilities assigned to the user.",
      "designation": "This column represents the official job title or position of the user within the organization. It can include roles such as 'Manager', 'Supervisor', 'Staff', etc.",
      "notes": "This column contains any additional information or comments about the user. This can be used to store specific details that are not captured in other fields.",
      "workplaces": "This column lists the facilities or workplaces that the user is associated with. If a user is associated with multiple workplaces, they will all be listed here.",
      "is_primary": "This field indicates whether the user is the primary user for the facility. A value of 'true' means the user is the primary user, while 'false' means they are not.",
      "is_archived": "This field indicates whether the user's profile has been archived. If the value is 'true', the user's profile is archived and not actively used. If the value is 'false', the user's profile is active.",
      "has_post_shifts_permissions": "true if the facility user has the post_shifts permission",
      "has_cancel_shifts_permissions": "true if the facility user has the cancel_shifts permission",
      "has_edit_shift_rate_permissions": "true if the facility user has the edit_shift_rate permission",
      "has_manage_invoices_permissions": "true if the facility user has the manage_invoices permission",
      "has_assignment_email_enabled": "This field indicates whether the user has enabled email notifications for assignments. If the value is 'true', the user will receive email notifications for assignments. If the value is 'false', the user will not receive email notifications for assignments.",
      "is_assignment_email_batched": "This field indicates whether the user has enabled batched email notifications for assignments. If the value is 'true', the user will receive batched email notifications for assignments. If the value is 'false', the user will receive individual email notifications for each assignment.",
      "has_unassignment_email_enabled": "This column indicates whether the user has enabled the feature to receive emails when a shift is unassigned. If the value is 'true', it means the user will receive an email notification when a shift is unassigned. If the value is 'false', the user has chosen not to receive such notifications.",
      "is_unassignment_email_batched": "This column indicates whether the unassignment email notifications are batched. If the value is 'true', it means the user will receive a single email with information about all unassigned shifts at a specific time. If the value is 'false', the user will receive an individual email for each unassigned shift as it happens.",
      "has_summary_email_enabled": "This column indicates whether the user has enabled the feature to receive summary emails. If the value is 'true', it means the user will receive an email summarizing key information at a specific time. If the value is 'false', the user has chosen not to receive such summary emails.",
      "has_charge_rate_visility_enabled": "This column indicates whether the user has the ability to view the charge rates. If the value is 'true', the user can view the charge rates. If the value is 'false', the user cannot view the charge rates.",
      "has_assignment_sms_enabled": "This column indicates whether the user has enabled SMS notifications for shift assignments. If the value is 'true', the user will receive SMS notifications when they are assigned a shift. If the value is 'false', the user will not receive SMS notifications for shift assignments.",
      "is_assignment_sms_batched": "This column indicates whether the user's assignment SMS notifications are batched. If the value is 'true', the user will receive batched SMS notifications for shift assignments. If the value is 'false', the user will receive individual SMS notifications for each shift assignment.",
      "has_unassignment_sms_enabled": "This column indicates whether the user has enabled the feature to receive SMS notifications when a shift is unassigned. If the value is 'true', the user will receive SMS notifications for unassigned shifts. If the value is 'false', the user will not receive these notifications.",
      "is_unassignment_sms_batched": "This column indicates whether the user has chosen to receive batched SMS notifications for unassigned shifts. If the value is 'true', the user will receive a single SMS notification with information about multiple unassigned shifts. If the value is 'false', the user will receive individual SMS notifications for each unassigned shift.",
      "has_chat_messages_enabled": "This column indicates whether the user has enabled the feature to receive SMS notifications for chat messages. If the value is 'true', the user will receive SMS notifications for chat messages. If the value is 'false', the user will not receive these notifications.",
      "has_worker_eta_notification_enabled": "This column indicates whether the user has enabled the Estimated Time of Arrival (ETA) notifications for workers. If the value is 'true', it means the user will receive notifications about the ETA of workers. If the value is 'false', the user has chosen not to receive these notifications.",
      "unassignment_email_batched_time": "This column represents the time at which batched unassignment emails are sent to the user. The time is represented in the 24-hour format. For example, a value of '14.5' would mean that the batched unassignment emails are sent at 2:30 PM.",
      "summary_email_time": "This column indicates the time at which the user receives the staffing summary email. The time is represented in the 24-hour format. For example, a value of '9.0' would mean that the staffing summary email is sent at 9:00 AM.",
      "assignment_email_batched_time": "This column represents the time at which batched assignment emails are sent to the user. The time is represented in a 24-hour format. This feature allows the system to group multiple assignment notifications into a single email, reducing the number of emails a user receives.",
      "assignment_sms_batched_time": "This column indicates the time at which batched assignment SMS notifications are sent to the user. The time is represented in a 24-hour format. This feature allows the system to group multiple assignment notifications into a single SMS, reducing the number of messages a user receives.",
      "unassignment_sms_batched_time": "This column represents the time at which batched unassignment SMS notifications are sent to the user. The time is represented in a 24-hour format. This feature allows the system to group multiple unassignment notifications into a single SMS, reducing the number of messages a user receives.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake",
      "active_workplaces": "This field lists the workplaces where the user is currently active. It contains the IDs of the workplaces. If the user is not active in any workplace, this field will be empty.",
      "has_access_contract_terms_permissions": "This field indicates whether the user has the permission to access contract terms. If the value is 'true', the user has the permission. If the value is 'false', the user does not have the permission.",
      "is_deleted": "This field indicates whether the user has been deleted from the system. If the value is 'true', the user has been deleted. If the value is 'false', the user is active in the system."
    }
  },
  "hcp_end_user_msa": {
    "description": "",
    "columns": {}
  },
  "stg_app__exclusions": {
    "description": "Staging model for data coming from the application's exclusions table\n",
    "columns": {
      "exclusion_id": "Primary key, unique indentifier for the exclusion\n",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "shift_review_id": "ID for the shift review\n",
      "excluded_by_id": "ID of the user that created the exclusion\n",
      "deleted_by_id": "ID of the user that deleted the exclusion\n",
      "requested_by": "The entity that requested the exclusion, either AGENT or FACILTY\n",
      "notes": "Notes on why the exclusion was requested\n",
      "delete_note": "Notes on why the exclusion was deleted\n",
      "is_deleted": "Whether the exclusions been deleted or not\n",
      "reason": "Reason for the exclusion\n",
      "severity_question": "Question asked to give signal on severity of exclusion\n",
      "severity_response": "Response to severity question\n",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "zd_tickets_stg": {
    "description": "",
    "columns": {
      "id": ""
    }
  },
  "fct_zendesk_wops__docs_tickets": {
    "description": "Fact model for Docs Tickets created via the documents form in Zendesk instances, utilizing the form\u2019s custom fields to populate Docs-specific columns.\n",
    "columns": {
      "ticket_id": "The unique ID of the DOCS QA ticket.",
      "requester_id": "The unique ID of the ticket requester.",
      "submitter_id": "The unique ID of the ticket submitter.",
      "assignee_id": "The unique ID of the ticket assignee.",
      "organization_id": "The unique ID of the organization associated with the ticket.",
      "group_id": "The unique ID of the group associated with the ticket.",
      "brand_id": "The unique ID of the brand associated with the ticket.",
      "ticket_form_id": "The unique ID of the ticket form.",
      "recipient": "The recipient of the ticket.",
      "requester_name": "The name of the ticket requester.",
      "requester_email": "The email address of the ticket requester.",
      "assignee_name": "The name of the ticket assignee.",
      "assignee_email": "The email address of the ticket assignee.",
      "assignee_supervisor": "The supervisor of the ticket assignee.",
      "assignee_role": "The role of the ticket assignee.",
      "assignee_company": "The company of the ticket assignee.",
      "type": "The type of the ticket.",
      "subject": "The subject or title of the ticket.",
      "description": "The description of the issue or question in the ticket.",
      "status": "The status of the ticket.",
      "tags": "The tags associated with the ticket.",
      "ticket_form": "The name of the ticket form.",
      "ticket_status": "The status from the custom fields.",
      "invisible_document": "Indicates if the document is invisible.",
      "hellosign_document": "Indicates if the ticket has a HelloSign document.",
      "hcp_document_issue_type": "The issue type for HCP documents.",
      "hcf_document_issue_type": "The issue type for HCF documents.",
      "document_id": "The ID of the document associated with the ticket.",
      "document_category": "The category of the document.",
      "docs_qualification": "The qualification details from the custom fields.",
      "docs_priority": "The priority of the ticket based on DOCS fields.",
      "docs_expiration_date": "The expiration date of the document in the ticket.",
      "docs_consultation_review": "The consultation review details from DOCS fields.",
      "cf_total_time_spent_sec": "The total time spent on the ticket in seconds.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "created_at_pst": "Timestamp of when the record was created. Converted to Pacific Standard Time",
      "updated_at_pst": "timestamp of when the record was last updated. Converted to Pacific Standard Time"
    }
  },
  "stg_zendesk_wops__groups": {
    "description": "Staging model for Zendesk groups data. Representing a grouping of agents in Zendesk",
    "columns": {
      "group_id": "Group's unique ID, automatically assigned when creating groups.",
      "group_url": "The API URL of the group.",
      "group_name": "The name of the group.",
      "group_description": "The description of the group.",
      "is_default": "If the group is the default one for the account.",
      "is_deleted": "Deleted groups get marked as such.",
      "is_public": "If true, the group is public. If false, the group is private.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake"
    }
  },
  "fct_invoices": {
    "description": "Fact table for invoices where each record represents a unique invoice",
    "columns": {
      "invoice_id": "invoice id",
      "original_invoice_id": "First invoice ID that this invoice was associated to",
      "invoice_number": "Invoice number displayed on the invoice (i.e. reference number)",
      "original_invoice_number": "First invoice number that this invoice was associated to",
      "customer_id": "Invoiced Customer ID",
      "salesforce_account_id": "Salesforce account ID",
      "invoice_status": "Invoice status, one of: draft, not_sent, sent, viewed, past_due, pending, paid, voided, bad_debt",
      "p2p_status": "Promised-to-pay (p2p) status can be one of the following statuses:\n\n| status         | description                                                               |\n|----------------|---------------------------------------------------------------------------|\n| NULL           | The invoice does not have an expected payment date                        |\n| open           | The invoice expected payment date is upcoming (after current date)        |\n| broken         | The latest invoice payment date is after the expected payment date OR the invoice has not yet been paid based on expected payment date, has a non-zero balance, and has a valid invoice status |\n| underpaid      | The latest invoice payment date is on/before the expected payment date, however the invoice has still not been paid in full |\n| successful     | The latest invoice payment date is on/before the expected payment date, and the invoice has been paid in full  |",
      "invoice_type": "Invoice type can be one of the following:\n\n| status         | description                                                               |\n|----------------|---------------------------------------------------------------------------|\n| original       | The invoice does not have any former invoices associated to it            |\n| regenerated    | The invoice has former invoices associated to it                          |",
      "customer_name": "Healthcare Facility (HCF) name",
      "former_invoices": "Whether the invoice has previous invoices associated to it",
      "currency_code": "3-letter ISO currency_code",
      "sync_source": "Metadata sync source",
      "app_status": "Metadata app status",
      "has_autopay": "When true, autopay is enabled. Defaults to false",
      "has_chase": "When true, chasing is enabled",
      "is_closed": "When true, an invoice is closed and considered bad debt. No further payments are allowed",
      "is_draft": "When false, the invoice is considered outstanding, or when true, the invoice is a draft",
      "is_paid": "Whether an invoice has been paid in full",
      "has_late_fees": "Whether an invoice has late fees associated to it",
      "is_latest_invoice": "Whether the invoice is the latest invoice based on all the invoices associated to it (or if it is the only invoice) then true",
      "payment_terms": "Payment terms for the invoice, i.e. 'NET 30'",
      "net_number": "Derived from the payment term, this is the net number associated to the payment terms, if applicable",
      "total": "Total amount of the invoice",
      "balance": "Balance owed on the invoice",
      "subtotal": "Subtotal of the invoice",
      "late_fee_amount": "Portion of the total invoice amount that is late fees",
      "principal_amount": "Portion of the total invoice amount that is the principal",
      "total_payment_amount": "The total payment amount across all fct_payments or fct_transaction records. If null, this invoice has no payment/transaction",
      "days_from_date_sent": "Number of days since the invoice date",
      "days_from_due_date": "Number of days since the due date",
      "attempt_count": "Number of payment attempts",
      "invoice_date": "Date of the invoice",
      "due_date": "Date payment is due by",
      "period_start_date": "Period start date",
      "period_end_date": "Period end date",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "expected_payment_date": "Expected payment date",
      "p2p_creation_date": "Expected payment date",
      "latest_payment_date": "Either the latest payment date or latest transaction date. If null, this invoice has no payment/transaction",
      "dso_date_sent": "If the invoice is paid, this is the number of days between the payment date and the invoice date, otherwise this is number of days since the invoice date of the invoice",
      "dso_date_due": "If the invoice is paid, this is the number of days between the payment date and the due date, otherwise this is number of days since the due date of the invoice",
      "original_invoice_date": "The invoice date of the first-occuring associated invoice, if applicable, otherwise this is the invoice date if there are no assocaited invoices",
      "payment_source": "Denotes if the data on payments is coming from fct_payments or fct_transactions for auditability and ease of joining"
    }
  },
  "stg_braze_currents__inapp_message_clicks": {
    "description": "Staging table for Braze in-app messages and clicks. This event occurs when a user clicks on an in-app message.",
    "columns": {
      "inapp_message_click_id": "unique ID of this event",
      "braze_user_id": "Braze user ID of the user",
      "external_user_id": "External user id of the in-app messages and clicks, usually this is the worker_id",
      "app_id": "ID for the app on which the user action occurred",
      "campaign_id": "ID of the campaign if from a campaign",
      "message_variation_id": "ID of the message variation if from a campaign",
      "canvas_id": "ID of the Canvas if from a Canvas",
      "canvas_variation_id": "ID of the Canvas variation the user is in if from a Canvas",
      "canvas_step_id": "ID of the Canvas step the user is in if from a Canvas",
      "card_id": "ID of the card that was viewed",
      "button_id": "Index of the button clicked if it was a button that was clicked, tracking ID of the click if the event came from an appboyBridge.logClick or brazeBridge.logClick invocation, or choice_id if the in app-message type is a simple survey,",
      "send_id": "ID of the message if specified for the campaign",
      "device_id": "ID of the device on which the event occurred",
      "ad_id": "Advertising identifier",
      "timezone": "IANA time zone of the user at the time of the event",
      "campaign_name": "Name of the campaign",
      "message_variation_name": "Name of the message variation the user is in if from a Canvas",
      "canvas_name": "Name of the Canvas",
      "canvas_variation_name": "Name of the Canvas variation the user is in if from a Canvas",
      "canvas_step_name": "Name of the Canvas step this event belongs to",
      "platform": "Platform of the device (one of 'ios', 'android', 'web', 'kindle', 'tvos', OR 'roku')",
      "os_version": "Operating system version",
      "device_model": "Model of the device used",
      "ad_id_type": "One of 'ios_idfa', 'google_ad_id', OR 'roku_ad_id'",
      "ad_tracking_enabled": "If advertisement tracking is enabled then TRUE",
      "event_at": "Timestamp of the event"
    }
  },
  "fct_mqr__schedule_adherence": {
    "description": "The dbt model fct_mqr__schedule_adherence is a model that helps to monitor and analyze the performance of support agents. It combines data from two sources: the agents' schedules and their performance metrics. This model provides insights into how well agents adhere to their schedules, how many tasks they complete, and how many issues they escalate or reopen. It also provides information about the agents themselves, such as their roles, supervisors, and whether they are active or shared. This information can be used to identify patterns and correlations, such as whether certain roles or supervisors are associated with higher performance.",
    "columns": {
      "schedule_id": "a unique identifier for the agent's work schedule.",
      "agent_id": "the unique id of the zendesk agent's user account.",
      "employee_id": "a unique identifier for the zendesk agent from an external system.",
      "adherence_rate": "the percentage of assigned work schedule points that were completed by the agent.",
      "agent_email": "the email address associated with the zendesk agent.",
      "agent_name": "the display name of the zendesk agent.",
      "agent_role": "the job role or title of the zendesk agent.",
      "assigned_points": "the total number of work schedule points assigned to the agent for the given schedule.",
      "attended_points": "the number of assigned work schedule points that the agent actually worked on.",
      "designation": "the department or team that the zendesk agent belongs to.",
      "escalated_points": "the number of assigned work schedule points that required escalation to a more senior agent.",
      "is_active": "a boolean indicating if the zendesk agent's account is currently active.",
      "is_restricted_agent": "a boolean indicating if the zendesk agent has restricted access.",
      "is_shared_agent": "a boolean indicating if the zendesk agent's account is share between multiple users.",
      "paid_general_task_time": "the total time in minutes that the agent spent on general, paid work tasks.",
      "paid_time": "the total time in minutes that the agent spent working during the paid portion of their schedule.",
      "reopened_points": "the number of assigned work schedule points that were reopened after being marked as solved.",
      "scheduled_time": "the total time in minutes that the agent was scheduled to work according to their work schedule.",
      "solved_points": "the number of assigned work schedule points that the agent successfully solved.",
      "agent_supervisor": "the name of the agent's direct supervisor.",
      "time_breakdown": "date and time of the schedule.",
      "total_time": "the total time in minutes that the agent spent working during their entire work schedule, including any unpaid overtime.",
      "unpaid_general_task_time": "the total time in minutes that the agent spent on general, unpaid work tasks."
    }
  },
  "fct_low_fill_high_take_automated_policy_runs": {
    "description": "This model stores the data for low fill high take policy runs",
    "columns": {
      "automated_policy_run_id": "The id of the stored automated policy run",
      "policy_name": "The name of the policy being executed by this run (in this case LowFillHighTake).",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "qualification": "Qualification title of an HCP",
      "segment": "Name of the metro-statistical area of this pricing market",
      "run_at": "The time at which this automated policy run was executed",
      "run_at_day": "The day on which this automated policy run was executed",
      "statistics_last_activation_at": "When was this workplace market last activated. An activation is the first facility shift's start or the first shift's start after a period of inactivity greater than 1 month.",
      "statistics_shifts_started": "The number of shifts started in the past week.",
      "statistics_filled_shifts_started": "The number of shifts filled in the past week.",
      "statistics_total_potential_charge": "The total potential charge for shifts started during the past week",
      "statistics_total_potential_revenue": "The total potential revenue for shifts started during the past week",
      "statistics_booked_shifts": "The number of shifts booked at the facility in the past week",
      "statistics_open_shifts": "The number of open shifts available at the facility in the past week",
      "statistics_total_booked_charge": "The total charge for shifts booked during the past week",
      "statistics_total_booked_revenue": "The total revenue for shifts booked during the past week",
      "statistics_total_filled_charge": "The total charge for filled shifts started during the past week",
      "statistics_total_filled_revenue": "The total revenue for filled shifts started booked during the past week",
      "output_workplace_override_id": "The id of the stored output workplace override version. If null, the result from the run wasn't stored",
      "phase": "The current phase of the run",
      "initial_adjustment_min_fill_margin_cap": "The initial min fill margin cap adjustment",
      "initial_adjustment_market_base": "The initial market base adjustment",
      "initial_adjustment_weekday_base": "The initial weekday base adjustment",
      "initial_adjustment_weekend_base": "The initial weekend base adjustment",
      "fill_rate": "The fill rate considered during this low fill high take policy run",
      "book_rate": "The book rate considered during this low fill high take policy run",
      "booked_take_rate": "The booked take rate considered during this low fill high take policy run",
      "market_book_rate": "The market level book rate considered during this low fill high take policy run",
      "target_book_rate_difference": "The difference between market level book rate and the workplace book rate. During phase weekly adjustment, we perform interventions based on this difference",
      "reason": "The reason based on which the run was made (LOW_FILL_HIGH_TAKE, RECENTLY_ACTIVATED, WEEKLY_ADJUSTMENT)",
      "market_min_fill_margin_cap": "The market level min fill margin cap at the time of the run",
      "market_level_market_base": "The market level market base at the time of the run",
      "market_weekday_base": "The market level weekday base at the time of the run",
      "market_weekend_base": "The market level weekend base at the time of the run",
      "has_workplace_overrides": "Whether the given workplace market had an workplace override at the time of the run",
      "workplace_min_fill_margin_cap": "The workplace level min fill margin cap at the time of the run",
      "workplace_market_base": "The workplace level market base at the time of the run",
      "workplace_weekday_base": "The workplace level weekday base at the time of the run",
      "workplace_weekend_base": "The workplace level weekend base at the time of the run",
      "current_min_fill_margin_cap": "The current min fill margin cap at the time of the run",
      "current_market_base": "The current market base at the time of the run",
      "current_weekday_base": "The current weekday base at the time of the run",
      "current_weekend_base": "The current weekend base at the time of the run",
      "has_output_workplace_overrides": "Whether this automated policy run had its result stored in the database",
      "output_min_fill_margin_cap": "The output min fill margin cap after the run",
      "output_market_base": "The output market base after the run",
      "output_weekday_base": "The output weekday base after the run",
      "output_weekend_base": "The output weekend base after the run",
      "average_fill_rate_3_weeks": "The average fill rate computed over the last 3 weeks",
      "next_automated_policy_run_id": "The id of the next automated policy run for this workplace <> qualification pair if there is one",
      "previous_automated_policy_run_id": "The id of the previous automated policy run for this workplace <> qualification pair if there is one",
      "first_intervention_initial_automated_policy_run_id": "The id of the first Finding Fill run for this facility <> qualification pair",
      "first_intervention_initial_run_at": "The date of the first Finding Fill run for this facility <> qualification pair",
      "latest_intervention_initial_automated_policy_run_id": "The id of the first Finding Fill run for this facility <> qualification pair",
      "latest_intervention_initial_run_at": "The date of the first Finding Fill run for this facility <> qualification pair",
      "number_of_interventions": "The number of times this facility <> qualification pair has been under Finding Fill"
    }
  },
  "investor_hcp_created_at_mom_ltv": {
    "description": "",
    "columns": {}
  },
  "stg_survey_sparrow__surveys": {
    "description": "Staging table for the Survey Sparrow surveys data\n",
    "columns": {
      "survey_id": "The unique identifier for each survey",
      "survey_name": "The name of the survey",
      "is_archived": "Indicates if the survey is archived",
      "theme_id": "The ID of the theme used in the survey",
      "created_at": "The timestamp when the survey was created",
      "updated_at": "The timestamp when the survey was last updated",
      "visibility": "Survey visibility status (e.g., Public, Mine)",
      "survey_type": "The type of survey (e.g., NPS, CSAT, Conversational)",
      "question_count": "The number of questions in the survey",
      "response_count": "The number of responses received",
      "survey_folder_id": "The ID of the folder where the survey is stored",
      "survey_folder_name": "The name of the folder where the survey is stored",
      "survey_theme_properties": "Properties and customizations associated with the survey theme",
      "airbyte_extracted_at": "The time at which the data was extracted by Airbyte"
    }
  },
  "app_facilityprofiles_stg": {
    "description": "DEPRECATED - use the dim_workplaces table for any information any analyses and definitions.",
    "columns": {
      "id": "Primary key of the facility.",
      "salesforce_id": "Salesforce account ID of the facility.",
      "type": "Type of facility",
      "name": "Name of the facility.",
      "instant_book": "String describing whether or not instant book is enabled at the facility.",
      "created_at": "When the record was created.",
      "net_terms": "Net invoicing terms for the facility.",
      "dispute_terms": "How long the facility has after being invoiced to file a dispute.",
      "tmz": "Timezone of the facility.",
      "longitude": "Longiute of agent's home address.",
      "latitude": "Latitude of agent's home address.",
      "country": "The country the facility is in.",
      "state": "The geographic state the agent is in.",
      "state_code": "Two letter code for the state the agent is in.",
      "msa": "The metropolitan statistical area of the agent.",
      "city": "City of the facility"
    }
  },
  "rpt_latest_shift_offers": {
    "description": "reporting table that filters out only the most recent shift offer for a worker_id and shift_id pair",
    "columns": {
      "shift_offer_id": "Primary key, unique identifier for the shift offer\n",
      "worker_id": "Identifier for the worker associated with this offer",
      "display_id": "Unique identifier for the shift offer that we return through the service's API",
      "shift_id": "Identifier for the shift associated with this offer",
      "amount": "The pay amount shown to the worker",
      "rules_output": "Set of rules applied to the offer each with the amount used to calculate pay",
      "qualification": "The worker's qualification",
      "charge_in_minor_units": "The workplace's charge amount",
      "shift_offer_created_at": "The shift offer's creation timestamp",
      "shift_offer_expires_at": "The shift offer's expiration timestamp",
      "shift_offer_refresh_at": "A new pay/offer will not be generated for a worker before this timestamp",
      "shift_offer_claimed_at": "The shift offer's claimed timestamp"
    }
  },
  "cna_bls_comparison": {
    "description": "",
    "columns": {}
  },
  "report_open_invoice_snapshots__invoices": {
    "description": "Table containing a daily snapshot of open invoices (invoice status of past_due, sent, or viewed) at the invoice grain. Due to the size of this data, this is limited to invoices created in the last 3 years",
    "columns": {
      "invoice_snapshot_id": "Unique surrogate id derived from snapshot_date and invoice_id",
      "snapshot_date": "Daily snapshot date",
      "invoice_id": "Invoice ID",
      "invoice_number": "Invoice number displayed on the invoice (i.e. reference number)",
      "customer_id": "Customer ID",
      "payment_plan_id": "Payment Plan ID",
      "network_document_id": "Network Document ID",
      "invoice_name": "Invoice Name, defaults to 'Invoice'",
      "is_paid": "Whether an invoice has been paid in full",
      "is_draft": "When false, the invoice is considered outstanding, or when true, the invoice is a draft",
      "is_closed": "When true, an invoice is closed and considered bad debt. No further payments are allowed",
      "has_chase": "When true, chasing is enabled",
      "has_autopay": "When true, autopay is enabled. Defaults to false",
      "has_needs_attention": "Whether an invoice needs attention",
      "has_late_fees": "Whether an invoice has late fees associated to it",
      "line_items": "An array of the line items within an invoice",
      "invoice_notes": "Notes about then invoice",
      "object_type": "Object Type - these will all be invoices",
      "invoice_status": "Invoice state, one of draft, not_sent, sent, viewed, past_due, pending, paid, voided",
      "payment_terms": "Payment terms for the invoice, i.e. 'NET 30'",
      "currency_code": "3-letter ISO currency_code",
      "days_from_due_date": "Number of days from the due date and the snapshot date",
      "shipping": "Shipping details of an invoice",
      "taxes": "Tax details regarding an application of tax to the invoice or line item",
      "discounts": "Discount details regarding an application of a discount to the invoice or line item",
      "total": "Total amount of the invoice",
      "balance": "Balance owed on the invoice",
      "subtotal": "Subtotal of the invoice",
      "attempt_count": "Number of payment attempts",
      "invoice_date": "Date of the invoice",
      "due_date": "Date payment is due by",
      "next_payment_attempt_date": "Next scheduled charge attempt, when in automatic collection",
      "expected_payment_date": "Details regarding when payments are expected",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "p2p_status": "This column represents the status of the invoice in relation to its expected payment date. It can have one of the following values: 'open' if the snapshot date is before the expected payment date, 'broken' if the snapshot date is after the expected payment date and either the latest payment date is after the expected payment date or there is no latest payment date and the invoice is not in 'bad_debt', 'pending', 'voided' status and the balance is greater than 0, 'underpaid' if the snapshot date is after the expected payment date and the latest payment date is before or on the expected payment date and the invoice is not paid, 'successful' if the snapshot date is after the expected payment date and the latest payment date is before or on the expected payment date and the invoice is paid.",
      "p2p_creation_date": "This column represents the date when the expected payment date was created. It is extracted from the 'expected_payment_date' object.",
      "latest_payment_date": "This column represents the latest date when a payment was made for the invoice. It is derived from both the payments and transactions data."
    }
  },
  "stg_worker_ops__wfm_agent_roster": {
    "description": "This model creates a view of agent roster data from the worker_ops data source, renames and selects relevant fields such as agent details, shift information,  and training dates for analysis.\n",
    "columns": {
      "agent_name": "Name of the agent.",
      "agent_email": "Email address of the agent.",
      "shift": "Shift timing assigned to the agent.",
      "days_off": "Days off assigned to the agent.",
      "agent_role": "Role of the agent within the organization.",
      "manager": "Name of the agent's manager.",
      "country": "Country where the agent is based.",
      "cohort": "Cohort or batch group of the agent.",
      "training_start_date": "Start date of the agent's training.",
      "training_end_date": "End date of the agent's training.",
      "nesting_start_date": "Start date of the agent's nesting period.",
      "production_start_date": "Start date of the agent's production phase.",
      "attrition_risk": "Indicator of the agent's attrition risk level.",
      "sunday": "Availability status of the agent on Sunday.",
      "monday": "Availability status of the agent on Monday.",
      "tuesday": "Availability status of the agent on Tuesday.",
      "wednesday": "Availability status of the agent on Wednesday.",
      "thursday": "Availability status of the agent on Thursday.",
      "friday": "Availability status of the agent on Friday.",
      "saturday": "Availability status of the agent on Saturday.",
      "status": "Current status of the agent (e.g., active, on leave)."
    }
  },
  "dim_worker_licenses": {
    "description": "Dimension table containing the worker licenses data",
    "columns": {
      "license_id": "Primary Key, the identifier for a unique license",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "created_by_id": "Identifer of the person that created the record - see \"created_by_type\" to see where this would join to",
      "updated_by_id": "Identifer of the person that updated the record - see \"updated_by_type\" to see where this would join to",
      "qualification": "The license qualification type",
      "state": "The state that the license is valid in",
      "is_multi_state": "If the license is valid in multiple states, then TRUE",
      "license_number": "License number",
      "status": "The current status of the license",
      "created_by_type": "The type of user that created the license record, typically the worker",
      "updated_by_type": "The type of user that updated the license record",
      "original_document": "Identifier to the original document and where it is stored",
      "file_storage_file_key": "Key to where the file is stored",
      "file_storage_root_folder": "Folder to where the file is stored",
      "is_notified_of_rejection": "If the worker was notified about their license being rejected, then TRUE",
      "rejection_note_for_worker": "If the worker was notified about their license being rejected, then this is the note associated to it",
      "rejection_reason": "Reason for the worker's license being rejected, if applicable",
      "time_to_review": "In seconds, this is the time between when the license was first added to when the status was first updated after that",
      "expires_at": "When the license expires",
      "issue_date": "Date when the license was issued",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "rejected_at": "When the license was rejected, if applicable",
      "reviewed_at": "When the license was reviewed, if applicable"
    }
  },
  "four_hour_or_less_cancel": {
    "description": "",
    "columns": {}
  },
  "stg_home_health__visits": {
    "description": "Staging model for visits from the home health service\n",
    "columns": {
      "visit_id": "Visit ID",
      "booked_at": "Booked at",
      "booked_worker_id": "Booked worker ID",
      "charge_rate_in_minor_units": "Charge rate in minor units",
      "confirmed_visit_date": "Confirmed visit date",
      "created_at": "Created at",
      "days_of_week": "Days of week availability",
      "deadline": "Deadline",
      "details": "Details",
      "discharge_date": "Discharge date",
      "display_id": "Display id",
      "duration_in_weeks": "Duration in weeks",
      "estimated_duration": "Estimated duration",
      "estimated_start_time": "Estimated start time",
      "interested_workers_ids": "Interested workers IDs",
      "invited_workers_ids": "Invited workers IDs",
      "invited_workers_names": "Invited workers names",
      "pay_rate_in_minor_units": "Pay rate in minor units",
      "pended_at": "Pended at",
      "pending_visit_reason": "Pending visit reason",
      "pricing_type": "Pricing type can be PER_VISIT or PER_HOUR",
      "status": "Visit Occurrence status",
      "visit_type": "Visit type",
      "type_of_care": "Type of care can be HOME_HEALTH or HOSPICE",
      "visits_per_week": "Visits per week",
      "worker_req": "Worker req",
      "worker_id": "Worker ID",
      "workplace_id": "Workplace ID is the same facility ID",
      "case_id": "Case ID"
    }
  },
  "pa_dashboard_Current_Priority_Access_Status_of_HCPs_w_by_Claimed_Shifts": {
    "description": "",
    "columns": {}
  },
  "preventable_bad_events": {
    "description": "",
    "columns": {}
  },
  "fct_zendesk__mqr_qa_tickets": {
    "description": "Fact model for MQR tickets which uses one of the MQR QA Scorecard forms (UST and Disputes). These tickets represent Quality Assurance evaluations initiated by TLs and QAs for MQR agents. This model can be used as a central table for MQR's QA performance.\n",
    "columns": {
      "ticket_id": "unique identifier for the zendesk ticket\n",
      "requester_id": "Unique ID of the requester",
      "submitter_id": "Unique ID of the agent who submitted the ticket.",
      "assignee_id": "Unique ID of the agent assigned to the ticket.",
      "external_id": "The external ID of the ticket.",
      "organization_id": "The ID of the organization associated with the ticket.",
      "group_id": "The ID of the group associated with the ticket.",
      "custom_status_id": "The ID of the custom status associated with the ticket.",
      "brand_id": "The ID of the brand associated with the ticket.",
      "ticket_form_id": "The ID of the ticket form used to submit the ticket.",
      "collaborator_ids": "The IDs of collaborators on the ticket.",
      "follower_ids": "The IDs of followers on the ticket.",
      "via_channel": "The channel the ticket came in from.",
      "requester_name": "Name of the auditor who created the ticket.",
      "requester_email": "Email of the auditor who created the ticket.",
      "requester_role": "role of the requester, representing the auditor\n",
      "assignee_name": "Name of the agent who was audited.",
      "assignee_email": "Email of the agent who was audited.",
      "assignee_role": "Role of the agent who was audited.\n",
      "recipient": "The recipient of the ticket.",
      "subject": "The subject of the ticket.",
      "description": "The description of the issue provided in the ticket.",
      "status": "The status of the ticket.",
      "tags": "The tags associated with the ticket.",
      "satisfaction_rating_score": "The numeric score representing the customer satisfaction rating, if provided",
      "priority": "The priority level of the ticket.",
      "is_from_messaging_channel": "Whether the ticket came from a messaging channel.",
      "ticket_form": "The name of the ticket form used to submit the ticket.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "due_at": "The due date of the ticket.",
      "created_at_pst": "Timestamp of when the record was created. Converted to Pacific Standard Time",
      "initially_assigned_at_pst": "timestamp of when the ticket was initially assigned in PST\n",
      "due_at_pst": "timestamp of when the ticket is due in PST\n",
      "generated_timestamp": "The timestamp the ticket was generated.",
      "wops_qa_contact_driver": "custom field indicating the QA ticket's contact driver",
      "ticket_being_evaluated": "The Zendesk ID of the ticket that is actively being audited and evaluated",
      "business_resource_opportunity": "Indicates whether the ticket presents a business resource opportunity to improve processes or tools",
      "bro_type": "The type of business resource opportunity related to the ticket, if any",
      "bro_details": "Extra details captured in the ticket about any related business resource opportunities",
      "process_knowledge": "Indicates whether process knowledge was properly applied to resolve the ticket",
      "process_knowledge_details": "Extra details captured in the ticket about evaluation of process knowledge application",
      "fcr": "Indicates whether the ticket resolution met the criteria for a \"first contact resolution\"",
      "fcr_details": "Extra details captured in the ticket about the evaluation of first contact resolution criteria",
      "domino_effect": "TBD",
      "domino_effect_details": "TBD",
      "data_creation": "TBD",
      "data_creation_details": "TBD",
      "investigative_note": "Free-form notes entered by the QA auditor related to evaluation of investigation quality",
      "investigative_note_details": "Extra details about the investigative quality captured by the QA auditor",
      "auto_fail_reason": "The reason selected by the QA auditor for why the ticket failed the quality audit",
      "final_audit_outcome": "The final pass/fail outcome determined by the QA auditor after evaluating the ticket",
      "ticket_library": "Indicates if the ticket resolution is deemed to be library-worthy for training and reference",
      "strengths": "TBD",
      "is_training_audit": "Whether the ticket is part of the training audit."
    }
  },
  "post_suspension_behavior": {
    "description": "",
    "columns": {}
  },
  "fasp_dashboard_unassigned_faved_workers": {
    "description": "This contains information on highly rated workers that are unassigned from a shift",
    "columns": {
      "created_week": "date of last day of the week when the action was created.",
      "faved_unassigned_rate": "rate at which highly rated workers are being unassigned",
      "unassigned_faved_count": "unassign shift log by favorite worker.",
      "unassigned_count": "all the shift log count base on the grouping."
    }
  },
  "stg_zendesk__satisfaction_ratings": {
    "description": "Zendesk satisfaction ratings staging model",
    "columns": {
      "rating_id": "Zendesk's unique satisfaction rating identifier",
      "ticket_id": "Zendesk's unique ticket identifier",
      "assigned_agent_id": "Zendesk's internal agent identifier",
      "customer_id": "Zendesk's customer identifier",
      "group_id": "Zendesk's group identifier",
      "reason_id": "Zendesk's reason identifier",
      "rating_reason": "Zendesk's rating reason",
      "provided_score": "Score provided by the customer",
      "provided_comment": "Comment provided by the customer",
      "rating_url": "url to the ticket's rating",
      "created_at": "Timestamp when the rating was created",
      "updated_at": "Timestamp when the rating was last updated",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "stg_survey_sparrow__questions": {
    "description": "Staging table for the Survey Sparrow questions data\n",
    "columns": {
      "question_id": "The unique identifier for each question",
      "question_text": "The text of the survey question",
      "tags": "Tags associated with the question",
      "question_type": "The type of question (e.g., Rating, OpinionScale, TextInput)",
      "choices": "The possible choices for the question",
      "section": "The section metadata for the question",
      "position": "Position of the question in the survey",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "properties": "Additional properties related to the question",
      "annotations": "Annotations attached to the question",
      "is_required": "Indicates whether the question is mandatory",
      "scale_points": "The points scale used in the question (if applicable)",
      "multiple_answers": "Indicates whether multiple answers are allowed for this question",
      "airbyte_extracted_at": "The time at which the data was extracted by Airbyte"
    }
  },
  "daily_last_time_hcfs_int": {
    "description": "",
    "columns": {}
  },
  "first_onboarded_time_for_hcps": {
    "description": "",
    "columns": {}
  },
  "zendesk_payment_metrics": {
    "description": "Report including all of the custom fields in payment and payment qa forms\n",
    "columns": {
      "ticket_id": "unique identifier for the zendesk ticket\n",
      "created_at": "timestamp when ticket was created\n",
      "updated_at": "timestamp when ticket was last updated\n",
      "assigned_at": "timestamp when ticket was last assigned\n",
      "channel": "channel through which the ticket was created\n",
      "status": "ticket status\n",
      "subject": "subject of the tickets\n",
      "brand_id": "brand id of ticket\n",
      "group_id": "id pointing to the group of the ticket\n",
      "priority": "priority value of the ticket\n",
      "assignee_id": "id pointing to the agent assigned to the ticket\n",
      "assignee_name": "name of the agent assigned to the ticket\n",
      "requester_id": "id of requester for the ticket\n",
      "submitter_id": "id pointing to the agent that submitted the ticket\n",
      "description": "description of the ticket\n",
      "has_incidents": "true or false value indicating if the ticket had an incident\n",
      "ticket_form_id": "id of form used in the ticket\n",
      "organization_id": "id of organzation\n",
      "satisfaction_score": "status of satisfaction score\n",
      "reopens": "number of times ticket was reopened\n",
      "replies": "number of agent replies in the ticket\n",
      "business_agent_wait_time_in_minutes": "agent wait time business minutes\n",
      "calendar_agent_wait_time_in_minutes": "agent wait time calendar minutes\n",
      "business_first_resolution_time_in_minutes": "first res time business minutes\n",
      "calendar_first_resolution_time_in_minutes": "full res time calendar minutes\n",
      "business_full_resolution_time_in_minutes": "full res time business minutes\n",
      "calendar_full_resolution_time_in_minutes": "full res time calendar minutes\n",
      "business_on_hold_time_in_minutes": "on hold time business minutes\n",
      "calendar_on_hold_time_in_minutes": "on hold time calendar minutes\n",
      "calendar_reply_time_in_seconds": "reply time time calendar seconds\n",
      "business_reply_time_in_minutes": "reply time time business minutes\n",
      "calendar_reply_time_in_minutes": "reply time time calendar minutes\n",
      "business_requester_wait_time_in_minutes": "wait time business minutes\n",
      "calendar_requester_wait_time_in_minutes": "wait time calendar minutes\n",
      "initially_assigned_at": "timestamp of inital assingment\n",
      "assignee_updated_at": "timestamp of last update of assignee\n",
      "requester_updated_at": "timestamp of last update of requester\n",
      "latest_comment_added_at": "timestamp of last comment\n",
      "status_updated_at": "timestamp that status was updated\n",
      "ticket_id_payment": "ticket id from the payments form\n",
      "contact_type": "contact information from the requester\n",
      "phone_number": "requester phone number\n",
      "z_ticket_vertical": "ticket vertical tag\n",
      "hcf_payment_issue_type": "issue type for HCF tickets\n",
      "hcp_payment_issue_type": "issue type for HCP tickets\n",
      "hcf_pay_rate_adjustment_type": "type if is a pay rate adjustment\n",
      "hcp_cancellation_pay_type": "type if is a hcp cancellation pay\n",
      "hcp_rate_adjustment_type": "type if is a hcp rate adjustment\n",
      "hcp_timesheet_status": "status of the hcp's timesheet\n",
      "hcp_extra_hours_pay_type": "type if is a extra hours pay ticket\n",
      "hcp_stripe_issues_type": "type if is a stripe issue\n",
      "stripe_issue_root_cause": "stripe issue root cause\n",
      "hcp_payments_promotion_bonus_type": "type if is a hcp promo bonus\n",
      "hcp_payments_other_type": "type if is a other type\n",
      "hcp_timesheet_related_type": "type if is a timesheet related issue\n",
      "other_reason_for_contact": "additional reasons for the ticket\n",
      "hcp_type": "status of the hcp\n",
      "facility_name": "name of the hcf\n",
      "payment_shift_block": "am, pm, noc shift block\n",
      "shift_date": "date of the shift\n",
      "description_from_customer": "description of events from the requester\n",
      "b_ticket_vertical_account": "vertical account\n",
      "b_ticket_vertical_shift": "vertical ticket\n",
      "payment_requested_hours": "hours requested to be paid\n",
      "payment_actual_hours": "hours paid\n",
      "urgent_shift": "true or false value if shift is an urgent shift\n",
      "payment_hcp_break": "payment for break\n",
      "payment_facility_negotiation": "negotiation from the facility\n",
      "payment_facility_contact": "contact from the hcf\n",
      "payment_requested_rate": "requested shift payment rate\n",
      "payment_actual_rate": "actual shift payment rate\n",
      "payment_covid_active": "true false if covid is active\n",
      "dollar_value_of_dispute": "total disputed value\n",
      "ticket_type": "ticket type tag\n",
      "on_hold_hours_offset": "hours on hold\n",
      "shift_verification_location": "location when shift verified\n",
      "shift_verification_why_not_digi_timesheet": "verification when timesheet is not digital\n",
      "why_not_digi_timesheet_describe": "description of why timesheet was not ditigal\n",
      "incorrect_hours_root_cause": "root cause of this issue\n",
      "incorrect_hours_other_describe": "additional description of incorrect hours\n",
      "unpaid_break_how_many_shifts": "unpaid breaks during the shift\n",
      "clock_in_out_issues_more_details": "clock in issues detailed\n",
      "other_clock_in_out_issues_please_describe": "additional issues related to clocking in\n",
      "shift_verification_why_not_paper_timesheet": "why paper timesheet was not verified\n",
      "why_not_paper_timesheet_describe": "why paper timesheet was not verified description\n",
      "sent_home_pay_hcp_eligible_details": "is hcp eligible for sent home pay\n",
      "sent_home_pay_root_cause": "root cause why hcp was sent home\n",
      "unscheduled_shift_more_details": "additional details on unscheduled shifts\n",
      "blocked_unscheduled_shift_root_cause": "root cause for blocked unscheduled shifts\n",
      "unblocked_unscheduled_shift_root_cause": "root cause for unblocked unscheduled shifts\n",
      "urgent_shift_more_details": "additional details regarding urgent shift\n",
      "etp_more_details": "etp more details\n",
      "etp_type_of_etp": "type of etp\n",
      "weekly_etp_root_cause": "weekly etp root cause\n",
      "workday_etp_root_cause": "workday etp root cause\n",
      "cancellation_pay_more_details": "more details for cancellation payment_facility_negotiation\n",
      "adjusted_charge_pay_more_details": "more details if the charge pay was adjusted\n",
      "pay_rate_discrepancy_more_details": "details on pay rate discrepancy\n",
      "bonus_more_details": "details on bonus\n",
      "fraud_outcome": "outcome of fraud\n",
      "did_hcp_complain_that_pay_rate_was_lower_than_usual": "true or false if the hcp complained about lower than normal pay rate\n",
      "payment_claim_dispute": "was the claim disputed\n",
      "no_of_payment_claims": "number of claims on the ticket\n",
      "payout_made_to_hcp": "dollar amount paid out to hcp\n",
      "payment_dispute_amount_paid_out_to_hcp": "dollar amount paid out to hcp\n",
      "did_we_bill_the_hcf_for_this_payout": "true or false if the hcf is charged for the payout\n",
      "payment_dispute_amount_claimed_by_hcp": "dollar amount claimed by hcp\n",
      "had_shift_been_adjusted_internally_before_hcp_claim": "true or false if the shift had been adjusted\n",
      "did_hcp_have_negative_balance_in_stripe": "true or false if hcp had a negative balance in stripe\n",
      "did_we_contact_hcf_to_resolve_ticket": "true or false if a hcf had to be contacted\n",
      "escalation_team": "what team is the ticket escalated to\n",
      "escalation_reason": "reason for escalation\n",
      "escalated_ticket": "true or false if the ticket is escalated\n",
      "escalation_review": "review of the escalation\n",
      "legal_pr_risk": "true or false if ticket is a legal or pr risk\n",
      "a_escalation_channel": "the escalation channel of the ticket\n",
      "time_spent_last_update_sec": "time spent on the last update of the ticket\n",
      "total_time_spent_sec": "total time spent on the ticket\n",
      "ticket_id_paymentqa": "ticket id from qa form\n",
      "evaluation_type_qa": "type of evaluation\n",
      "ticket_being_evaluated_qa": "ticket id of the ticket being evaluated\n",
      "ticket_type_qa": "ticket type from qa form\n",
      "final_qa_score_qa": "total qa score\n",
      "alignment_score_qa": "allignment score of the ticket\n",
      "improvement_areas_qa": "areas of improvement in ticket handling\n",
      "payments_leader_qa": "leader identifier\n",
      "payments_auditor_qa": "auditor identifier\n",
      "showed_empathy_qa": "true or false if the agent showed empathy\n",
      "empathy_score_qa": "empathy score of the ticket\n",
      "active_engagement_qa": "true or false if the agent showed active engagement\n",
      "ae_score_qa": "allignment score of the ticket\n",
      "education_qa": "true or false if ticket educated when needed\n",
      "education_score_qa": "education score of the ticket\n",
      "correct_grammar_qa": "true or false if ticket has correct grammar\n",
      "grammar_score_qa": "grammar score of the ticket\n",
      "ticket_formatting_qa": "True or false if ticket is properly formatted\n",
      "ticket_format_score_qa": "Score based on ticket formatting\n",
      "followed_process_qa": "true or false if ticket followed SOPs\n",
      "process_score_qa": "process score of the ticket\n",
      "internal_notes_qa": "true or false if ticket has correct internal notes\n",
      "notes_score_qa": "notes score of the ticket\n",
      "merging_relevant_tickets_mrt_qa": "True or false if agent merged tickets properly\n",
      "ticket_mgt_score_qa": "merge score of the ticket\n",
      "tool_utilization_qa": "true or false if ticket utlizied correct tools\n",
      "tools_score_qa": "tools score of the ticket\n",
      "ticket_form_qa": "true or false if ticket has correct form\n",
      "ticket_form_score_qa": "ticket form score of the ticket\n",
      "resolution_qa": "True or false if achieved a resolution\n",
      "resolution_score_qa": "resolution score of the ticket\n",
      "policy_procedure_qa": "true or false if ticket followed policy procedure\n",
      "policy_procedure_score_qa": "policy score of the ticket\n",
      "twentyfour_hr_solve_qa": "true or false if ticket solved in 24 hours\n",
      "twentyfour_hr_score_qa": "twentyfour hour score of the ticket"
    }
  },
  "stg_zendesk_wops__ticket_forms": {
    "description": "Staging models for Zendesk ticket forms data. Forms are used to collect contact information from customers and eventually create tickets.",
    "columns": {
      "ticket_form_id": "Automatically assigned when creating a ticket form.",
      "restricted_brand_ids": "IDs of all brands that this ticket form is restricted to.",
      "ticket_field_ids": "IDs of all ticket fields which are in this ticket form.",
      "ticket_form_url": "URL of the ticket form.",
      "ticket_form_name": "The name of the form.",
      "is_active": "Indicates if the form is set as active.",
      "is_default": "Indicates if the form is the default form for this account.",
      "position": "The position of this form among other forms in the account.",
      "raw_name": "The dynamic content placeholder, if present, or the \"name\" value, if not.",
      "display_name": "The name of the form that is displayed to an end user.",
      "is_in_all_brands": "Indicates if the form is available for use in all brands on this account.",
      "agent_conditions": "Array of condition sets for agent workspaces.",
      "is_end_user_visible": "Indicates if the form is visible to the end user.",
      "raw_display_name": "The dynamic content placeholder, if present, or the \"display_name\" value, if not.",
      "end_user_conditions": "Array of condition sets for end user products.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake"
    }
  },
  "resting_days_in_days_mod": {
    "description": "",
    "columns": {}
  },
  "hcf_cumulative_balances": {
    "description": "",
    "columns": {}
  },
  "stg_invoiced_api__invoices": {
    "description": "Contains a log of changes to invoices from the invoice provider",
    "columns": {
      "invoice_event_id": "Unique identifier to the log of changes to invoices",
      "invoice_id": "Invoice ID",
      "invoice_number": "Invoice number displayed on the invoice (i.e. reference number)",
      "customer_id": "Customer ID",
      "payment_plan_id": "Payment Plan ID",
      "network_document_id": "Network Document ID",
      "invoice_name": "Invoice Name, defaults to 'Invoice'",
      "is_paid": "Whether an invoice has been paid in full",
      "is_draft": "When false, the invoice is considered outstanding, or when true, the invoice is a draft",
      "is_closed": "When true, an invoice is closed and considered bad debt. No further payments are allowed",
      "has_chase": "When true, chasing is enabled",
      "has_autopay": "When true, autopay is enabled. Defaults to false",
      "has_needs_attention": "Whether an invoice needs attention",
      "has_late_fees": "Whether an invoice has late fees associated to it",
      "line_items": "An array of the line items within an invoice",
      "invoice_notes": "Notes about then invoice",
      "object_type": "Object Type - these will all be invoices",
      "invoice_status": "Invoice state, one of draft, not_sent, sent, viewed, past_due, pending, paid, voided",
      "payment_terms": "Payment terms for the invoice, i.e. 'NET 30'",
      "currency_code": "3-letter ISO currency_code",
      "shipping": "Shipping details of an invoice",
      "taxes": "Tax details regarding an application of tax to the invoice or line item",
      "discounts": "Discount details regarding an application of a discount to the invoice or line item",
      "total": "Total amount of the invoice",
      "balance": "Balance owed on the invoice",
      "subtotal": "Subtotal of the invoice",
      "attempt_count": "Number of payment attempts",
      "invoice_date": "Date of the invoice",
      "due_date": "Date payment is due by",
      "next_payment_attempt_date": "Next scheduled charge attempt, when in automatic collection",
      "expected_payment_date": "Details regarding when payments are expected",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "_airbyte_meta": "airbyte metadata",
      "metadata": "invoiced metadata",
      "invoice_url": "URL to view the invoice in the billing portal",
      "csv_url": "URL to download the invoice as a CSV",
      "pdf_url": "URL to download the invoice as a PDF",
      "payment_url": "URL for the invoice payment page"
    }
  },
  "fasp_dashboard_percentage_weekly_unworked": {
    "description": "This contains information on weekly shift unworked rate by msa.",
    "columns": {
      "shift_start_week": "date of last day of the week when the shift is worked.",
      "unbooked_count": "all the shift count unbooked in an MSA for a week.",
      "shift_count": "all the shift count in an MSA for a week.",
      "unbooked_rate": "unbooked_count / shift_count in a week for an MSA.",
      "msa": "the msa of the facility",
      "state": "the state of the facility",
      "city": "city of the facility"
    }
  },
  "hypothesis_paused_churn_more": {
    "description": "",
    "columns": {}
  },
  "stg_app__facility_cancelled_me_requests": {
    "description": "Staging table containing details about workers and their shifts that were cancelled by the facility otherwise known as facility cancelled me (FCM) requests",
    "columns": {
      "facility_cancelled_me_request_id": "Unique identifier to the facility cancelled me (FCM) request",
      "shift_id": "Unique identifier for the shift",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "reason_type": "The reason for which the worker was sent home by the facility (i.e. sent_home_by_facility, not_on_schedule, etc.)",
      "reason_description": "Additional details provided by the worker to why the worker was sent home by the facility",
      "performed_by": "Internal ID of the actor that responded to the facility cancelled me request (i..e approved/did not approve the FCM request)",
      "performed_by_role": "Role of the actor that responded to the facility cancelled me request (i..e approved/did not approve the FCM request)",
      "response_description": "Additional details provided by the actor that responded to the FCM request",
      "is_at_facility": "If the worker was at the facility at the time of the cancellation, then TRUE",
      "is_deleted": "If the request is deleted, then TRUE",
      "is_approved": "If the request is approved, then TRUE",
      "request_lead_time": "The time difference between when when the shift start datetime and the FCM request was submitted, in hours",
      "response_lead_time": "The time difference between when when the shift start datetime and the FCM request was responded to, in hours",
      "reminders_sent": "The number of reminders sent to the facility to approve the FCM request",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake",
      "is_marked_deleted": "If the record is marked deleted in the source, then TRUE",
      "modified_at": "The datetime that the record was modified in the source"
    }
  },
  "cancel_before_worked": {
    "description": "",
    "columns": {}
  },
  "stg_app__mio_payouts": {
    "description": "Staging model for micro-incentivized onboarding bonus payouts\n",
    "columns": {
      "worker_id": "Primary key, unique indentifier for the worker\n",
      "mio_bonus_total_usd": "Total paid out MIO bonus in USD",
      "mio_bonus_paid_out_at": "When the bonus payout was made",
      "created_at": "When the bonus payout was created",
      "updated_at": "When the bonus payout was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "stg_app__credit_limits": {
    "description": "Staging model for data coming from the application's exclusions table\n",
    "columns": {
      "workplace_id": "Primary key, unique indentifier for the workplace\n",
      "credit_consumed": "",
      "hard_credit_limit": "",
      "soft_credit_limit": "",
      "created_at": "",
      "updated_at": "",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "stg_ringcentral__contacts": {
    "description": "Table containing the company directory information from RingCentral.",
    "columns": {
      "contact_extension_id": "Internal RingCentral Contact Extension ID",
      "contact_extension_number": "Contact's extension number",
      "contact_phone_numbers": "Contact's phone numbers",
      "first_name": "Contact's first name (only for user contacts)",
      "last_name": "Contact's last name (only for user contacts)",
      "email": "Contact's email",
      "job_title": "Contact's job title",
      "department": "Contact's department",
      "contact_name": "Contact's name (for non-user contacts)",
      "contact_type": "Type of contact (i.e. user, department, etc.)",
      "contact_status": "Status of contact (i.e. enabled, disabled, etc.)",
      "extracted_at": "Timestamp at which airbyte extracted the record from the source system"
    }
  },
  "pa_dashboard_HCF_High_Attendance_Worker_Rated": {
    "description": "",
    "columns": {}
  },
  "rpt_invoices_complete_care": {
    "description": "Reporting model, used to create weekly invoicing reports for Complete Care\n",
    "columns": {
      "invoice_sk": "Surrogate key that is a composite of shift_id and invoice number\n",
      "customer_name": "The name of the workplace\n",
      "invoice_number": "Invoice number displayed on the invoice (i.e. reference number)\n",
      "original_invoice_number": "First invoice ID that this invoice was associated to\n",
      "payment_terms": "Payment terms for the invoice, i.e. 'NET 30'\n",
      "shift_date": "Date that the shift started on\n",
      "bill_date": "Date the invoice was issued on\n",
      "due_date": "Date payment is due by\n",
      "username": "Name of the worker who worked the shift\n",
      "timesheets": "blank\n",
      "shift_id": "blank\n",
      "activity_expense": "To Do\n",
      "rate_cost": "Hourly rate of the shift\n",
      "hours_quantity": "Length of the shift in hours\n",
      "amount": "Total amount of the shift\n",
      "description": "Description of the shift\n",
      "check_in": "Time that the worker checked in\n",
      "check_out": "Time that the worker checked in\n",
      "break_minutes": "Length of the lunch break in minutes\n",
      "etp_approved_by": "blank\n",
      "etp_approved_at": "blank"
    }
  },
  "report_workplace_doc_reqs_and_fill_data": {
    "description": "Report with aggregated metrics at the workplace_id grain. Contains information about the number of shifts posted (based on the start time of the shift in the workplace's local time) in the last 2 months by the workplace (not including deleted shifts), booked shifts based on if the shift had a valid worker id, fill rate based on booked shifts divided by shifts posted, and the total number of active workplace docs required by the workplace ",
    "columns": {
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "shifts_posted": "Number of shifts posted (based on the start time of the shift in the workplace's local time) in the last 2 months by the workplace (not including any deleted shifts).",
      "booked_shifts": "Of the shifts posted, this is then number of booked shifts based on a shift having a valid worker_id associated to it",
      "fill_rate": "Of the shifts booked, this is the number of shifts booked / total number of shifts posted",
      "total_workplace_level_doc_reqs": "The number of active (i.e. the document requirements are not archived, deleted, and are required for booking) document requirements at the facility level"
    }
  },
  "int_shift_market_availability": {
    "description": "intermediary table showing the periods over which shifts were available on the marketplace\n",
    "columns": {
      "availability_log_id": "Unique identifier for the shift",
      "shift_id": "Unique identifier for the shift",
      "availability_start_at": "The start of the availability period",
      "availability_end_at": "The end of the availability period",
      "availability_start_action": "The action which resulted in this shift being open on the marketplace",
      "availability_end_action": "The action which resulted in this shift being removed from the marketplace"
    }
  },
  "stg_home_health__cases": {
    "description": "Staging model for cases from the home health service\n",
    "columns": {
      "case_id": "Case ID",
      "created_at": "Created at",
      "display_id": "Display id",
      "patient_id": "Patient id",
      "specialties": "Specialties",
      "status": "Status",
      "workplace_id": "Workplace ID is the same facility ID"
    }
  },
  "fct_zendesk__workplace_tickets": {
    "description": "fact model for Zendesk workplace tickets\n",
    "columns": {
      "ticket_id": "unique identifier for zendesk tickets",
      "requester_id": "unique identifier for zendesk requesters\n",
      "assignee_id": "unique identifier for zendesk assignees\n",
      "organization_id": "unique identifier for zendesk organizations\n",
      "brand_id": "unique identifier for zendesk brands\n",
      "situation_id": "Id of situation this ticket belongs to\n",
      "satisfaction_rating_id": "id of most recent satiscation rating used for this ticket\n",
      "previous_contact_ticket_id": "id of the most recent ticket by this requester prior to this ticket\n",
      "requester_name": "name of the ticket requester\n",
      "requester_email": "email of the ticket requester\n",
      "assignee_name": "name of the ticket assignee\n",
      "assignee_email": "email of the ticket assignee\n",
      "assignee_supervisor": "supervisor of the ticket assignee\n",
      "assignee_agent_role": "role of the ticket assignee agent in their team/roster\n",
      "group_name": "name of the zendesk group the ticket is assigned to\n",
      "ticket_form_name": "name of the zendesk ticket form the ticket was created with\n",
      "channel": "channel the ticket was created from\n",
      "status": "status of the ticket\n",
      "priority": "priority of the ticket\n",
      "recipient": "address that received of the ticket\n",
      "description": "description of the ticket\n",
      "subject": "subject of the ticket\n",
      "satistfaction_score": "satistfaction_score of the ticket\n",
      "ticket_type": "type of the ticket\n",
      "ticket_type_l1": "type of the ticket based on ticket type custom field level 1\n",
      "ticket_type_l2": "type of the ticket based on ticket type custom field level 2\n",
      "ticket_type_l3": "type of the ticket based on ticket type custom field level 3\n",
      "ticket_tags": "tags on the ticket\n",
      "custom_fields": "Custom Field values of the ticket\n",
      "ticket_status": "Status of reviewed ticket\n",
      "reopens": "number of times the ticket was reopened\n",
      "replies": "number of replies on the ticket\n",
      "reply_time_in_minutes": "time taken to reply to the ticket in minutes\n",
      "first_resolution_time_in_minutes": "time taken to resolve the ticket for the first time in minutes\n",
      "full_resolution_time_in_minutes": "time taken to resolve the ticket in minutes\n",
      "handle_time": "time taken to handle the ticket in seconds\n",
      "last_update_time": "time spent on last update in seconds\n",
      "created_at": "\"Timestamp of when the record was created\"",
      "initially_assigned_at": "timestamp of when the ticket was initially assigned\n",
      "assigned_at": "timestamp of when the ticket was assigned\n",
      "solved_at": "timestamp of when the ticket was solved\n",
      "generated_timestamp": "timestamp of when the ticket was generated\n",
      "updated_at": "\"timestamp of when the record was last updated\"",
      "previous_contact_created_at": "timestamp of previous ticket by requester\n",
      "wle_shift_id": "To Do\n",
      "wle_outcome_reached": "To Do\n",
      "wle_reason_caller_cant_self_serve": "To Do\n",
      "wle_reason_replacement_not_needed": "To Do\n",
      "false_wle_reasoning": "To Do\n",
      "false_wle_reasoning_dropdown": "To Do\n",
      "wle_reason_replacement_not_needed_dropdown": "To Do\n",
      "wle_reason_caller_cant_self_serve_dropdown": "To Do"
    }
  },
  "stg_app__facility_profiles_test_accounts": {
    "description": "Staging model for test accounts coming from the application's facilityprofiles\n",
    "columns": {
      "workplace_id": "Primary key, unique indentifier for the workplace\n",
      "salesforce_id": "Salesforce account ID of the workplace. This ID ties back to the Salesforce account ID of the account in Salesforce tables.",
      "billing_specialist_id": "The ID of the billing specialist at the workplace",
      "type": "Type of workplace",
      "name": "Name of workplace",
      "email": "Email of workplace",
      "instant_book": "String describing whether or not instant book is enabled at the workplace",
      "rate_negotiation": "If ON, the the HCP can propose new rates for all the open shifts at this workplace. If OFF, then it will prevent HCPs from negotiating rates and will immediately reject and end any current negotiations that are open",
      "account_stage": "Current stage/status of the workplace'",
      "timezone": "Timezone of the workplace",
      "country": "Country of the workplace",
      "state": "State of the workplace",
      "state_code": "Two letter state code of the workplace",
      "csa": "The combined statistical area of the workplace",
      "msa": "The metropolitan statistical area of the workplace",
      "street_number": "Street number of the workplace",
      "street_name": "Street name of the workplace",
      "address": "Address (Street number and name) of the workplace",
      "postal_code": "Postal code of the workplace",
      "pricing_msa": "An MSA is a US Census Bureau-defined metropolitan statistical area used to define our areas of operation. Pricing MSAs are CBH-specific. While they typically map directly to MSAs, we may split large MSAs into multiple pieces. For example, the New York MSA is split into New York, NY and New York, NJ.",
      "city": "City of the workplace",
      "longitude": "Longitude of the workplace",
      "latitude": "Latitude of the workplace",
      "future_shifts_requested": "Number of future shifts requested by this workplace",
      "clock_in_method": "Potentially deprecated, all records are NULL",
      "time_system": "Potentially deprecated, all records are NULL",
      "is_self_onboarded": "If the workplace self-onboarded, the TRUE",
      "is_manual_msa": "If the MSA of the worker is manually set, the TRUE",
      "verification_preference": "The shift verification preference of the workplace. Note that outbound verifcation may be deprecated in the future and may be already deprecated by the shift verification team.",
      "is_100_instant_pay_enabled": "If instant pay is enabled by the workplace to workers, then TRUE",
      "is_nfc_hcp_toggle_enabled": "No additional information about this field, however most records at FALSE, potentially indicating that this field could be deprecated.",
      "is_nfc_tag": "If the NFC tags are enabled for the workplace, then TRUE",
      "requires_lunch_break": "If the workplace requires workers to take a lunch break, then TRUE",
      "is_prospect": "If the facility is marked as a prospect in placement settings, then TRUE",
      "is_managed_by_parent_workplace": "If the facility is managed by a parent workplace, then TRUE",
      "rates": "Object containing the various set rates for the workplace per worker type",
      "cna_covid_charge": "Historically, the additional COVID charges for a CNA for the facility based on the covid status of the facility. Potentially to be deprecated. ",
      "lvn_covid_charge": "Historically, the additional COVID charges for a LVN for the facility based on the covid status of the facility. Potentially to be deprecated. ",
      "rn_covid_charge": "Historically, the additional COVID charges for a RN for the facility based on the covid status of the facility. Potentially to be deprecated. ",
      "np_covid_charge": "Historically, the additional COVID charges for a NP for the facility based on the covid status of the facility. Potentially to be deprecated. ",
      "caregiver_covid_charge": "Historically, the additional COVID charges for a Caregiver for the facility based on the covid status of the facility. Potentially to be deprecated. ",
      "hazard_pay": "Any additional hazard pay that the facility pays",
      "covid_active": "If COVID is currently active at the facility, then TRUE. Field is typically not accurate based on what the facility reports and may be deprecated in the future.",
      "late_cancellation_window": "The number of hours prior to a shift starting that a facility can cancel a shift and would be considered a late cancellation",
      "late_cancellation_fee_hours": "The number of hours paid to a worker by the facility if the facility cancelled a shift within the late cancellation window",
      "rush_fee_differential": "The additional amount to pay the worker if a rush fee period is applicable for the facility",
      "rush_fee_period": "The number of hours from the start time of a requested shift where it is considered for a rush fee differential",
      "net_terms": "Net invoicing terms for the facility",
      "dispute_terms": "How long the facility has after being invoiced to file a dispute.",
      "is_variable_charge_enabled": "Boolean field denoting facility's access to variable charge feature",
      "sent_home_charge_hours": "Number used for calculating caregiver compensation for sent-home or last-minute cancellations",
      "holiday_fee": "JSON that describes the pay increase this workplace gives for holidays",
      "has_pay_on_holiday": "True if the workplace has increased pay on all holidays, false otherwise",
      "has_pay_on_all_holidays": "JSON that describes the pay increase this workplace gives for holidays",
      "rates_table": "Charge rate differentials for different shift types and days of the week.\nCharge Rates are calculated by taking base charge and adding these differentials as additional charges.",
      "is_quiz_workers_on_rules_enabled": "Signifies if the workplace has enabled the Quiz feature or not",
      "has_auto_declination_enabled": "Signifies if the workplace has enable the auto declination feature or not",
      "auto_declination_reason": "Reason for the enabling the auto-declination feature",
      "max_allowed_work_consecutive_hours": "Maximum number of consecutive hours a worker can work",
      "max_allowed_work_hours_per_week": "Maximum number of hours a worker can work in a week",
      "has_pending_notice_enabled": "Signifies if the admin has enabled the pending notice alert for the facility",
      "pending_notice_date": "Time at which the facility will move from enrolled status to Pending status, if facility donot clear their invoice dues",
      "parent_facility_id": "The parent of the facility",
      "has_location_awareness_enabled": "whether the workplace has the location awareness setting enabled\n",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "facility_last_logged_in_at": "When the facility last logged into CBH app/website",
      "covid_status_last_updated_at": "DEPRECATED",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "payments_to_applications": {
    "description": "",
    "columns": {}
  },
  "monthly_global_booking_journey": {
    "description": "",
    "columns": {}
  },
  "postless_days_in_days_mod": {
    "description": "",
    "columns": {}
  },
  "weekly_activation_cohort_daily_rev": {
    "description": "",
    "columns": {}
  },
  "int_zendesk__mpt_custom_fields_stg": {
    "description": "intermediate model for Zendesk custom fields from Marketplace Terms' Attendance Score Disputes (ASD) tickets. This model gets all custom fields based on the ASD form id\n",
    "columns": {
      "ticket_id": "unique id for the Zendesk ticket",
      "ticket_form_id": "ASD form id in Zendesk tickets",
      "mpt_worker_name": "Name of the worker submitting the dispute\n",
      "mpt_worker_email": "Email of the worker submitting the dispute\n",
      "mpt_worker_id": "16-digit CBH ID for the worker submitting the dispute\n",
      "mpt_facility_name": "Name of the facility where the shift in question took place\n",
      "mpt_facility_issue_type": "Information pertaining to the nature of the issue that took place at the facility\n",
      "mpt_shift_date": "Date of the shift in question\n",
      "mpt_shift_type": "Type of shift for the shift in question\n",
      "mpt_sab_q1": "Shift abandonment: time the worker left the facility\n",
      "mpt_sab_q2": "Shift abandonment: why the worker left\n",
      "mpt_sab_q3": "Shift abandonment: did the worker get approval to leave\n",
      "mpt_sab_q4": "Shift abandonment: name of the person at the facility who approved the worker to leave\n",
      "mpt_sent_home_q1": "Sent home: did the worker arrive on time\n",
      "mpt_sent_home_q2": "Sent home: why was the worker sent home\n",
      "mpt_sent_home_q3": "Sent home: name of the person at the facility who sent the worker home\n",
      "mpt_currently_restricted_risk": "Is the workers account currently restricted\n",
      "mpt_secondary_dispute_type_rr": "What is the nature of this workers deactivation\n",
      "mpt_legal_threat_risk": "Did the worker make an explicit legal threat\n",
      "mpt_favorite_status_risk": "What is the workers favorite status\n",
      "mpt_secondary_dispute_asd": "Secondary type of ASD\n",
      "mpt_safety_type": "Description of the safety incident that took place\n",
      "mpt_dispute_resolution": "What was the dispute resolution\n",
      "mpt_fcm_guidelines_used": "Which FCM guidelines were used to reach the resolution\n",
      "mpt_pushback_or_dissatisfaction": "Did the worker push back on our dispute resolution\n",
      "mpt_facility_issue_classification": "Secondary classification for types of facility issues\n",
      "mpt_escalation_channel_wei_email_risk": "Did this ticket originate from an escalation channel\n",
      "mpt_tertiary_dispute_type_asd": "Tertiary type of ASD\n",
      "mpt_primary_dispute_type": "What is the primary nature of this dispute\n",
      "mpt_usd_guidelines_used": "Which USD guidelines were used to reach the resolution\n",
      "mpt_accidental_cancellation_type": "Did the worker re-book or work the shift\n",
      "mpt_asd_guidelines_used": "Which ASD guidelines were used to reach the resolution\n",
      "mpt_worker_emergency_classification": "What was the classification of the worker emergency\n",
      "mpt_sab_guidelines_used": "Which SAB guidelines were used to reach the resolution\n",
      "mpt_3_acceptance_risk": "Did we accept 3 or more disputes from this worker in the last 3 months\n",
      "mpt_worker_emergency_type": "What was the nature of the worker emergency\n",
      "mpt_primary_dispute_reason": "What is the primary reason this worker is disputing\n",
      "mpt_pr_threat_risk": "Did the worker make an explicit PR threat\n",
      "mpt_other_reason_type": "Free text if the workers dispute does not match one of our categories\n",
      "mpt_accidental_booking_type": "Did the worker cancel the shift within 15 minutes of booking"
    }
  },
  "fct_zendesk__docs_tickets": {
    "description": "Fact model for Zendesk's Docs Support tickets, that can be used as a central table for related Zendesk tickets. Uses Docs group Ids to capture all Docs related Zendesk tickets. This model pivots and adds custom fields from the Docs form to the ticket data.",
    "columns": {
      "ticket_id": "The ID of the Docs ticket.",
      "requester_id": "The ID of the person who requested the ticket.",
      "assignee_id": "The ID of the agent assigned to the ticket.",
      "assignee_cbh_id": "The external ID of the agent assigned to the ticket, this represents the agent's linked CBH ID.",
      "requester_cbh_id": "The external ID of the person who requested the ticket, this represents the requester's linked CBH ID.",
      "organization_id": "The ID of the organization the ticket is associated with.",
      "group_id": "The ID of the group the ticket is associated with.",
      "ticket_form_id": "The ID of the ticket form used to submit the ticket.",
      "cf_document_id": "The ID of the document associated with the ticket (custom field).",
      "cf_docs_requirement_id": "The ID of the document requirement associated with the ticket (custom field).",
      "cf_workeruserid": "The ID of the worker associated with the ticket (custom field).",
      "cf_situation_id": "The ID of the situation associated with the ticket (custom field).",
      "requester_name": "The name of the person who requested the ticket.",
      "requester_email": "The email address of the person who requested the ticket.",
      "assignee_name": "The name of the agent assigned to the ticket.",
      "assignee_email": "The email address of the agent assigned to the ticket.",
      "assignee_supervisor": "The name of the supervisor of the agent assigned to the ticket.",
      "assignee_agent_role": "The role of the agent assigned to the ticket (e.g. Admin, Agent, etc.).",
      "group_name": "The name of the group the ticket is associated with.",
      "ticket_form_name": "The name of the ticket form used to submit the ticket.",
      "channel": "The channel the ticket was received from (e.g. chat, email, phone).",
      "status": "The status of the ticket.",
      "priority": "The priority level of the ticket.",
      "recipient": "The recipient email address of the ticket.",
      "description": "The description of the issue or question in the ticket.",
      "ticket_type": "The type of the ticket.",
      "ticket_tags": "The tags associated with the ticket.",
      "rating_reason": "The reason for the satisfaction rating of the ticket.",
      "provided_score": "The score provided for the satisfaction rating of the ticket.",
      "provided_comment": "The comment provided for the satisfaction rating of the ticket.",
      "other_reason_for_contact": "The other reason for contacting support.",
      "cf_subject": "The subject of the ticket (custom field).",
      "hcp_shift_booking_issue_type": "The type of issue with a healthcare professional's shift booking.",
      "consultation_review": "Whether the ticket requires consultation review.",
      "fraud_outcome": "The outcome of a fraud investigation on the ticket.",
      "msa": "The MSA associated with the ticket.",
      "ticket_vertical_account": "TBD",
      "hcf_document_issue_type": "The type of issue with a healthcare facility's document.",
      "expiration_date": "The expiration date of the document associated with the ticket.",
      "docs_priority": "TBD",
      "document_category": "The category of the document associated with the ticket.",
      "z_ticket_vertical": "The vertical associated with the ticket (custom field).",
      "is_escalated_ticket": "Whether the ticket was escalated.",
      "ticket_vertical_shift": "The vertical associated with the shift for the ticket.",
      "cf_status": "The status of the ticket (custom field).",
      "cf_assignee": "The name of the agent assigned to the ticket (custom field).",
      "escalation_team": "The team the escalated ticket was assigned to.",
      "escalation_reason": "The reason the ticket was escalated.",
      "legalpr_risk": "The legal and PR risk level of the ticket.",
      "internal_verification": "Whether the ticket requires internal verification.",
      "state": "The state associated with the document.",
      "hellosign_document": "Whether the document associated with the ticket is in HelloSign.",
      "on_hold_hours_offset": "TBD",
      "shift_block_all": "TBD",
      "facility_name": "The name of the facility associated with the ticket.",
      "escalation_channel": "The channel used to escalate the ticket.",
      "contact_type": "The method of contact for the ticket (custom field).",
      "hcp_document_issue_type": "The type of issue with a healthcare professional's document.",
      "escalation_review": "The review of the escalation of the ticket.",
      "invisible_document": "Whether the document associated with the ticket is invisible.",
      "shift_date_mmddyy": "The date of the shift associated with the ticket.",
      "documents_product_experiment": "Product experiment option selected for the ticket.",
      "documents_magical_experience": "Checkbox field which capture the magical experience for the ticket.",
      "reopens": "The number of times the ticket was reopened.",
      "replies": "The number of replies on the ticket.",
      "reply_time_in_minutes": "The time in minutes until the first reply on the ticket.",
      "first_resolution_time_in_minutes": "The time in minutes until the first resolution of the ticket.",
      "full_resolution_time_in_minutes": "The total time in minutes until the final resolution of the ticket.",
      "handle_time": "The total time in minutes spent handling the ticket.",
      "last_touch_handle_time": "The time in minutes spent on the last update to the ticket.",
      "connect_handle_time": "The time in minutes spent on the voice ticket.",
      "last_connect_time": "The time in minutes spent on the last connect call.",
      "created_at": "The date and time the ticket was created.",
      "initially_assigned_at": "The date and time the ticket was initially assigned.",
      "assigned_at": "The date and time the ticket was assigned to an agent.",
      "solved_at": "The date and time the ticket was solved.",
      "generated_timestamp": "The timestamp the ticket was generated.",
      "updated_at": "The date and time of the last update to the ticket.",
      "created_at_pst": "The date and time the ticket was created, converted to Pacific Standard Time.",
      "initially_assigned_at_pst": "The date and time the ticket was initially assigned, converted to Pacific Standard Time.",
      "assigned_at_pst": "The date and time the ticket was assigned to an agent, converted to Pacific Standard Time.",
      "solved_at_pst": "The date and time the ticket was solved, converted to Pacific Standard Time.",
      "docs_ticket_type": "TBD",
      "docs_qualification": "TBD",
      "project_lob_owner": "The project line of business owner associated with the ticket.",
      "estimated_start_date": "The estimated start date of the ticket.",
      "estimated_completion_date": "The estimated completion date of the ticket.",
      "kb_request_type": "The type of knowledge base request associated with the ticket.",
      "product_update": "Whether the ticket is requesting a product update.",
      "reject_assignment": "Whether the agent rejected assignment of the ticket.",
      "kb_article_url": "The URL of the knowledge base article associated with the ticket.",
      "line_of_business": "The line of business associated with the agent assigned to the ticket.",
      "agent_company": "The company of the agent assigned to the ticket.",
      "agent_role": "The role of the agent assigned to the ticket.",
      "reply_time_in_seconds": "The time in seconds until the first reply on the ticket.",
      "handle_time_in_seconds": "The total time in seconds spent handling the ticket."
    }
  },
  "hcp_first_last_verified": {
    "description": "",
    "columns": {}
  },
  "investor_hcf_created_at_mom_ltv": {
    "description": "",
    "columns": {}
  },
  "pa_dashboard_percent_windowed_shifts_filled_and_claimed": {
    "description": "",
    "columns": {}
  },
  "fct_docs_composite_requirements": {
    "description": "Bridge table connecting composite requirements to their child requirements. Each row represents a single child requirement within a composite requirement.",
    "columns": {
      "composite_requirement_id": "Unique identifier for each composite requirement relationship",
      "parent_requirement_id": "Foreign key to dim_docs_requirements, identifies the parent composite requirement. Sourced from req_id in the parent table.",
      "child_requirement_id": "Foreign key to dim_docs_requirements, identifies the child requirement. Extracted from composite_config:requirements array.",
      "cta_text": "Call-to-action text displayed for this child requirement. Extracted from composite_config:requirements[].ctaText.",
      "requirement_order": "Zero-based index indicating the order of the requirement within the composite group. Derived from array index position."
    }
  },
  "shift_farming_accounts_users_tasks": {
    "description": "",
    "columns": {}
  },
  "fct_invoice_line_items": {
    "description": "Fact table containing invoice line items",
    "columns": {
      "invoice_line_item_id": "Unique identifier to the line item",
      "invoice_id": "Identifies the invoice ID that the line item is associated to",
      "invoice_number": "Invoice number displayed on the invoice (i.e. reference number)",
      "customer_id": "Invoiced Customer ID",
      "sf_account_id": "Salesforce account ID",
      "title": "Title of the line item",
      "line_item_type": "Optional line item type. Used to group line items by type in reporting",
      "catalog_item": "Optional Item ID. Fills the line item with the name and pricing of the Item.",
      "description": "Optional description",
      "charge_breakdown": "Breakdown of the line item charges",
      "shift_note": "Notes on the shift",
      "shift_times": "Shift times\"",
      "is_taxable": "Excludes amount from invoice taxes when false",
      "is_discountable": "Excludes amount from invoice discounts when false",
      "amount": "Computed from quantity x unit_cost",
      "quantity": "Quantity",
      "unit_cost": "Unit cost or rate",
      "discounts": "Line item Discounts",
      "taxes": "Line item Taxes",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "invoice_updated_at": "Timestamp of the last update to the invoice associated with the line item (i.e. when the invoice was last updated)"
    }
  },
  "fct_zendesk__help_center_articles": {
    "description": "Fact model for Zendesk articles with article view counts from Google Analytics.",
    "columns": {
      "article_id": "Unique identifier for each article.",
      "author_id": "ID of the author of the article.",
      "section_id": "Section ID to which the article belongs.",
      "user_segment_id": "User segment ID associated with the article.",
      "permission_group_id": "Permission group ID of the article.",
      "article_name": "Name of the article.",
      "article_title": "Title of the article.",
      "article_body": "Content/body of the article.",
      "article_url": "URL of the article.",
      "article_page": "Page URL where the article is located.",
      "article_locale": "Locale or language of the article.",
      "label_names": "List of labels/tags assigned to the article.",
      "content_tag_ids": "IDs of content tags associated with the article.",
      "position": "Position of the article within its section.",
      "is_promoted": "Indicates if the article is promoted (True/False).",
      "is_draft": "Indicates if the article is in draft status (True/False).",
      "is_outdated": "Indicates if the article is outdated (True/False).",
      "comments_disabled": "Indicates if comments are disabled for the article (True/False).",
      "view_count": "Number of times the article page was viewed.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "edited_at": "Timestamp when the article was last edited.",
      "source_locale": "Original source locale of the article.",
      "outdated_locales": "List of locales where the article is marked as outdated.",
      "vote_sum": "Sum of all votes received for the article.",
      "vote_count": "Count of votes the article has received.",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system"
    }
  },
  "app_wwf_phase_2_pilot_worker_shifts_stg": {
    "description": "",
    "columns": {}
  },
  "fct_amazon_connect__agent_metrics": {
    "description": "Amazon Connect metrics for customer ops agents. This data is retrieved from the getmetrics API, and is limited by what the API provides",
    "columns": {
      "agent_metric_id": "The unique identifier for the metrics record",
      "agent_id": "The unique identifier for the agent",
      "agent_routing_profile_id": "The Connect routing profile ID associated with the agent",
      "agent_hierarchy_group_id": "The Connect hierarchy group ID associated with the agent",
      "agent_name": "The first and last name of the agent",
      "agent_email": "The email address associated with the agent",
      "agent_phone_type": "The phone type associated with the agent, such as SOFTPHONE or DESKPHONE",
      "agent_metric_start_time": "The start time of the metrics period",
      "agent_metric_end_time": "The end time of the metrics period",
      "abandonment_rate": "The percentage of inbound contacts abandoned while waiting in queue or ringing",
      "agent_adherent_time": "The total time in seconds that the agent was in an Adherent state during their schedule",
      "agent_answer_rate": "The percentage of contacts handled out of the total number of contacts offered to the agent",
      "agent_non_adherent_time": "The total time in seconds that the agent was in a Not Adherent state during their schedule",
      "agent_non_response": "The number of contacts offered to the agent that were not answered",
      "agent_non_response_without_customer_abandons": "The number of contacts offered to the agent that were not answered, excluding contacts abandoned by the customer before being offered to the agent",
      "agent_occupancy": "The percentage of time that the agent spent talking or doing after call work during their schedule",
      "agent_schedule_adherence": "The percentage of time that the agent adhered to their schedule",
      "agent_scheduled_time": "The total seconds corresponding to the duration of the agent's schedule",
      "avg_abandon_time": "The average time in seconds that abandoned contacts had waited before disconnecting",
      "avg_active_time": "The average time in seconds that the agent spent talking or doing after call work per contact handled",
      "avg_after_contact_work_time": "The average time in seconds per contact that the agent spent doing after call work",
      "avg_agent_connecting_time": "The average time in seconds per contact that the agent spent connecting",
      "avg_agent_pause_time": "The average time in seconds per contact that the agent spent paused",
      "avg_contact_duration": "The average time in seconds from contact creation to termination or transfer",
      "avg_conversation_duration": "The average time in seconds that the agent spent talking per contact handled",
      "avg_dials_per_minute": "The average number of outbound calls placed per minute",
      "avg_flow_time": "The average time in seconds that contacts took to complete their full lifecycle",
      "avg_greeting_time_agent": "The average time in seconds per contact that the agent spent greeting after connecting",
      "avg_handle_time": "The average time in seconds per contact that the agent spent from connecting to the customer to disconnecting",
      "avg_hold_time": "The average time in seconds per contact that the customer spent on hold",
      "avg_hold_time_all_contacts": "The average time in seconds per contact that the customer spent on hold, including contacts that were never put on hold",
      "avg_holds": "The average number of holds per contact",
      "avg_interaction_and_hold_time": "The average time in seconds per contact that the agent spent interacting with the customer or the customer was on hold",
      "avg_interaction_time": "The average time in seconds per contact that the agent spent interacting with the customer",
      "avg_interruptions_agent": "The average number of interruptions the agent experienced per contact handled",
      "avg_interruption_time_agent": "The average time in seconds per interruption that the agent experienced",
      "avg_non_talk_time": "The average time in seconds per contact that the agent spent not talking to the customer after connecting",
      "avg_queue_answer_time": "The average time in seconds that successfully connected contacts spent in the queue",
      "avg_resolution_time": "The average time in seconds from contact creation to resolution",
      "avg_talk_time": "The average time in seconds per contact that either the agent or customer spent talking",
      "avg_talk_time_agent": "The average time in seconds per contact that the agent spent talking",
      "avg_talk_time_customer": "The average time in seconds per contact that the customer spent talking",
      "avg_wait_time_after_customer_connection": "The average time in seconds from customer connection to agent connection",
      "contacts_created": "The total number of contacts created",
      "contacts_handled": "The total number of contacts handled by the agent",
      "contacts_handled_by_connected_to_agent": "The total number of contacts that were connected to the agent after being in queue",
      "contacts_hold_abandons": "The total number of contacts abandoned while on hold",
      "contacts_on_hold_agent_disconnect": "The total number of contacts where the agent disconnected when the contact was on hold",
      "contacts_on_hold_customer_disconnect": "The total number of contacts where the customer disconnected when the contact was on hold",
      "contacts_put_on_hold": "The total number of contacts placed on hold at least once",
      "contacts_transferred_out_external": "The total number of contacts transferred by the agent to an external number",
      "contacts_transferred_out_internal": "The total number of contacts transferred by the agent to another agent or queue",
      "contacts_queued": "The total number of contacts that entered the queue",
      "contacts_queued_by_enqueue": "The total number of contacts queued through an Enqueue flow step",
      "contacts_transferred_out": "The total number of contacts transferred out by the agent",
      "contacts_transferred_out_by_agent": "The total number of contacts transferred out by the agent to another agent or queue",
      "contacts_transferred_out_from_queue": "The total number of contacts transferred out of the queue to another agent or queue before being connected to the agent",
      "flows_outcome": "The total number of contact flows ended",
      "flows_started": "The total number of contact flows started",
      "human_answered_calls": "The total number of contacts answered by the agent",
      "max_flow_time": "The maximum time in seconds for any contact to complete their flow",
      "max_queued_time": "The maximum time in seconds any contact spent queued",
      "min_flow_time": "The minimum time in seconds for any contact to complete their flow",
      "percent_contacts_step_expired": "The percentage of contacts that reached the Expired routing step out of total contacts handled",
      "percent_contacts_step_joined": "The percentage of contacts that reached the Joined routing step out of total contacts handled",
      "percent_non_talk_time": "The percentage of handle time that the agent spent in a non-talking state after connecting to contacts",
      "percent_talk_time": "The percentage of handle time that either the agent or customer spent talking",
      "percent_talk_time_agent": "The percentage of handle time that the agent spent talking",
      "percent_talk_time_customer": "The percentage of handle time that the customer spent talking",
      "service_level": "The percentage of contacts successfully connected to an agent within the specified service threshold time",
      "step_contacts_queued": "The total number of contacts that reached the Queued routing step",
      "sum_after_contact_work_time": "The total time in seconds that the agent spent doing after call work for all contacts handled",
      "sum_connecting_time_agent": "The total time in seconds that the agent spent connecting to contacts handled",
      "contacts_abandoned": "The total number of contacts abandoned while queued or ringing",
      "sum_contacts_abandoned_in_x": "The total number of contacts abandoned within the specified threshold time",
      "sum_contacts_answered_in_x": "The total number of contacts answered by agents within the specified threshold time",
      "sum_contact_flow_time": "The total flow time in seconds for all contacts",
      "sum_contacts_disconnected": "The total number of contacts ended by disconnects",
      "sum_error_status_time_agent": "The total time in seconds the agent spent in an error state",
      "sum_handle_time": "The total handle time in seconds for all contacts handled",
      "sum_hold_time": "The total time in seconds that customers spent on hold for all contacts",
      "sum_idle_time_agent": "The total time in seconds that the agent spent idle between contacts",
      "sum_interaction_and_hold_time": "The total time in seconds that agents spent interacting with customers or customers were on hold",
      "sum_interaction_time": "The total time in seconds that agents spent interacting with customers",
      "sum_non_productive_time_agent": "The total time in seconds that the agent spent in a non-productive state",
      "sum_online_time_agent": "The total online time in seconds that the agent was logged in and available",
      "sum_retry_callback_attempts": "The total number of retry attempts made for callback contacts"
    }
  },
  "report_zendesk__payments_scorecard_tickets": {
    "description": "A comprehensive model capturing details of Zendesk tickets and their associated quality metrics for payments scorecards.",
    "columns": {
      "ticket_id": "unique identifier for zendesk tickets",
      "subject": "subject of the ticket",
      "requester_id": "unique identifier for zendesk requester",
      "assignee_id": "unique identifier for zendesk assignee",
      "organization_id": "unique identifier for zendesk organization (workplace)",
      "brand_id": "unique identifier for zendesk brand",
      "ata_ticket_id": "unique identifier for ATA ticket",
      "requester_name": "name of the requester",
      "requester_email": "email of the requester",
      "assignee_name": "name of the assignee",
      "assignee_email": "email of the assignee",
      "group_name": "name of the group",
      "ticket_form_name": "name of the ticket form",
      "via_channel": "channel through which the ticket was created",
      "priority": "priority of the ticket",
      "recipient": "recipient address of the ticket",
      "description": "description of the ticket",
      "ticket_tags": "tags associated with the ticket",
      "uni_evaluation_type": "type of evaluation",
      "uni_total_time_spent_sec": "total time spent in seconds",
      "uni_incorrect_change_to_customer_account": "indicates if there was an incorrect change to the customer's account",
      "uni_cip_autofail": "indicates if there was a CIP autofail",
      "uni_autofail_passfail": "autofail pass/fail status",
      "uni_compliance_autofail": "indicates if there was a compliance autofail",
      "uni_agent_processed_incorrect_charge_s": "indicates if the agent processed an incorrect charge(s)",
      "uni_excessive_hold_or_dead_airs_that_led_to_customer_disconnection": "indicates if excessive hold or dead airs led to customer disconnection",
      "uni_work_avoidance": "indicates work avoidance",
      "uni_incorrect_use_of_pending_or_onhold_status": "indicates incorrect use of pending or on-hold status",
      "uni_qat1_agent_email_address": "email address of the QAT1 agent",
      "uni_delta": "delta value",
      "uni_sending_email_to_incorrect_email_or_customer": "indicates if an email was sent to an incorrect email or customer",
      "uni_failure_to_address_all_or_additional_inquiries_raised_by_the_customer": "indicates failure to address all or additional inquiries raised by the customer",
      "uni_ob_call_recording_line_advisement": "indicates OB call recording line advisement",
      "uni_amount_processed_to_professional_by_agent": "amount processed to professional by agent",
      "uni_merging_a_ticket_to_an_unassigned_ticket": "indicates merging a ticket to an unassigned ticket",
      "uni_final_qa_score": "final QA score",
      "uni_agent_communicated_incorrect_amount": "indicates if the agent communicated an incorrect amount",
      "uni_duplicate_resolutioncommunication": "indicates duplicate resolution/communication",
      "uni_time_spent_last_update_sec": "time spent since the last update in seconds",
      "uni_non_compliance_to_sop": "indicates non-compliance to SOP",
      "uni_processed_duplicate_payment": "indicates if a duplicate payment was processed",
      "uni_ticket_being_evaluated": "ticket being evaluated",
      "uni_agent_processed_incorrect_amount": "indicates if the agent processed an incorrect amount",
      "uni_payment_autofail": "indicates a payment autofail",
      "uni_invalid_ticket_escalation": "indicates an invalid ticket escalation",
      "uni_failure_to_leave_internal_notes": "indicates failure to leave internal notes",
      "uni_actual_amount_owed_to_the_professional": "actual amount owed to the professional",
      "uni_agent_verified_non_compliant_timesheet": "indicates if the agent verified a non-compliant timesheet",
      "pqa_formatting_v2": "pqa formatting version 2",
      "pqa_lob_specific": "pqa line of business specific",
      "pqa_mrt_v2": "pqa MRT version 2",
      "pqa_zd_profile_update": "pqa Zendesk profile update",
      "pqa_internal_notes_v2": "pqa internal notes version 2",
      "pqa_tools_and_process_utilization": "pqa tools and process utilization",
      "pqa_payments_form": "pqa payments form",
      "pqa_grammar_v2": "pqa grammar version 2",
      "pqa_active_engagement_v2": "pqa active engagement version 2",
      "pqa_education_v2": "pqa education version 2",
      "pqa_payments_leader": "pqa payments leader",
      "pqa_empathy": "pqa empathy",
      "ps_pt_tools_and_process_utilization": "ps PT tools and process utilization",
      "ps_pt_education": "ps PT education",
      "ps_pt_zendesk_form": "ps PT Zendesk form",
      "ps_pt_internal_notes_markdown_reason": "ps PT Zendesk form",
      "ps_pt_overall_communication": "ps PT overall communication",
      "ps_pt_merging_relevant_tickets": "ps PT merging relevant tickets",
      "ps_pt_internal_notes": "ps PT internal notes",
      "ps_pt_agent_company": "ps PT agent company",
      "ps_pt_empathy": "ps PT empathy",
      "ps_ticket_selected_from_qa_audit_selection_tool": "which ticket was selected",
      "unadjusted_qa_score": "Unadjusted QA score",
      "ata_delta": "ATA delta value",
      "reopens": "Number of times the ticket has been reopened",
      "replies": "Number of replies on the ticket",
      "calendar_reply_time_in_minutes": "Reply time in minutes",
      "calendar_first_resolution_time_in_minutes": "First resolution time in minutes",
      "calendar_full_resolution_time_in_minutes": "Full resolution time in minutes",
      "handle_time": "Time taken to handle the ticket",
      "created_at": "Timestamp of when the record was created",
      "initially_assigned_at": "Timestamp of when the ticket was initially assigned",
      "assigned_at": "Timestamp of when the ticket was assigned",
      "solved_at": "Timestamp of when the ticket was solved",
      "generated_timestamp": "Timestamp of when the record was generated",
      "updated_at": "Timestamp of when the record was updated"
    }
  },
  "stg_survey_sparrow__contacts": {
    "description": "Staging table for the Survey Sparrow contacts data.\n",
    "columns": {
      "contact_id": "The unique identifier for each contact",
      "contact_name": "The full name of the contact",
      "contact_first_name": "The first name of the contact",
      "contact_last_name": "The last name of the contact",
      "contact_email": "The email address of the contact",
      "is_active": "Indicates whether the contact is active",
      "account_id": "The account ID associated with the contact",
      "created_at": "Timestamp of when the record was created",
      "created_date": "The date when the contact was created",
      "contact_type": "The type of contact",
      "is_unsubscribed": "Indicates whether the contact is unsubscribed",
      "contact_lists": "Lists associated with the contact",
      "airbyte_extracted_at": "The time at which the data was extracted by Airbyte"
    }
  },
  "facility_num_posted_last_14_mod": {
    "description": "",
    "columns": {}
  },
  "hcp_cohortized_mom_ltv_by_created_at": {
    "description": "",
    "columns": {}
  },
  "hcf_first_shifts": {
    "description": "Listing of all facilities that have posted a shift in the app, along with the dates of first shifts according to various definitions\n",
    "columns": {
      "workplace_id": "HCF ID in the CBH app",
      "workplace_type": "type of HCF as categorized in the CBH app",
      "salesforce_account_id": "ID of the salesforce account for th HCF",
      "salesforce_facility_type": "type of HCF as categorized in salesforce",
      "first_shift_start_date_no_deletions": "minimum shift start date in the app, excluding deleted shifts",
      "first_shift_created_date_no_deletions": "minimum shift created date in the app, excluding deleted shifts",
      "first_shift_start_date_with_deletions": "minimum shift start date in the app, including deleted shifts",
      "first_shift_created_date_with_deletions": "minimum shift created date in the app, including deleted shifts",
      "first_shift_verified_start_date": "minimum shift start date in the app, where verified is true",
      "closing_opportunity_id": "salesforce id of the opportunity in closest proximity to, but not after, the first shift created date",
      "closing_opportunity_type": "type of salesforce opportunity in closest proximity to, but not after, the first shift created date",
      "closing_opportunity_created_date": "created date of salesforce opportunity in closest proximity to, but not after, the first shift created date",
      "closing_opportunity_close_date": "close date of salesforce opportunity in closest proximity to, but not after, the first shift created date",
      "closing_rep": "owner of salesforce opportunity in closest proximity to, but not after, the first shift created date"
    }
  },
  "stg_app__placement_candidates": {
    "description": "Staging model for data coming from the placement candidate table\n",
    "columns": {
      "placement_candidate_id": "Primary key, unique indentifier for the placement candidate\n",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "access_id": "A placement candidate's access id",
      "status": "A placement candidate's status: disabled, onboarding, pending or activated\n",
      "introduction_url": "A placement candidate's introduction url\n",
      "job_types_interested": "A list of job's type which a placement candidate interested in\n",
      "shift_types_interested": "A list of shift types which a placement candidate interested in\n",
      "preferred_areas": "A list of areas which a placement candidate prefers to work\n",
      "resume_status": "A resume status of a placement candidate",
      "resume_parsing_decision": "A resume parsing decision of a placement candidate",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "stg_worker_shift_view__open_shift_views": {
    "description": "Staging table containing shift view app event data from IOS, Android, and Web.",
    "columns": {
      "worker_open_shift_viewed_id": "Unique identifier to the shift view event",
      "shift_id": "Unique identifier for the shift",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "shift_offer_display_id": "Display id of the shift offer viewed with this shift view",
      "source": "Schema where the data was derived from for audit purposes",
      "workplace_msa": "Metropolitan statistical area (MSA) for the workplace",
      "worker_msa": "Metropolitan statistical area (MSA) for the worker",
      "worker_requirement": "The type/level of worker that is required for the shift (i.e. nurse, EMT, etc.)",
      "shift_type": "The working time set by the facility (i.e. PM, AM, etc.)",
      "streaks_bonus": "Additional bonus paid if the shift is a streak",
      "streaks_payment_method": "Payment method for the streaks, if applicable",
      "streak_alert_message": "Alert message shown that is associated with the streak, if applicable",
      "has_work_with_friends_feature_flag_on": "If the worker has the work with friends feature flag turned on then TRUE",
      "is_holiday_shift": "If the shift is a holiday shift then TRUE",
      "is_priority_access_shift": "If the shift is a priority access shift then TRUE",
      "is_instant_pay": "If the shift is an instant pay shift then TRUE",
      "is_covid_hazard_pay_active": "If the shift has COVID hazard pay active then TRUE. Not: potentially deprecated field",
      "is_hot_shift": "If the shift is a hot shift then true",
      "is_worker_hidden_as_colleague_on_shifts": "If the worker is hidden as a colleague on shifts then true",
      "has_profile_picture_uploaded": "If the worker has a profile picture uploaded then true",
      "has_missing_documents": "If the worker has missing documents then true",
      "is_instant_review": "True if the shifts missing documents can be reviewed instantly",
      "missing_documents": "A comma separated list of the missing documents",
      "has_extra_time_pay": "If the shift has extra time pay then true",
      "hourly_pay": "The hourly pay rate of the shift at the time of viewing",
      "facility_distance": "The distance to the facility in miles",
      "num_colleagues_shown": "Number of colleagues shown to the worker when the shift was viewed",
      "num_familiar_colleagues_shown": "Number of familiar colleagues shown to the worker when the shift was viewed",
      "num_friends_shown": "Number of friends shown to the worker when the shift was viewed",
      "num_open_shifts_in_slot": "Number of open shifts in the slot",
      "priority_access_time_remaining": "Amount of priority access time remaining when the shift was viewed",
      "event_time": "Timestamp of when the shift was viewed",
      "received_at": "Timestamp of when Segment received the event"
    }
  },
  "stg_worker_ops__autoqa_conversations": {
    "description": "Staging model for AutoQA conversations in Worker Ops, structuring chatbot interaction data for analysis.",
    "columns": {
      "conversation_key": "Surrogate key generated using `conversation_id` and `conversation_start_time`.",
      "agent_id": "Unique identifier for the agent associated with the conversation.",
      "assistant_id": "Unique identifier for the virtual assistant handling the conversation.",
      "ticket_id": "Zendesk Ticket ID associated with the conversation.",
      "expected_group_id": "Expected group ID for routing the conversation.",
      "found_group_id": "Actual group ID where the conversation was routed.",
      "conversation_id": "Unique identifier for the conversation.",
      "conversation_date": "Date of the conversation.",
      "conversation_start_time": "Start time of the conversation.",
      "conversation_logs": "Full logs of the conversation interactions.",
      "ticket_link": "URL link to the associated Zendesk ticket.",
      "assistant_response": "Response provided by the virtual assistant.",
      "is_error_found": "Indicates whether an error was found during the conversation.",
      "is_journey_looped": "Indicates whether the user looped through the conversation journey multiple times.",
      "is_welcome_selection_form": "Indicates whether the welcome selection form was presented to the user.",
      "is_channel_selection_form": "Indicates whether the user was presented with a contact channel selection form.",
      "is_correct_routing": "Indicates whether the user was routed correctly to the expected group.",
      "selected_welcome_form": "The selected option from the welcome selection form.",
      "selected_channel": "The communication channel selected by the user.",
      "created_at": "Timestamp of when the record was created"
    }
  },
  "stg_zendesk__organizations": {
    "description": "Zendesk organizations staging model, each organization is a workplace",
    "columns": {
      "organization_id": "Zendesk's unique organization identifier",
      "workplace_id": "Workplace's external id in the app",
      "organization_url": "Zendesk's organization url",
      "organization_name": "Zendesk's organization name",
      "has_shared_tickets": "boolean value to check if organization has shared tickets",
      "has_shared_comments": "boolean value to check if organization has shared comments",
      "organization_details": "Zendesk's organization details",
      "organization_notes": "Zendesk's organization notes",
      "has_users": "boolean value to check if organization has users",
      "has_tickets": "boolean value to check if organization has tickets",
      "has_gooduser": "boolean value to check if organization has gooduser",
      "has_usertickets": "boolean value to check if organization has usertickets",
      "billing_country": "Organization's billing country",
      "number_of_beds": "Organization's number of beds",
      "on_probation_suspension_reason": "Organization's on probation suspension reason",
      "state": "Zendesk's organization state",
      "workplace_type": "Type of the workplace",
      "billing_county": "Organization's billing county",
      "cbh_app_account_id": "Organization's id in cbh app. Coalesce with the id from organization_name",
      "workplace_email": "Organization's email",
      "workplace_stage": "Organization's stage",
      "workplace_fax": "Organization's fax",
      "workplace_msa": "Organization's msa",
      "group_id": "Zendesk's group id",
      "parent_workplace_id": "Organization's parent workplace id",
      "workplace_phone": "Organization's phone",
      "workplace_vertical": "Organization's vertical",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "stg_zendesk__users": {
    "description": "Zendesk users staging model",
    "columns": {
      "user_id": "Zendesk's unique user identifier",
      "worker_id": "Worker's external id in the app",
      "workplace_user_id": "Workplace user's external id in the app",
      "organization_id": "id of the organization the user belongs to",
      "custom_role_id": "id of the custom role granted to the user in zendesk",
      "default_group_id": "id of the default group the user belongs to",
      "user_name": "user full name",
      "user_email": "user's registered email",
      "user_phone": "user's registered phone number",
      "user_role": "zendesk user's role",
      "user_role_type": "number value to represent user's role type in zendesk",
      "user_timezone": "user's timezone",
      "user_locale": "user's locale",
      "facility": "facility that the user belongs to",
      "user_msa": "msa of the user",
      "user_type": "type of the user",
      "is_auto_escalate_to_tier_2": "boolean value to check if user's tickets are marked as auto escalated to tier 2",
      "has_ongoing_legal_threat": "boolean value to check if user has any ongoing legal threat",
      "user_class": "class of the user, can be worker, workplace or agent",
      "designation": "designation of the user in zendesk",
      "supervisor": "supervisor of the user, applicable for internal agents",
      "agent_role": "role of the agent in their team/roster. Denoted as \"role\" in user_fields object in zendesk",
      "agent_status": "status of the agent, either active or inactive. Denoted as \"status\" in user_fields object in zendesk",
      "agent_company": "company of the agent, either an external BPO or Clipboard Health. Denoted as \"company\" in user_fields object in zendesk",
      "line_of_business": "line of business of the agent. Designating their team within the Customer Operations organization",
      "fcr_status": "wether the user had a first call resolution or not",
      "csat_last_requested": "when was the csat last requested",
      "ticket_restriction": "ticket restriction for the user",
      "last_login_at": "timestamp when user last logged in",
      "is_verified": "boolean value to check if user is verified",
      "is_active": "boolean value to check if user is active",
      "is_shared": "boolean value to check if user is shared",
      "is_shared_agent": "boolean value to check if user is a shared agent",
      "is_moderator": "boolean value to check if user is a moderator",
      "is_two_factor_auth_enabled": "boolean value to check if user has two factor authentication enabled",
      "is_restricted_agent": "boolean value to check if user is a restricted agent",
      "is_suspended": "boolean value to check if user is suspended",
      "has_shared_phone_number": "boolean value to check if user has shared their phone number in zendesk",
      "is_permanently_deleted": "boolean value to check if user is permanently deleted",
      "created_at": "timestamp when user was created",
      "updated_at": "timestamp when user was last updated",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake",
      "rest_day_1": "First rest day of the agent",
      "rest_day_2": "Second rest day of the agent",
      "shift_start_time": "Time the agent starts their shift",
      "shift_end_time": "Time the agent ends their shift"
    }
  },
  "pa_dashboard_all_shift_booked_to_unworked_ratio": {
    "description": "",
    "columns": {}
  },
  "this_next_month_cumulative_fin": {
    "description": "",
    "columns": {}
  },
  "months_to_marketing_spend_payback": {
    "description": "",
    "columns": {}
  },
  "stg_app_pii__agent_profiles": {
    "description": "Staging table containing PII for workers.",
    "columns": {
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "salesforce_id": "Related Salesforce ID for the worker",
      "name": "Name of the worker",
      "email": "Email of the worker\"",
      "phone": "Phone number of the worker",
      "dob": "Date of birth of the worker",
      "created_at": "Timestamp of when the record was created"
    }
  },
  "fasp_dashboard_dispute_stg": {
    "description": "This contain informations on disputes from a worker who has high rating status at atleast 1 workplace, versus workers who do not have high rating status anywhere and the total no of workplaces where that worker has high rating status when they filed that dispute in the last 3 months.",
    "columns": {
      "id": "",
      "agent_id": "ID of the worker that submit the ticket",
      "created_week": "date of last day of the week when the ticket was created.",
      "created_at": "the date when the ticket was created.",
      "tag": "the ticket tag.",
      "submitter_id": "zendesk id of the ticket submitter",
      "high_rating_facility_count": "total facility count that rated the worker highly (rating >= 4) as the time of creating the ticket.",
      "is_highly_rated": "is the action performed by the highly rated worker. A worker with a rating >= 4 as the time of creating the ticket",
      "msa": "the msa of the agent",
      "state": "the state of the agent",
      "city": "city of the agent"
    }
  },
  "invoiced_customers_stg": {
    "description": "",
    "columns": {}
  },
  "stg_open_shifts__shift_offers": {
    "description": "Staging model for shift offers data coming from the open shifts service\n",
    "columns": {
      "shift_offer_id": "Primary key, unique identifier for the shift offer\n",
      "worker_id": "Worker id",
      "display_id": "Display id",
      "shift_id": "Shift id",
      "amount_in_minor_units": "Pay amount",
      "pay_breakdown": "Pay breakdown",
      "charge_in_minor_units": "Charge amount",
      "qualification": "HCP qualification",
      "created_at": "Created At",
      "expires_at": "Offer expiration timestamp",
      "refresh_at": "A new pay/offer will not be generated for a worker before this timestamp",
      "claimed_at": "When the offer was claimed",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "stg_docs__hcp_requirements": {
    "description": "Staging model for data coming from the docs service's hcp requirements table\n",
    "columns": {
      "hcp_requirement_id": "Primary key, unique indentifier for the hcp requirement record\n",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "req_id": "Unique identifier for the requirement",
      "fulfilled_by": "",
      "requirement": "",
      "req_name": "Name of the requirement. Note: that this can change over time, use req_id when possible",
      "types": "",
      "is_visible_to_hcp": "",
      "is_visible_to_hcf": "",
      "is_archived": "",
      "expiry_at": "",
      "created_at": "",
      "updated_at": "",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "worker_mobile_view_add_friend_modal_stg": {
    "description": "",
    "columns": {}
  },
  "stg_zendesk__zd_prod_agent_availabilities": {
    "description": "Staging model for zendesk agent availabilities. This model contains historical records from the agent availabilities API. It ingests data through a python script hosted in TechOps' AWS Lambda instance, and appends new records to the table every minute\n",
    "columns": {
      "agent_availability_id": "The unique identifier for the agent availability record. Created using a surrogate key from agent_id and timestamp.\n",
      "agent_id": "Unique identifier for the zendesk agent",
      "availability_at": "Timestamp of the agent availability record",
      "status_id": "Unique identifier for the agent status",
      "status_name": "Name of the agent status",
      "status_updated_at": "Timestamp of the agent status update",
      "web_items": "Number of web items assigned to the agent",
      "web_capacity": "Number of web items the agent can handle",
      "messaging_items": "Number of messaging items assigned to the agent",
      "messaging_capacity": "Number of messaging items the agent can handle"
    }
  },
  "attendance_policy_restriction_stg": {
    "description": "This contains information on attendance policy score restrictions",
    "columns": {
      "id": "Unique identifier for restrictions\n",
      "worker_id": "ID of restricted worker",
      "score_log_id": "ScoreLog ID responsible for the restriction",
      "is_active": "Boolean indicating if the restriction is currently active or not\n",
      "created_week": "Day of the week when the restriction was created\n",
      "created_at": "The time when the restriction was created",
      "duration": "Duration of the restrictions in days",
      "rated_highly": "Indicates whether a worker is rated highly (rating >= 4) at any facility at the point of restriction\n",
      "high_rating_facility_count": "Total facility that rated the worker highly (rating >= 4) as the time of score policy restriction.\n",
      "processed_at": "This is the time that the restriction was lifted",
      "reason": "The reason for the worker's restriction"
    }
  },
  "worker_shift_views_last_6_months": {
    "description": "Reporting table that aggregates shift views at the shift grain for shifts created in the last 6 months\n",
    "columns": {
      "shift_id": "Unique identifier for the shift",
      "shift_start_date": "Start date of the shift\n",
      "workplace_msa": "MSA of the workplace\n",
      "worker_requirement": "The type/level of worker that is required for the shift (i.e. nurse, EMT, etc.)\n",
      "hours_between_shift_views": "Number of hours between the first and the most recent time the shift was viewed by a worker\n",
      "number_of_views": "Total number of times the shift has been viewed\n",
      "lead_time_at_shift_creation": "The number of hours between when the shift was created and when it was scheduled to start\n",
      "is_deleted": "1 if the shift has been deleted and 0 if it has not."
    }
  },
  "stg_stripe__transfers": {
    "description": "Staging model for data coming from Stripe's transfer table\n",
    "columns": {
      "stripe_transfer_id": "Primary key, unique indentifier for the stripe transfer\n",
      "balance_transaction_id": "",
      "destination_id": "",
      "destination_payment_id": "",
      "shift_id": "",
      "worker_id": "",
      "employee_id": "",
      "bonus_id": "",
      "currency": "",
      "description": "",
      "livemode": "",
      "reversed": "",
      "source_type": "",
      "amount": "",
      "amount_reversed": "",
      "created_at": "",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "hcf_activation_cohort_revenue_retention_monthly": {
    "description": "",
    "columns": {}
  },
  "invoiced_invoice_to_payment_mapping_stg": {
    "description": "",
    "columns": {}
  },
  "dnc": {
    "description": "",
    "columns": {}
  },
  "stg_zendesk__articles": {
    "description": "Staging model for Zendesk articles data.",
    "columns": {
      "article_id": "Unique identifier for the articles.",
      "author_id": "Identifier for the author of the article.",
      "section_id": "ID of the section the article belongs to.",
      "user_segment_id": "ID for user segment visibility settings.",
      "permission_group_id": "Permission group associated with the article.",
      "content_tag_ids": "IDs of content tags associated with the article.",
      "article_name": "Name of the article.",
      "article_title": "Title of the article.",
      "article_body": "Content body of the article in HTML format.",
      "article_url": "URL of the article's API endpoint.",
      "article_page": "Direct HTML page URL for the article.",
      "article_locale": "Locale setting of the article.",
      "source_locale": "Original locale of the article content.",
      "label_names": "List of labels assigned to the article.",
      "position": "Position of the article in the section.",
      "is_promoted": "Indicates if the article is promoted.",
      "is_draft": "Indicates if the article is in draft status.",
      "is_outdated": "Indicates if the article is marked as outdated.",
      "outdated_locales": "List of locales where the article is outdated.",
      "comments_disabled": "Indicates if comments are disabled for the article.",
      "vote_sum": "Sum of votes for the article.",
      "vote_count": "Total number of votes for the article.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "edited_at": "Timestamp of the last edit to the article.",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system"
    }
  },
  "fct_tns_qa_tickets": {
    "description": "Fact model for QA Zendesk tickets from the Trust & Safety team. This model contains QA evaluation results and ticket metadata for Trust & Safety agents.\n",
    "columns": {
      "ticket_id": "Unique identifier for the Zendesk ticket.",
      "subject": "Subject of the ticket.",
      "requester_id": "Unique identifier for the requester.",
      "assignee_id": "Unique identifier for the assignee.",
      "organization_id": "Unique identifier for the organization.",
      "brand_id": "Unique identifier for the Zendesk brand.",
      "requester_name": "Name of the requester.",
      "requester_email": "Email address of the requester.",
      "assignee_name": "Name of the assignee.",
      "assignee_email": "Email address of the assignee.",
      "assignee_supervisor": "Supervisor of the assignee.",
      "assignee_agent_role": "Agent role of the assignee.",
      "group_name": "Zendesk group name the ticket is assigned to.",
      "ticket_form_name": "Name of the ticket form used.",
      "channel": "Channel through which the ticket was submitted.",
      "status": "Current status of the ticket.",
      "priority": "Priority level of the ticket.",
      "recipient": "Email recipient of the ticket.",
      "description": "Text description entered in the ticket.",
      "ticket_type": "Type of the ticket (e.g., incident, question).",
      "ticket_tags": "List of tags associated with the ticket.",
      "t_s_graded_ticket": "Link for the ticket that was graded.",
      "t_s_final_categorization": "Final categorization of the ticket after QA review.",
      "total_time_spent_sec": "Total time spent on the ticket, in seconds.",
      "time_spent_last_update_sec": "Time spent on the last update, in seconds.",
      "t_s_action_taken": "Action taken on the ticket after review.",
      "t_s_agent_id": "Identifier for the agent being reviewed.",
      "t_s_qa_score": "QA score assigned to the ticket.",
      "reopens": "Number of times the ticket was reopened.",
      "replies": "Number of replies on the ticket.",
      "reply_time_in_minutes": "Time taken to first reply to the ticket, in minutes.",
      "first_resolution_time_in_minutes": "Time taken to first resolve the ticket, in minutes.",
      "full_resolution_time_in_minutes": "Time taken to fully resolve the ticket, in minutes.",
      "handle_time": "Total time spent handling the ticket, in minutes.",
      "last_touch_handle_time": "Time spent on the last update, in minutes.",
      "created_at": "Timestamp of when the ticket was created.",
      "initially_assigned_at": "Timestamp of when the ticket was initially assigned.",
      "assigned_at": "Timestamp of when the ticket was assigned.",
      "solved_at": "Timestamp of when the ticket was solved.",
      "generated_timestamp": "Timestamp of when the ticket was generated.",
      "updated_at": "Timestamp of when the ticket was last updated."
    }
  },
  "zd_users_stg": {
    "description": "",
    "columns": {}
  },
  "hcf_first_last_verified": {
    "description": "Aggregate view of the date of the first and last verified shift by each workplace\n",
    "columns": {
      "facility_id": "Legacy name, unique ID for the workplace\n",
      "msa": "Metropolitan statistical area (MSA) for the workplace. MSA is a geographical region with a relatively high population density at its core and close economic ties throughout the region.\n",
      "activation_time": "Timestamp of the workplace's first verified shift\n",
      "activation_day": "Day of the workplace's first verified shift\n",
      "activation_week": "Week of the workplace's first verified shift\n",
      "activation_month": "Month of the workplace's first verified shift\n",
      "last_time": "Timestamp of the workplace's last verified shift\n",
      "last_day": "Day of the workplace's last verified shift\n",
      "last_week": "Week of the workplace's last verified shift\n",
      "last_month": "Month of the workplace's last verified shift"
    }
  },
  "int_aggregate_exclusions_to_workplace": {
    "description": "intermediate model that aggregates exclusions to the workplace grain\n",
    "columns": {
      "workplace_id": "Primary key, unique identifer for the workplace\n",
      "num_exclusions_by_workplace": "count of how many workers the workplace has excluded\n",
      "exclusions_by_workplace": "JSON of exclusions made by the workplace\n",
      "num_exclusions_by_worker": "count of how many workers have excluded the workplace\n",
      "exclusions_by_worker": "JSON of exclusions made against the workplace"
    }
  },
  "bonus_metrics": {
    "description": "",
    "columns": {}
  },
  "weekly_shift_worked_change_mod": {
    "description": "",
    "columns": {}
  },
  "dim_workers": {
    "description": "Dimension model with each record representing a unique worker",
    "columns": {
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "salesforce_id": "Related Salesforce ID for the worker",
      "referrer_id": "If the worker was referred by another worker, this is the id of that worker",
      "ota_build_id": "The id for OTA builds to the worker's app",
      "first_name": "First name of the worker",
      "last_name": "Last name of the worker",
      "full_name": "Full name of the worker",
      "phone_number": "Phone number of the worker",
      "email": "Email of the worker",
      "timezone": "Timezone of the worker",
      "referral_code": "Referral code associated to the worker in the case that they make referrals",
      "signed_contractor_agreements": "Information about the contractor agreements that were signed",
      "is_test_account": "Always false as test accounts are filtered out in stg_app__agent_profiles",
      "ssn_encrypted": "The encrypted social security number of the worker",
      "country": "Country of the worker",
      "state": "State of the worker",
      "state_code": "Corresponding state code of the worker",
      "csa": "Combined statistical area (CSA) of the employee based on their location",
      "msa": "Metropolitan statistical area (MSA) of the employee based on their location",
      "city": "City of the worker",
      "postal_code": "Postal code of the worker",
      "region": "Region/county of the worker",
      "formatted_address": "Formatted address of the worker",
      "distance_preference": "Distance preference of the worker for shifts, in miles",
      "location_1": "No additional info found about this field",
      "location_2": "No additional info found about this field",
      "qualification": "The qualification of the worker (i.e. CNA, LVN, etc.)",
      "other_qualification": "Any additional qualifications of the worker",
      "account_stage": "The current stage of the worker's account (i.e. onboarding, deactivated etc.)",
      "is_activated": "If the worker's account is activated then TRUE",
      "longitude": "The longitude of the worker",
      "latitude": "The latitude of the worker",
      "app_version": "The current app version of the user/worker",
      "app_platform": "The current app platform of the user/worker",
      "os_push_notification_permission": "The OS push notification permission status of the user/worker",
      "license_state": "State where the worker is currently licensed",
      "signup_stage": "The stage of signup that the worker is currently on within the app",
      "is_manual_msa": "If the MSA of the worker is manually set, then TRUE",
      "is_approximate_msa": "If the MSA of the worker is approximate, then TRUE",
      "has_show_referral_alert_enabled": "No additional info about this field",
      "has_push_notifications_enabled": "If the worker has push notifications enabled on the app, then TRUE",
      "has_sms_notifications_enabled": "If the worker has sms notifications enabled on the app, then TRUE",
      "has_notifications_off": "If the worker has notifications turned off, then TRUE",
      "has_urgent_shift_notifications_enabled": "If the worker has notifications for available urgent shifts enabled, then TRUE",
      "urgent_shift_notification_snoozed_days": "The number of days that the urgent shift notification is snoozed for, if applicable",
      "has_priority_access_notifications_enabled": "If the worker has notifications priority access shifts enabled, then TRUE",
      "has_a_team_push_notifications_enabled": "If the worker has A Team push notifications enabled, then TRUE. These notifications are also called Priority Plus notifications for workplaces",
      "has_marketing_push_enabled": "If the worker has marketing push notifications enabled, then TRUE",
      "has_marketing_email_enabled": "If the worker has marketing email notifications enabled, then TRUE",
      "has_marketing_sms_enabled": "If the worker has marketing sms notifications enabled, then TRUE",
      "has_profile_image": "If the worker has a profile image uploaded to the app, then TRUE",
      "has_hide_as_colleague_on_shifts_enabled": "No additional info about this field",
      "has_location_enabled": "If the worker has location enabled on the app, then TRUE",
      "is_precise_location_enabled": "If the worker has precise location enabled on the app, then TRUE",
      "location_permission": "The location permissions for the worker (i.e. location always, when the app is in use, etc.)",
      "is_signup_initiated": "If the worker has initiated signup stage on the app, then TRUE",
      "is_signup_completed": "If the worker has completed signup, then TRUE",
      "is_higher_rate_enabled": "No additional info about this field",
      "amount_paid": "Amount paid towards referral amount",
      "number_of_future_shifts_staffed": "The number of upcoming shifts for the worker, if applicable",
      "attendance_pct": "Percentage of attendance (i.e. completed_shifts/all shifts)",
      "completed_shifts": "Number of shifts completed",
      "cancelled_shifts": "Number of shifts cancelled",
      "instant_pay_rate": "No additional info about this field",
      "num_no_call_no_show": "Number of shifts where the worker was a no call no show (excused + unexcused)",
      "num_excused_no_call_no_show": "Number of shifts where the worker had an excused no call no show (NCNS)",
      "num_unexcused_no_call_no_show": "Number of shifts where the worker had an unexcused no call no show (NCNS)",
      "cancel_credit_count": "No additional info about this field",
      "verified_shift_streak_count": "If the worker has an active streak of verified shifts, this is that count",
      "created_at": "Timestamp of when the record was created",
      "created_week": "The date of the week that the shift was created, with the week starting on Mondays",
      "last_logged_in_at": "Timestamp of the worker's last login to the app",
      "next_shift_at": "Timestamp of the worker's next shift, if applicable",
      "future_shifts_staffed_last_updated_at": "Timestamp of the last update to the 'Number of future shifts staffed' field",
      "last_worked_at": "Timestamp of the last shift worked",
      "updated_at": "timestamp of when the record was last updated",
      "signup_completed_at": "Timestamp of when signup was completed, if applicable",
      "urgent_shift_notification_snoozed_at": "If the worker snoozed urgent shift notifications, this is the timestamp when they did so",
      "home_health_enabled": "If the worker has home health enabled, then TRUE",
      "is_deleted": "Flag indicating whether the record has been marked as deleted",
      "mio_enabled": "If the worker went through the MIO flow, then TRUE",
      "is_instant_pay_enabled": "If the worker has instant pay enabled, then TRUE",
      "num_exclusions_by_workplace": "Count of how many workplaces have excluded the worker",
      "exclusions_by_workplace": "JSON of exclusions made against the worker",
      "num_exclusions_by_worker": "Count of how many workplaces the worker has excluded",
      "exclusions_by_worker": "JSON of exclusions made by the worker",
      "num_ratings_for_workplaces": "The number of ratings the worker has given to workplaces",
      "avg_workplace_rating": "The average rating the worker has given to workplaces",
      "ratings_for_workplace": "JSON of ratings given by the worker for workplaces",
      "num_ratings_for_worker": "The number of ratings given to the worker by workplaces",
      "avg_worker_rating": "The average rating given to the worker by workplaces",
      "ratings_for_worker": "JSON of ratings given to the worker by workplaces",
      "attendance_policy_worker_id": "Unique indentifier for the worker license",
      "attendance_score": "Attendance score based on attendance policy",
      "active_licenses": "JSON of active licenses that the worker holds",
      "has_valid_bls_or_cpr": "DEPRECATED - use either has_valid_bls_or_cpr_in_person or has_valid_bls_or_cpr_in_person_or_online fields",
      "has_valid_bls_or_cpr_in_person": "If the worker has a valid BLS or CPR training/certification completed ONLY in person, then TRUE",
      "has_valid_bls_or_cpr_in_person_or_online": "If the worker has a valid BLS or CPR training/certification completed in person or online, then TRUE",
      "has_valid_background_check": "If the worker has a valid background check via Checkr, then TRUE",
      "has_valid__state_license": "If the worker has a valid state license, then TRUE. Note: some workers that are non-clinical (i.e. cooks) will have the state checked as \"any\" and LVN/RN roles can also be multistate, (i.e. a CA RN could work in NV)",
      "has_valid_oig_and_gsa": "If the worker has is on the excluded list (OIG, GSA), then TRUE",
      "has_valid_personal_id": "If the worker has a valid personal ID, then TRUE",
      "has_valid_physical": "If the worker has a valid physical, then TRUE",
      "has_valid_sam_search_results": "If the worker has valid SAM search results, then TRUE",
      "has_valid_skilled_nursing_competency_self_assessment": "If the worker has a valid skilled nursing competency self-assessment, then TRUE",
      "has_valid_has_valid_tb_test_or_chest_x_ray": "If the worker has a valid TB test or Chest X-Ray, then TRUE",
      "mio_bonus_total_usd": "Total paid out micro-incentivized onboarding bonus in USD",
      "mio_bonus_paid_out_at": "Timestamp of when the micro-incentivize onboarding bonus was paid out"
    }
  },
  "fct_shift_logs": {
    "description": "Table containing application shift logs",
    "columns": {
      "shift_log_id": "primary key, unique indentifer for the shift log record",
      "shift_id": "Unique identifier for the shift",
      "is_auto_assign_shift": "Boolean which tell if shift is is_auto_assign_shift at time shift log creation",
      "shift_block_id": "Shift block which the shift is a part of",
      "previous_shift_block_id": "Shift block which the shift was a part of",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "admin_id": "Identifier for the admin user associated with the shift log event",
      "attendance_case_id": "Identifier for the attendance case associated with the shift log event",
      "agent_id": "Identifier for the agent associated with the shift log eventp",
      "performed_by_id": "Identifier for the user who performed the action associated with the shift log event",
      "workplace_worker_combination_id": "Identifier for the combination of workplace and worker associated with the shift log event",
      "workplace_cancelled_me_responder_id": "Identifier for the responder to the cancelled shift request associated with the shift log event",
      "worker_type": "Type of worker associated with the shift log event",
      "device_type": "Type of device used for the shift log event",
      "action": "Action performed in the shift log event",
      "sub_action": "Sub-action performed in the shift log event",
      "performed_by_type": "Type of user who performed the action associated with the shift log event",
      "reason_description": "Description of the reason for the action associated with the shift log event",
      "reason_type": "Type of reason for the action associated with the shift log event",
      "is_excused": "Boolean indicating if the shift log event is excused",
      "has_completed_one_week_suspension": "Boolean indicating if the worker has completed one week of suspension",
      "resolve_reason": "Reason for resolving the action associated with the shift log event",
      "mod_action": "Modified action associated with the shift log event",
      "search_mode": "Mode used for searching in the shift log event",
      "time_change_reason": "Reason for the time change associated with the shift log event",
      "logs_notes": "Notes recorded in the shift log event",
      "is_approved_workplace_cancelled_me": "Boolean indicating if the cancelled shift request is approved",
      "workplace_cancelled_me_response_description": "Description of the response to the cancelled shift request associated with the shift log event",
      "four_hour_call_off": "1 if the worker called off the shift within four hours of the shift start time, 0 otherwise\n",
      "twenty_four_hour_cancel": "1 if the worker called off the shift within 24 hours of the shift start time, 0 otherwise\n",
      "seventy_two_hour_cancel": "1 if the worker called off the shift within 72 hours of the shift start time, 0 otherwise\n",
      "lead_time": "Lead time associated with the shift log event",
      "pay": "Pay associated with the shift log event",
      "charge": "Charge associated with the shift log event",
      "new_rate": "New rate associated with the shift log event",
      "previous_rate": "Previous rate associated with the shift log event",
      "rate_change_reason": "Reason for the rate change associated with the shift log event",
      "new_time": "New time associated with the shift log event",
      "previous_time": "Previous time associated with the shift log event",
      "action_at": "Timestamp of the action associated with the shift log event",
      "created_at": "Timestamp of when the record was created",
      "created_week": "Week of creation of the shift log eventsh",
      "shift_start_at": "Timestamp of the shift start associated with the shift log event",
      "shift_end_at": "Timestamp of the shift end associated with the shift log event",
      "event_at": "Timestamp of the event associated with the shift log event",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake",
      "next_action": "The next action taken after",
      "next_action_at": "Timestamp of when the next action was created",
      "is_added": "true if the action is shift_assign or shift_clain",
      "is_posted": "true if the action is shift_open",
      "is_removed": "true if the action is shift_delete, shift_delete_filled, facility_cancel or facility_cancel_filled",
      "is_cancelled": "true if the action is  shift_delete_filled, facility_cancel_filled, worker_cancel, no_call_no_show or shift unassign",
      "time_to_shift_start": "number of seconds between when the shift log record was created and when the shift is/was scheduled to start",
      "workplace_salesforce_id": "This column contains the unique identifier for the workplace as it is represented in Salesforce. This ID can be used to link data between this model and other models or systems that use Salesforce.",
      "workplace_type": "This column indicates the type of the workplace. It can provide insights into the nature of the workplace, such as whether it is a hospital, clinic, nursing home, etc.",
      "workplace_name": "This column contains the name of the workplace. It is a unique identifier for each workplace and is used to distinguish between different workplaces.",
      "workplace_email": "This column contains the email address associated with the workplace. It is used for communication purposes and is unique to each workplace.",
      "workplace_longitude": "This column contains the longitude coordinate of the workplace. It is used to identify the geographical location of the workplace.",
      "workplace_latitude": "This field represents the latitude of the workplace. It is a geographical coordinate that specifies the north-south position of a point on the Earth's surface. It is used to identify the exact location of the workplace.",
      "workplace_zendesk_account_id": "This field represents the unique identifier for the workplace's Zendesk account. Zendesk is a customer service software and support ticketing system. This ID is used to link the workplace to its corresponding Zendesk account for customer service purposes.",
      "workplace_csa": "This field represents the Combined Statistical Area (CSA) in which the workplace is located. CSAs are groupings of adjacent metropolitan and micropolitan statistical areas in the United States and Puerto Rico that demonstrate economic or social linkage. This information is used for regional analysis.",
      "workplace_msa": "This column represents the Metropolitan Statistical Area (MSA) where the workplace is located. MSA is a geographical region with a relatively high population density at its core and close economic ties throughout the area. This information can be useful for regional analysis and comparisons.",
      "worker_salesforce_id": "This column contains the unique identifier for the worker in the Salesforce system. Salesforce is a customer relationship management solution that brings companies and customers together. This ID can be used to link and retrieve additional information about the worker from Salesforce.",
      "worker_referrer_id": "This column holds the unique identifier of the person or entity that referred the worker to the company. This could be another worker, a recruitment agency, or a marketing campaign. This information can be used to track the effectiveness of different recruitment channels.",
      "worker_ota_build_id": "This column represents the unique identifier for the worker's Over-The-Air (OTA) build. This is used to track the version of the application that the worker is using.",
      "worker_first_name": "This column contains the first name of the worker. This is used for personalizing communications with the worker and for identification purposes.",
      "worker_last_name": "This column contains the last name of the worker. This is used in conjunction with the worker's first name for identification and record-keeping purposes.",
      "worker_full_name": "This column contains the full name of the worker. It is a combination of the worker's first and last name. This information is useful for identifying individual workers and can be used in reports or analyses that require personal identification of workers.",
      "worker_state_code": "This column contains the state code where the worker is located. It is a two-letter abbreviation representing the state within the United States. This information can be used to analyze worker distribution across different states and to make location-based decisions or strategies.",
      "worker_csa": "This column contains the Combined Statistical Area (CSA) code for the worker's location. A CSA is a combination of adjacent metropolitan and micropolitan areas in the United States defined by the Office of Management and Budget. This information can be used for regional analysis and planning.",
      "worker_msa": "This field represents the Metropolitan Statistical Area (MSA) where the worker is located. MSAs are geographic entities defined by the U.S. Office of Management and Budget for use by Federal statistical agencies in collecting, tabulating, and publishing Federal statistics.",
      "worker_postal_code": "This field represents the postal code of the worker's location. It is used to identify the specific geographical area where the worker resides.",
      "worker_distance_preference": "This field represents the worker's preferred distance for commuting to a workplace. It indicates how far (in miles or kilometers) the worker is willing to travel for work from their home location.",
      "worker_qualification": "This field represents the primary qualification of the worker. It indicates the skills or certifications that the worker possesses which are relevant to their job role.",
      "worker_other_qualification": "This field represents any additional qualifications that the worker may have. These could be supplementary skills or certifications that are not directly related to the worker's primary job role but could be beneficial in certain scenarios.",
      "worker_account_stage": "This field indicates the current stage of the worker's account. It provides information about the worker's journey within the organization, such as whether they are newly registered, activated, or deactivated.",
      "worker_is_activated": "This field indicates whether the worker is activated or not. If the value is 'true', it means the worker is activated and ready to take on shifts. If the value is 'false', it means the worker is not activated and cannot take on shifts.",
      "worker_longitude": "This field represents the longitude of the worker's location. It is used to determine the worker's geographical position for various purposes such as calculating distance to the workplace, assigning shifts based on location, etc.",
      "worker_latitude": "This field represents the latitude of the worker's location. Similar to 'worker_longitude', it is used to determine the worker's geographical position for various purposes such as calculating distance to the workplace, assigning shifts based on location, etc.",
      "employee_name": "This column contains the full name of the employee who performed the action. It is useful for tracking who made changes to the shift logs and can be used for accountability and auditing purposes.",
      "employee_roles": "This column lists the roles assigned to the employee who performed the action. This can include roles such as 'Admin', 'Manager', etc. It helps in understanding the authority level of the employee and can be used to analyze the actions performed by different roles within the organization.",
      "worker_requirement": "This column specifies the requirements for the worker for a particular shift. It can include specific skills, qualifications, or certifications needed. This information is crucial for matching the right workers to the right shifts, ensuring that all requirements are met.",
      "ingested_at": "This column represents the timestamp when the data was ingested into the database. It is useful for tracking data updates and changes over time."
    }
  },
  "stg_app__instant_pay_shifts_test_accounts": {
    "description": "Staging model for data coming from the application's instant pay shifts table, for test accounts",
    "columns": {
      "instant_pay_shift_id": "Primary key, unique indentifier for the instant pay shift",
      "shift_id": "Unique identifier for the shift",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "deleted_reason": "Reason why the instant pay functionality of the shift was deleted/removed",
      "is_deleted": "If the instant pay functionality of the shift was deleted/removed, the TRUE",
      "is_verified": "If the shift is verfied, then TRUE",
      "is_100_instant_pay_enabled": "If 100% instant pay is enabled by the workplace to workers, then TRUE",
      "is_stripe_payment": "If the instant pay payment is a stripe payment, then TRUE",
      "instant_pay_rate": "No additional information",
      "total_amount": "Total payment amount of the shift for the worker",
      "charge": "Hourly charge of the shift for the facility",
      "pay": "Hourly pay of the shift for the worker",
      "net_pay": "Total net pay of the shift (i.e. pay * shift_length) for the worker",
      "net_charge": "Total net charge of the shift (i.e. charge * shift_length) for the facility",
      "net_rev": "Total revenue earned on the shift (i.e. net_charge - net_pay)",
      "paid_amount": "Actual amount paid to the worker",
      "remaining_amount": "Any amount remaining to pay to the worker",
      "status": "Status of the instant pay feature",
      "shift_length": "The shift length in hours",
      "shift_start_at": "Start timestamp of the shift in UTC",
      "shift_end_at": "End timestamp of the shift in UTC",
      "hcp_clock_in_at": "Timestamp of when the worker clocked in - in UTC",
      "hcp_lunch_out_at": "Timestamp of when the worker went out to lunch - in UTC",
      "hcp_lunch_in_at": "Timestamp of when the worker came back from lunch - in UTC",
      "hcp_clock_out_at": "Timestamp of when the worker clocked out - in UTC",
      "submit_clock_in_at": "Timestamp of when the worker submitted on timesheet that they clocked in - in UTC",
      "submit_lunch_out_at": "Timestamp of when the worker submitted on timesheet that they clocked out for lunch - in UTC",
      "submit_lunch_in_at": "Timestamp of when the worker submitted on timesheet that they clocked back in from lunch - in UTC",
      "submit_clock_out_at": "Timestamp of when the worker submitted on timesheet that they clocked out - in UTC",
      "admin_clock_in_at": "Timestamp of when the admin identified that the worker clocked in - in UTC",
      "admin_lunch_out_at": "Timestamp of when the admin identified that the worker clocked out for lunch - in UTC",
      "admin_lunch_in_at": "Timestamp of when the admin identified that the worker clocked back in from lunch - in UTC",
      "admin_clock_out_at": "Timestamp of when the admin identified that the worker clocked out - in UTC",
      "completed_at": "Timestamp of when the instant pay was completed - in UTC",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "deleted_at": "If the instant pay feature was deleted, this is the timestamp of when that happened",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "this_month_facility_rev": {
    "description": "",
    "columns": {}
  },
  "facility_fill_rate_past_30_day": {
    "description": "",
    "columns": {}
  },
  "workplace_shift_review_submitted_stg": {
    "description": "",
    "columns": {}
  },
  "invoiced_payments_stg": {
    "description": "",
    "columns": {}
  },
  "all_time_revenue_by_facility": {
    "description": "",
    "columns": {}
  },
  "postless_weeks_in_days_mod": {
    "description": "",
    "columns": {}
  },
  "facility_fill_rate_weekly": {
    "description": "",
    "columns": {}
  },
  "pa_dashboard_Submitted_Worker_Ratings": {
    "description": "",
    "columns": {}
  },
  "weekly_msa_booking_journey": {
    "description": "",
    "columns": {}
  },
  "rpt_credits_by_workplace": {
    "description": "The rpt_credits_by_workplace model provides a comprehensive report of open credit notes by workplace, including details such as Salesforce ID, Parent ID, Invoiced Customer ID, Workplace Name, Account Name, Parent Account Name, and the total balance of open credit notes.",
    "columns": {
      "salesforce_account_id": "This is the unique identifier for the account in Salesforce. It is used to link the account data in Salesforce with the data in other systems.",
      "salesforce_parent_id": "This is the unique identifier for the parent account in Salesforce. It is used to establish hierarchical relationships between accounts.",
      "invoiced_customer_id": "This is the unique identifier for the customer in the invoicing system. It is used to link the customer data in the invoicing system with the data in other systems.",
      "workplace_name": "This column represents the name of the workplace.",
      "salesforce_account_name": "This column represents the name of the Salesforce account associated with the workplace.",
      "salesforce_parent_account_name": "This column represents the name of the parent Salesforce account associated with the workplace.",
      "credit_balance": "This column represents the total outstanding credit balance for each workplace. It is calculated by summing up the balance of all open credit notes associated with a specific workplace. This information is crucial for financial analysis and understanding the credit situation of each workplace."
    }
  },
  "app_wwf_phase_2_non_pilot_workers_stg": {
    "description": "",
    "columns": {}
  },
  "fct_wfm_airtable__team_details": {
    "description": "Fact model for WFM Airtable team details from WFM Airtable source.",
    "columns": {
      "team_detail_id": "Unique id for the team details data",
      "agent_name": "Name of the agent.",
      "agent_email": "Email address of the agent.",
      "shift": "Shift schedule assigned to the agent.",
      "days_off": "Days off allocated to the agent.",
      "role_name": "Role of the agent within the organization.",
      "manager": "Name of the agent's manager.",
      "country": "Country where the agent is based.",
      "cohort_name_from_training_cohort": "Cohort name assigned during training.",
      "training_start_date": "The date when the agent's training began.",
      "training_end_date": "The date when the agent's training ended.",
      "nesting_end_date": "The date when the agent's nesting period ended.",
      "production_start_date": "The date when the agent started production work.",
      "attrition_risk": "Attrition risk level for the agent.",
      "callback_project": "Callback project assigned to the agent.",
      "status": "Current status of the agent (resolved from status ID).",
      "mover_or_new_hire": "Indicates if the agent is a mover or a new hire.",
      "department_team": "Department team name to which the agent belongs.",
      "removal_date": "The date when the agent was removed from the team.",
      "slack_id": "Slack ID of the agent, used for communication purposes."
    }
  },
  "fct_zendesk__wops_mishandled_tickets": {
    "description": "Fact model for MQR's Zendesk mishandled tickets. These tickets represent mishandled tickets by MQR agents.",
    "columns": {
      "ticket_id": "The unique ID of the mishandled ticket.",
      "parent_ticket_id": "The ticket ID of the mishandled ticket, as captured in a custom field.",
      "requester_id": "The unique ID of the ticket requester. This is the agent who mishandled the ticket.",
      "assignee_id": "The unique ID of the agent assigned to the ticket. This is the SME who acted on the mishandled ticket.",
      "ticket_form_id": "The unique ID of the ticket form used to submit the ticket.",
      "requester_name": "The name of the ticket requester. This is the agent who mishandled the ticket.",
      "requester_email": "The email address of the ticket requester. This is the agent who mishandled the ticket.",
      "assignee_name": "The name of the agent assigned to the ticket. This is the SME who acted on the mishandled ticket.",
      "assignee_email": "The email address of the agent assigned to the ticket. This is the SME who acted on the mishandled ticket.",
      "assignee_supervisor": "The name of the supervisor for the agent assigned to the ticket. This is the SME who acted on the mishandled ticket.",
      "assignee_agent_role": "The role of the agent assigned to the ticket (e.g. Admin, Agent, etc.).",
      "cf_agent_name_mishandle": "The name of the agent on the mishandled ticket, as captured in a custom field.",
      "cf_result_mishandle_ticket": "Returns whether the mishandled ticket is valid or invalid.",
      "ea_ticket_type": "The custom field option which captures the type of EA Ticket chosen.",
      "escalation_type": "The type of escalation for the ticket.",
      "override_offered": "Checkbox field which captures if an override is offered.",
      "ticket_form_name": "The name of the ticket form used to submit the ticket.",
      "channel": "The channel through which the ticket was submitted (e.g. Chat, Email, Phone, etc.).",
      "status": "The current status of the ticket (e.g. Open, Pending, Solved, Closed).",
      "priority": "The priority level of the ticket (e.g. High, Normal, Low).",
      "description": "The content and details provided in the initial ticket submission.",
      "ticket_tags": "Tags applied on the ticket.",
      "reopens": "The number of times the ticket was reopened.",
      "replies": "The number of public replies on the ticket.",
      "reply_time_in_minutes": "The time in minutes from ticket creation to the first public reply.",
      "first_resolution_time_in_minutes": "The time in minutes from ticket creation to the first resolution.",
      "full_resolution_time_in_minutes": "The total time in minutes from ticket creation to final resolution.",
      "handle_time": "Total handle time for the ticket",
      "created_at": "Timestamp of when the record was created",
      "initially_assigned_at": "The date and time the ticket was first assigned to an agent.",
      "assigned_at": "The date and time the ticket was assigned to an agent.",
      "solved_at": "The date and time the ticket was marked as solved.",
      "generated_timestamp": "The timestamp when the ticket was generated in the Zendesk system.",
      "updated_at": "timestamp of when the record was last updated",
      "created_at_pst": "Timestamp of when the record was created. Converted to Pacific Standard Time",
      "updated_at_pst": "timestamp of when the record was last updated. Converted to Pacific Standard Time",
      "initially_assigned_at_pst": "The date and time the ticket was first assigned to an agent, converted to Pacific Standard Time.",
      "assigned_at_pst": "The date and time the ticket was assigned to an agent, converted to Pacific Standard Time.",
      "solved_at_pst": "The date and time the ticket was marked as solved, converted to Pacific Standard Time."
    }
  },
  "fct_worked_workplaces": {
    "description": "Table of workplaces where workers have had a verified shift, joined with their active dnrs, where each row is a distinct worker-workplace pair.\n",
    "columns": {
      "worked_workplace_id": "Primary key, unique indentifier for the worker-workplace pair\n",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "postal_code": "Zip or postal code\n",
      "workplace_name": "The name of the workplace as it appears in the facility profile\n",
      "days_since_dnr": "Number of days between the current date and the day the DNR was created\n",
      "dnr_placed_by": "The entity that placed the DNR, either HCP or HCF Number of days between the current date and the day the dnr was created\n",
      "has_worked_at_workplace": "If the worker has had a verified shift at the workplace"
    }
  },
  "zendesk_email_contacts": {
    "description": "Table showing customers who reached out to support via email and then reached out via another channel in 24 hours\n",
    "columns": {
      "email_contact_id": "surrogate id created from email ticket id and other contact ticket id",
      "ticket_id": "unique identifier for the zendesk tickets",
      "customer_zendesk_id": "zendesk's unique customer identifier",
      "worker_id": "column showing the worker's external id, defaults to null if the customer is not a worker",
      "workplace_user_id": "column showing the workplace users's external id, defaults to null if the customer is not a workplace user",
      "created_at": "ticket creation timestamp, shows the timestamp for tickets created via email",
      "via_channel": "ticket creation channel",
      "recipient": "email address that received the ticket",
      "has_reached_out_via_other_channel_within_24_hours": "boolean column showing if a customer reached out via another channel after 24 hours of their initial email contact\n",
      "other_channel_ticket_id": "ticket id for tickets created in a channel other than email",
      "other_channel_created_at": "creation timestamp for tickets created in a channel other than email",
      "other_channel": "contact channel for tickets created in a channel other than email, specifies the channel used."
    }
  },
  "zd_pivot_custom_cols": {
    "description": "",
    "columns": {}
  },
  "stg_app__interviews": {
    "description": "Staging model for data coming from the interviews table\n",
    "columns": {
      "interview_id": "Primary key, unique indentifier for the interview\n",
      "placement_application_id": "A unique identifier for the placement application\n",
      "placement_id": "ID of the placement associated with the interview\n",
      "placement_candidate_id": "ID of the placement candidate associated with the interview\n",
      "worker_id": "ID of the worker associated with the interview\n",
      "workplace_id": "ID of the workplace associated with the interview\n",
      "open_house_id": "ID of the open house event associated with the interview\n",
      "hiring_event_id": "ID of the hiring event associated with the interview\n",
      "status": "Status of the interview i.e. Booked, Cancelled or Rescheduled\n",
      "interview_start_at": "A start date time of the interview\n",
      "interview_end_at": "A end date time of the interview\n",
      "booked_by_user_type": "Type of user who booked the interview\n",
      "booked_by_user_id": "ID of the user who booked the interview\n",
      "cancelled_by_user_type": "Type of user who cancelled the interview\n",
      "cancelled_by_user_id": "ID of the user who cancelled the interview\n",
      "cancelled_at": "Date and time when the interview was cancelled\n",
      "rescheduled_interview_id": "ID of the rescheduled interview\n",
      "attendance_intention_confirmed_at": "Date and time when attendance intention was confirmed\n",
      "provider_trip_id": "ID of the trip from the provider associated with this interview\n",
      "attendance_confirmed_at": "Date and time when attendance was confirmed\n",
      "attendance_confirmed_by": "ID of the user who confirmed the attendance\n",
      "attendance_method": "Method used to confirm attendance (Geofence or Manual)\n",
      "attendance_bonus_id": "Unique identifier for the attendance bonus\n",
      "attendance_bonus_amount_in_minor_units": "Amount of the attendance bonus in minor units (e.g. cents)\n",
      "attendance_bonus_currency_code": "Currency code for the attendance bonus amount\n",
      "attendance_bonus_created_at": "Date and time when the attendance bonus was created\n",
      "attendance_bonus_created_by": "ID of the user who created the attendance bonus\n",
      "attendance_bonus_created_by_user_type": "Type of user who created the attendance bonus\n",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "int_market_params__actives": {
    "description": "This model filters out all stale market config logs",
    "columns": {
      "config_id": "Unique id for the market-level pricing config",
      "pricing_msa": "Name of the metro-statistical area of this pricing market",
      "agent_req": "Qualification title of an HCP",
      "description": "Comments added by pricing admin when changing the market params",
      "opt_out_from_automated_policies": "When enabled, this market will be skipped by GTM scheduler even if it qualifies",
      "floor": "Minimum allowed pay value",
      "market_base": "Number of weekly shifts to subsidize",
      "market_fill": "Percentage of weekly shifts to subsidize",
      "sd": "Pay spread in dollars between min-fill and non min-fill facility-weeks",
      "weekday_base": "Average pay on weekday shifts",
      "weekend_base": "Average pay on weekend shifts",
      "margin_cap": "Minimum margin taken on non-subsidized shifts",
      "min_fill_margin_cap": "Minimum margin taken on min-fill subsidized shifts",
      "rolling_filled_ratio": "Multiple of the base pay to apply to all future shifts at currently min-fill facilities",
      "rolling_filled_margin": "Minimum margin taken on facilities that are currently min-fill subsidized shifts",
      "late_cancel_rate_multiplier": "Multiple of the base pay applied to late cancelled shifts",
      "late_cancel_margin_cap": "Minimum margin taken on late cancelled shifts",
      "target_irr": "Discount rate to apply to the pay <> charge ROI",
      "holiday_take": "Percentage take rate on the holiday charge boost",
      "late_cancel_lead_time_threshold1": "Lead time in minutes at which late cancel pricing begins to apply",
      "late_cancel_lead_time_threshold2": "Lead time in minutes at which late cancel pricing begins levels off",
      "ncns_rate_multiplier": "Multiple of the base pay applied to NCNS shifts",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "tags": "A list of tags associated with the market config"
    }
  },
  "stg_home_health__visit_occurrences": {
    "description": "Staging model for visit ocurrences from the home health service\n",
    "columns": {
      "visit_occurrence_id": "Visit occurrence ID",
      "actioned_at": "Actioned at",
      "actioned_by": "Actioned by",
      "agent_req": "Agent req",
      "charge_rate_in_minor_units": "Charge rate in minor units",
      "created_at": "Created at",
      "display_id": "Display id",
      "visit_occurrence_start": "Time when the worker started the visit",
      "visit_occurrence_end": "Time when the worker ended the visit",
      "duration_in_hours": "Duration of the visit in hours",
      "paid": "Worker was paid",
      "instant_pay": "Worker was paid instantly",
      "pay_rate_in_minor_units": "Pay rate in minor units",
      "pricing_type": "Pricing type can be PER_VISIT or PER_HOUR",
      "rejection_reason": "Rejection reason",
      "status": "Visit Occurrence status",
      "type_of_care": "Type of care can be HOME_HEALTH or HOSPICE",
      "visit_type": "Visit type",
      "worker_id": "Worker ID",
      "visit_id": "Visit ID"
    }
  },
  "stg_zendesk_wops__users": {
    "description": "This model represents the users in Zendesk, including agents, admins, and end-users (customers).",
    "columns": {
      "user_id": "The unique identifier for the user.",
      "custom_role_id": "The ID of the user's custom role, if any.",
      "organization_id": "The ID of the organization the user belongs to.",
      "default_group_id": "The ID of the user's default group.",
      "locale_id": "The ID of the user's locale.",
      "external_id": "An external ID for the user.",
      "user_url": "The API URL of the user.",
      "user_name": "The name of the user.",
      "user_email": "The email address of the user.",
      "user_phone": "The phone number of the user.",
      "user_fields": "Custom fields for the user.",
      "user_role": "The role of the user, such as \"end-user\", \"agent\", or \"admin\".",
      "tags": "The tags associated with the user.",
      "alias": "An alias for the user.",
      "notes": "Notes about the user.",
      "photo_url": "The URL of the user's photo.",
      "locale": "The locale of the user.",
      "role_type": "The type of role assigned to the user.",
      "is_active": "Whether the user is active.",
      "is_shared": "Whether the user is shared.",
      "user_details": "Details about the user.",
      "is_verified": "Whether the user's email is verified.",
      "is_chat_only": "Whether the user is a chat-only agent.",
      "is_moderator": "Whether the user is a forum moderator.",
      "is_restricted_agent": "Whether the agent is restricted.",
      "is_permanently_deleted": "Whether the user is permanently deleted.",
      "is_shared_phone_number": "Whether the user's phone number is shared.",
      "does_only_private_comments": "Whether the user can only make private comments.",
      "is_two_factor_auth_enabled": "Whether two-factor authentication is enabled for the user.",
      "is_suspended": "Whether the user is suspended.",
      "does_report_csv": "Whether the user can report CSV.",
      "is_shared_agent": "Whether the agent is shared.",
      "signature": "The user's signature.",
      "time_zone": "The user's time zone.",
      "iana_time_zone": "The user's IANA time zone.",
      "ticket_restriction": "The user's ticket restriction.",
      "last_login_at": "The time the user last logged in.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake"
    }
  },
  "stg_licenses_service__worker_licenses": {
    "description": "Staging model for data coming from the licenses service's worker licenses table. For any analysis, use dim_worker_licenses\n",
    "columns": {
      "worker_license_id": "Primary key, unique indentifier for the worker license\n",
      "worker_id": "",
      "created_by_id": "",
      "updated_by_id": "",
      "qualification": "",
      "state": "",
      "is_multi_state": "",
      "license_number": "",
      "status": "",
      "file_url": "",
      "created_by_type": "",
      "updated_by_type": "",
      "original_document": "",
      "file_storage_file_key": "",
      "file_storage_root_folder": "",
      "is_notified_of_rejection": "",
      "rejection_note_for_worker": "",
      "rejection_reason": "",
      "time_to_review": "DEPRECATED - This calculation is incorrect and will be removed in the future. Use the dim_worker_licenses instead.",
      "expires_at": "",
      "issue_date": "Date when the license was issued",
      "created_at": "",
      "updated_at": "",
      "rejected_at": "",
      "reviewed_at": ""
    }
  },
  "stg_app__instant_pay_shifts": {
    "description": "Staging model for data coming from the application's instant pay shifts table",
    "columns": {
      "instant_pay_shift_id": "Primary key, unique indentifier for the instant pay shift",
      "shift_id": "Unique identifier for the shift",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "deleted_reason": "Reason why the instant pay functionality of the shift was deleted/removed",
      "is_deleted": "If the instant pay functionality of the shift was deleted/removed, the TRUE",
      "is_verified": "If the shift is verfied, then TRUE",
      "is_100_instant_pay_enabled": "If 100% instant pay is enabled by the workplace to workers, then TRUE",
      "is_stripe_payment": "If the instant pay payment is a stripe payment, then TRUE",
      "instant_pay_rate": "No additional information",
      "total_amount": "Total payment amount of the shift for the worker",
      "charge": "Hourly charge of the shift for the facility",
      "pay": "Hourly pay of the shift for the worker",
      "net_pay": "Total net pay of the shift (i.e. pay * shift_length) for the worker",
      "net_charge": "Total net charge of the shift (i.e. charge * shift_length) for the facility",
      "net_rev": "Total revenue earned on the shift (i.e. net_charge - net_pay)",
      "paid_amount": "Actual amount paid to the worker",
      "remaining_amount": "Any amount remaining to pay to the worker",
      "status": "Status of the instant pay feature",
      "shift_length": "The shift length in hours",
      "shift_start_at": "Start timestamp of the shift in UTC",
      "shift_end_at": "End timestamp of the shift in UTC",
      "hcp_clock_in_at": "Timestamp of when the worker clocked in - in UTC",
      "hcp_lunch_out_at": "Timestamp of when the worker went out to lunch - in UTC",
      "hcp_lunch_in_at": "Timestamp of when the worker came back from lunch - in UTC",
      "hcp_clock_out_at": "Timestamp of when the worker clocked out - in UTC",
      "submit_clock_in_at": "Timestamp of when the worker submitted on timesheet that they clocked in - in UTC",
      "submit_lunch_out_at": "Timestamp of when the worker submitted on timesheet that they clocked out for lunch - in UTC",
      "submit_lunch_in_at": "Timestamp of when the worker submitted on timesheet that they clocked back in from lunch - in UTC",
      "submit_clock_out_at": "Timestamp of when the worker submitted on timesheet that they clocked out - in UTC",
      "admin_clock_in_at": "Timestamp of when the admin identified that the worker clocked in - in UTC",
      "admin_lunch_out_at": "Timestamp of when the admin identified that the worker clocked out for lunch - in UTC",
      "admin_lunch_in_at": "Timestamp of when the admin identified that the worker clocked back in from lunch - in UTC",
      "admin_clock_out_at": "Timestamp of when the admin identified that the worker clocked out - in UTC",
      "completed_at": "Timestamp of when the instant pay was completed - in UTC",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "deleted_at": "If the instant pay feature was deleted, this is the timestamp of when that happened",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "next_month_cumulative_margin": {
    "description": "Cumulative sum for next month's maring and subsidies. Used to create crawl charts for margin and subsidies\n",
    "columns": {
      "cumulative_sum_id": "Unique identifier for the row",
      "created_at_day": "day of shift creation",
      "start_month": "month of shift start",
      "revenue_gain": "revenue gain for the shift",
      "charge_gain": "charge gain for the shift",
      "days_to_month_start": "days between shift creation and start of month",
      "cumulative_added_revenue": "cumulative added revenue over each day of the month",
      "cumulative_lost_revenue": "cumulative lost revenue over each day of the month",
      "cumulative_added_charge": "cumulative added charge over each day of the month",
      "cumulative_lost_charge": "cumulative lost charge over each day of the month",
      "cumulative_added_shift_margin": "cumulative added shift margin over each day of the month",
      "cumulative_lost_shift_margin": "cumulative lost shift margin over each day of the month",
      "cumulative_number_of_posted_shifts": "cumulative sum of posted shifts over each day of the month",
      "cumulative_number_of_booked_shifts": "cumulative sum of booked shifts over each day of the month",
      "cumulative_number_of_removed_shifts": "cumulative sum of removed shifts over each day of the month",
      "cumulative_number_of_cancelled_shifts": "cumulative sum of cancelled shifts over each day of the month",
      "cumulative_number_of_gtm_subsidies": "cumulative sum of gtm subsidies over each day of the month",
      "cumulative_number_of_holiday_subsidies": "cumulative sum of holiday subsidies over each day of the month",
      "cumulative_number_of_reliability_subsidies": "cumulative sum of reliability subsidies over each day of the month",
      "cumulative_number_of_min_fill_low_charge_subsidies": "cumulative sum of min fill low charge subsidies over each day of the month",
      "cumulative_number_of_min_fill_low_posting_subsidies": "cumulative sum of min fill low posting subsidies over each day of the month",
      "cumulative_number_of_unsubsidized_shifts": "cumulative sum of unsubsidized shifts over each day of the month",
      "cumulative_revenue_gain": "cumulative revenue gain over each day of the month",
      "cumulative_charge_gain": "cumulative charge gain over each day of the month",
      "cumulative_shift_margin_gain": "cumulative shift margin gain over each day of the month"
    }
  },
  "pa_dashboard_percent_of_shifts_windowed": {
    "description": "",
    "columns": {}
  },
  "stg_wfm_airtable__status": {
    "description": "Model to fetch the status data from WFM Airtable source.",
    "columns": {
      "status_id": "Unique identifier for the status record in Airtable.",
      "status_name": "Name of the status (e.g., Training, Active, Onboarding, etc.).",
      "status_count": "Number of team members associated with the status.",
      "team_details": "Comma-separated list of team details associated with the status.",
      "airtable_table_name": "Name of the Airtable table containing the status information.",
      "airtable_created_time": "Timestamp of when the status record was created in Airtable."
    }
  },
  "time_between_hcp_onboard_at_and_activation": {
    "description": "",
    "columns": {}
  },
  "rpt_csat_survey_details": {
    "description": "Fact table for CSAT survey details from Zendesk tickets, including response agent attribution and negative resolution case identification.",
    "columns": {
      "csat_metrics_id": "Surrogate key generated from response_assignee_id, assignee_id, and requester_id.",
      "ticket_id": "Unique identifier for the Zendesk ticket. (Source: Zendesk Ticket Data)",
      "solved_timestamp": "Timestamp when the ticket was marked as solved. (Source: Zendesk Ticket Data)",
      "created_at": "Timestamp when the ticket was created. (Source: Zendesk Ticket Data)",
      "survey_offered_timestamp": "Timestamp when the CSAT survey was offered. (Source: Zendesk Satisfaction Rating Data)",
      "survey_responded_timestamp": "Timestamp when the HCP responded to the survey. NULL if not responded. (Source: Zendesk Satisfaction Rating Data)",
      "load_timestamp": "Timestamp when the record was loaded/updated in the reporting table.",
      "response_assignee_id": "ID of agent assigned at/just before survey_responded_timestamp.",
      "response_assignee_name": "Name of agent assigned at/just before survey_responded_timestamp.",
      "assignee_id": "ID of the agent assigned when the ticket was solved.",
      "assignee_name": "Name of the agent assigned when the ticket was solved.",
      "requester_id": "ID of the HCP (requester).",
      "brand_id": "Identifier for the Zendesk brand.",
      "ticket_status": "Ticket status (e.g., \"solved\", \"closed\").",
      "contact_channel": "Derived user-facing contact channel (\"voice\", \"chat\", \"web\", \"other\").",
      "provided_score": "HCP response (\"good\", \"bad\", \"offered\").",
      "csat_comment": "HCP comment.",
      "is_offered": "TRUE if a survey was offered (provided_score is not NULL).",
      "is_responded": "TRUE if provided_score is \"good\" or \"bad\".",
      "csat_score_binary": "1 if provided_score = \"good\", 0 if provided_score = \"bad\", NULL otherwise.",
      "is_negative_resolution_case": "TRUE if the ticket has negative resolution tags (waiver reject, dispute rejected, reactivation request).",
      "is_standard_positive_csat": "TRUE if provided_score = \"good\" AND is_negative_resolution_case = FALSE.",
      "is_neg_resolution_positive_csat": "TRUE if provided_score = \"good\" AND is_negative_resolution_case = TRUE.",
      "bonus_amount": "Bonus amount based on CSAT score and resolution type.",
      "agent_team": "Team associated with the agent at the time of survey response.",
      "agent_match_status": "Indicates whether the response agent is the same as the resolving agent (\"same agent\" or \"different agent\")."
    }
  },
  "shift_reviews_worker_cancel_and_ncns_data": {
    "description": "",
    "columns": {}
  },
  "stg_worker_ops__wfm_forecast_data": {
    "description": "This model creates a view of forecast data from the worker_ops data source, renames and selects relevant fields such as line of business, workforce segment,  and forecast metrics for analysis.\n",
    "columns": {
      "forecast_id": "The unique identifier for the wfm forecast data.",
      "line_of_business": "Line of Business (LOB) associated with the forecast data.",
      "week_start_date": "WS time associated with the forecast data.",
      "forecast_month": "Month for the forecast data.",
      "forecast_year": "Year for the forecast data.",
      "forecast_date": "Date for the forecasted interval.",
      "forecast_interval": "Interval of the forecasted data (e.g., hourly interval).",
      "forecast_demand": "Forecasted demand for the specified interval.",
      "required_ftes": "Required Full-Time Equivalents (FTEs) based on the forecasted demand.",
      "projected_aht": "Projected Average Handle Time (AHT) for the forecasted demand.",
      "scheduled_ftes": "Scheduled Full-Time Equivalents (FTEs) based on the forecasted demand."
    }
  },
  "hcp_working_more_less_fin": {
    "description": "",
    "columns": {}
  },
  "pa_dashboard_4_Plus_Star_Rated_Updated_to_less_than_4_Stars": {
    "description": "",
    "columns": {}
  },
  "daily_first_time_hcfs_int": {
    "description": "",
    "columns": {}
  },
  "stg_amazon_connect__queue_metrics": {
    "description": "Staging model for queue metrics data from Amazon Connect.",
    "columns": {
      "queue_metric_id": "The unique identifier for the queue metrics.",
      "queue_id": "The unique identifier for the queue.",
      "start_time": "The timestamp when the data collection started.",
      "end_time": "The timestamp when the data collection ended.",
      "abandonment_rate": "The rate of abandoned calls in the queue.",
      "agent_adherent_time": "The total time agents adhered to their schedule.",
      "agent_answer_rate": "The rate of calls answered by agents.",
      "agent_non_adherent_time": "The total time agents were non-adherent to their schedule.",
      "agent_non_response": "The count of calls where the agent did not respond.",
      "agent_non_response_without_customer_abandons": "Count of agent non-responses excluding customer abandons.",
      "agent_schedule_adherence": "The percentage of time agents adhered to their schedule.",
      "agent_scheduled_time": "The total time agents were scheduled to work.",
      "avg_abandon_time": "Average time before calls were abandoned.",
      "avg_active_time": "Average active time per call.",
      "avg_after_contact_work_time": "Average after-contact work time per call.",
      "avg_agent_connecting_time": "Average time taken to connect agents to calls.",
      "avg_agent_pause_time": "Average pause time for agents.",
      "avg_contact_duration": "Average duration of contacts in the queue.",
      "avg_conversation_duration": "Average duration of conversations in the queue.",
      "avg_dials_per_minute": "Average number of dials made per minute.",
      "avg_flow_time": "Average flow time for contacts.",
      "avg_greeting_time_agent": "Average greeting time by agents.",
      "avg_handle_time": "Average handle time per contact.",
      "avg_hold_time": "Average hold time for contacts.",
      "avg_hold_time_all_contacts": "Average hold time across all contacts.",
      "avg_holds": "Average number of holds per contact.",
      "avg_interaction_and_hold_time": "Average combined interaction and hold time per contact.",
      "avg_interaction_time": "Average interaction time per contact.",
      "avg_interruptions_agent": "Average interruptions per agent.",
      "avg_interruption_time_agent": "Average interruption time per agent.",
      "avg_non_talk_time": "Average non-talk time per contact.",
      "avg_queue_answer_time": "Average time taken to answer contacts in the queue.",
      "avg_resolution_time": "Average time taken to resolve contacts.",
      "avg_talk_time": "Average talk time per contact.",
      "avg_talk_time_agent": "Average talk time by agents.",
      "avg_talk_time_customer": "Average talk time by customers.",
      "avg_wait_time_after_customer_connection": "Average wait time after connecting to a customer.",
      "contacts_created": "Total number of contacts created.",
      "contacts_handled": "Total number of contacts handled.",
      "contacts_handled_by_connected_to_agent": "Total number of contacts handled after connecting to an agent.",
      "contacts_hold_abandons": "Total number of contacts abandoned on hold.",
      "contacts_on_hold_agent_disconnect": "Total number of contacts on hold where the agent disconnected.",
      "contacts_on_hold_customer_disconnect": "Total number of contacts on hold where the customer disconnected.",
      "contacts_put_on_hold": "Total number of contacts put on hold.",
      "contacts_transferred_out_external": "Total number of contacts transferred out externally.",
      "contacts_transferred_out_internal": "Total number of contacts transferred out internally.",
      "contacts_queued": "Total number of contacts queued.",
      "contacts_queued_by_enqueue": "Total number of contacts queued by enqueue action.",
      "contacts_transferred_out": "Total number of contacts transferred out.",
      "contacts_transferred_out_by_agent": "Total number of contacts transferred out by agents.",
      "contacts_transferred_out_from_queue": "Total number of contacts transferred out from the queue.",
      "flows_outcome": "Total number of flows with outcomes.",
      "flows_started": "Total number of flows started.",
      "human_answered_calls": "Total number of human-answered calls.",
      "max_flow_time": "Maximum flow time for contacts.",
      "max_queued_time": "Maximum queued time for contacts.",
      "min_flow_time": "Minimum flow time for contacts.",
      "percent_contacts_step_expired": "Percentage of contacts where steps expired.",
      "percent_contacts_step_joined": "Percentage of contacts where steps were joined.",
      "percent_non_talk_time": "Percentage of time spent in non-talk activities.",
      "percent_talk_time": "Percentage of time spent talking.",
      "percent_talk_time_agent": "Percentage of time agents spent talking.",
      "percent_talk_time_customer": "Percentage of time customers spent talking.",
      "service_level": "Service level percentage.",
      "step_contacts_queued": "Total number of step contacts queued.",
      "sum_after_contact_work_time": "Total after-contact work time.",
      "sum_connecting_time_agent": "Total connecting time for agents.",
      "contacts_abandoned": "Total number of contacts abandoned.",
      "sum_contacts_abandoned_in_x": "Total number of contacts abandoned in a specific time frame.",
      "sum_contacts_answered_in_x": "Total number of contacts answered in a specific time frame.",
      "sum_contact_flow_time": "Total contact flow time.",
      "sum_contacts_disconnected": "Total number of contacts disconnected.",
      "sum_handle_time": "Total handle time for contacts.",
      "sum_hold_time": "Total hold time for contacts.",
      "sum_interaction_and_hold_time": "Total interaction and hold time for contacts.",
      "sum_interaction_time": "Total interaction time for contacts.",
      "sum_retry_callback_attempts": "Total retry callback attempts."
    }
  },
  "stg_wfm_airtable__team_details": {
    "description": "Model to extract and transform WFM Team Details from the Airtable source.",
    "columns": {
      "team_detail_id": "The unique id for the team details data.",
      "agent_name": "The name of the agent.",
      "agent_email": "The email address of the agent.",
      "shift_schedule": "The schedule of the agent's shift.",
      "days_off": "The days off assigned to the agent.",
      "role_name": "The role(s) of the agent, extracted as a comma-separated string.",
      "manager": "The manager(s) of the agent, extracted as a comma-separated string.",
      "country": "The country of the agent.",
      "cohort_name_from_training_cohort": "The cohort name from the training cohort, extracted as a comma-separated string.",
      "training_start_date": "The start date of the training program for the agent.",
      "training_end_date": "The end date of the training program for the agent.",
      "nesting_end_date": "The end date of the nesting period for the agent.",
      "production_start_date": "The start date of the production period for the agent.",
      "attrition_risk": "The attrition risk level of the agent.",
      "callback_project": "The callback project assigned to the agent.",
      "status": "The status of the agent, extracted as a comma-separated string.",
      "mover_or_new_hire": "Indicates whether the agent is a mover or a new hire.",
      "department_team": "The department/team(s) of the agent, extracted as a comma-separated string.",
      "removal_date": "The date when the agent was removed from the team (if applicable).",
      "slack_id": "The Slack ID of the agent for communication."
    }
  },
  "stg_zendesk__ticket_fields": {
    "description": "staging model for zendesk ticket fields",
    "columns": {
      "field_id": "unique identifier for the zendesk ticket field",
      "sub_type_id": "TBD",
      "title": "field title",
      "raw_title": "raw field title",
      "field_name": "removed white spaces and special characters from raw field title",
      "title_in_portal": "field title in portal",
      "raw_title_in_portal": "raw field title in portal",
      "field_url": "url of the field",
      "field_type": "TBD",
      "description": "field description",
      "raw_description": "raw field description",
      "position": "TBD",
      "is_active": "boolean column denoting if the field is active",
      "is_required": "boolean column denoting if the field is required",
      "is_collapsed_for_agents": "boolean column denoting if the field is collapsed for agents",
      "is_visible_in_portal": "boolean column denoting if the field is visible in portal",
      "is_editable_in_portal": "boolean column denoting if the field is editable in portal",
      "is_required_in_portal": "boolean column denoting if the field is required in portal",
      "is_removable": "boolean column denoting if the field is removable",
      "custom_field_options": "TBD",
      "field_tag": "tag associated with the field",
      "agent_description": "TBD",
      "system_field_options": "TBD",
      "regexp_for_validation": "TBD",
      "custom_statuses": "TBD",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "record update timestamp",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "fct_transactions": {
    "description": "Table containing the latest, distinct transactions based on Invoiced logger data",
    "columns": {
      "transaction_id": "Transaction identifier",
      "customer_id": "Customer identifer",
      "invoice_id": "Invoice identifier",
      "payment_id": "Payment identifer",
      "transaction_type": "Transaction type (i.e. payment, charge, etc.)",
      "payment_method": "Payment method (i.e. check, ach, etc.)",
      "gateway": "Indicates if stripe was used as part of the payment",
      "status": "Transaction status",
      "currency_code": "3-letter ISO currency code",
      "amount": "Total transaction amount",
      "transaction_date": "Transaction date",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "_airbyte_meta": "Airbyte metadata",
      "pdf_url": "URL where receipt PDF can be downloaded"
    }
  },
  "fct_calls": {
    "description": "Fact table of all RingCentral voice calls ",
    "columns": {
      "call_contact_id": "Unique surrogate id derived from call_id and contact_extension_id",
      "call_id": "Unique call identifier - a call can have multiple contacts related to a call since a call can be transferred.",
      "contact_extension_id": "Contact extension id for the user that handled the call, if NULL, no contact information found",
      "from_phone_id": "Inital call-from phone id (i.e. phone number)",
      "to_phone_id": "Inital call-to phone id (i.e. phone number). For inbound calls, this is the first number that was dialed to reach CBH, but not necessarly who handled the call",
      "contact_extension_number": "Contact extension number for the user that handled the call, if NULL, no contact information found",
      "contact_name": "Contact's name (for non-user contacts)",
      "user_name": "Contact's name (for user contacts)",
      "email": "Contact's email",
      "job_title": "Contact's job title",
      "department": "Contact's department",
      "call_type": "Internal type of call (i.e. local, long distance, etc.)",
      "call_direction": "Call direction (inbound or outbound)",
      "call_result": "Result of the call operation (i.e. abandoned, accepted, busy, etc.)",
      "total_call_duration": "Total call duration in seconds. Note that this is not necessarily the time that the rep spent on the call",
      "call_started_at": "The call start time in UTC"
    }
  },
  "cancellations_and_verified_shifts": {
    "description": "",
    "columns": {}
  },
  "stg_open_shifts__shift_offer_rules_output": {
    "description": "Staging model for shift offer rules output data coming from the open shifts service\n",
    "columns": {
      "shift_offer_rule_output_id": "Primary key, unique identifier for the shift offer rule output\n",
      "shift_offer_id": "Shift offer id",
      "rule": "Rule's name",
      "amount_in_minor_units": "The rule's influence on the shift offer pay final amount"
    }
  },
  "sf_opportunity_stg": {
    "description": "",
    "columns": {}
  },
  "investor_hcp_cac_and_ltv_stats": {
    "description": "",
    "columns": {}
  },
  "dim_zendesk_custom_fields": {
    "description": "dimension table for zendesk custom fields in Attendance Score Dispute tickets\n",
    "columns": {
      "ticket_id": "unique id for the Zendesk ticket",
      "ticket_type": "Zendesk ticket type\n",
      "ticket_subject": "Zendesk ticket subject\n",
      "ticket_description": "Zendesk ticket description\n",
      "ticket_status": "Zendesk ticket status\n",
      "mpt_worker_name": "Name of the worker submitting the dispute\n",
      "mpt_worker_email": "Email of the worker submitting the dispute\n",
      "mpt_worker_id": "16-digit CBH ID for the worker submitting the dispute\n",
      "mpt_facility_name": "Name of the facility where the shift in question took place\n",
      "mpt_facility_issue_type": "Information pertaining to the nature of the issue that took place at the facility\n",
      "mpt_shift_date": "Date of the shift in question\n",
      "mpt_shift_type": "Type of shift for the shift in question\n",
      "mpt_sab_q1": "Shift abandonment: time the worker left the facility\n",
      "mpt_sab_q2": "Shift abandonment: why the worker left\n",
      "mpt_sab_q3": "Shift abandonment: did the worker get approval to leave\n",
      "mpt_sab_q4": "Shift abandonment: name of the person at the facility who approved the worker to leave\n",
      "mpt_sent_home_q1": "Sent home: did the worker arrive on time\n",
      "mpt_sent_home_q2": "Sent home: why was the worker sent home\n",
      "mpt_sent_home_q3": "Sent home: name of the person at the facility who sent the worker home\n",
      "mpt_currently_restricted_risk": "Is the workers account currently restricted\n",
      "mpt_secondary_dispute_type_rr": "What is the nature of this workers deactivation\n",
      "mpt_legal_threat_risk": "Did the worker make an explicit legal threat\n",
      "mpt_favorite_status_risk": "What is the workers favorite status\n",
      "mpt_secondary_dispute_asd": "Secondary type of ASD\n",
      "mpt_safety_type": "Description of the safety incident that took place\n",
      "mpt_dispute_resolution": "What was the dispute resolution\n",
      "mpt_fcm_guidelines_used": "Which FCM guidelines were used to reach the resolution\n",
      "mpt_pushback_or_dissatisfaction": "Did the worker push back on our dispute resolution\n",
      "mpt_facility_issue_classification": "Secondary classification for types of facility issues\n",
      "mpt_escalation_channel_wei_email_risk": "Did this ticket originate from an escalation channel\n",
      "mpt_tertiary_dispute_type_asd": "Tertiary type of ASD\n",
      "mpt_primary_dispute_type": "What is the primary nature of this dispute\n",
      "mpt_usd_guidelines_used": "Which USD guidelines were used to reach the resolution\n",
      "mpt_accidental_cancellation_type": "Did the worker re-book or work the shift\n",
      "mpt_asd_guidelines_used": "Which ASD guidelines were used to reach the resolution\n",
      "mpt_worker_emergency_classification": "What was the classification of the worker emergency\n",
      "mpt_sab_guidelines_used": "Which SAB guidelines were used to reach the resolution\n",
      "mpt_3_acceptance_risk": "Did we accept 3 or more disputes from this worker in the last 3 months\n",
      "mpt_worker_emergency_type": "What was the nature of the worker emergency\n",
      "mpt_primary_dispute_reason": "What is the primary reason this worker is disputing\n",
      "mpt_pr_threat_risk": "Did the worker make an explicit PR threat\n",
      "mpt_other_reason_type": "Free text if the workers dispute does not match one of our categories\n",
      "mpt_accidental_booking_type": "Did the worker cancel the shift within 15 minutes of booking"
    }
  },
  "stg_dbt_production__agent_roster": {
    "description": "Staging model for agent roster data. This model standardizes and renames fields from the raw agent_roster source and casts flags to boolean.\n",
    "columns": {
      "agent_id": "Unique identifier for the agent.",
      "name": "Full name of the agent.",
      "email": "Email address of the agent.",
      "roster_status": "Status of the agent in the roster.",
      "company": "Company the agent belongs to.",
      "team_lead": "Name of the team lead managing this agent.",
      "lob": "Line of business.",
      "roster_role": "Role in the roster system.",
      "default_group": "Default group the agent is assigned to.",
      "zendesk_role": "Role in Zendesk.",
      "last_login_at": "Timestamp of the agent's last login.",
      "active": "Whether the agent is currently active.",
      "suspended": "Whether the agent is suspended.",
      "permanently_deleted": "Whether the agent has been permanently deleted.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated"
    }
  },
  "week_sent_invoice_payback_in_weeks": {
    "description": "",
    "columns": {}
  },
  "fasp_dashboard_facility_shift_action_count_stg": {
    "description": "This table contain weekly shift action count for every facility by favorite and non favorite workers in the last 6 months.",
    "columns": {
      "created_week": "date of last day of the week when the action was created.",
      "facility_id": "facility ID of the shift owner",
      "facility_name": "facility name of the shift owner",
      "action_count": "all the log count for a particular action on shifts for a week in a particular facility",
      "is_highly_rated": "is the action performed by the highly rated worker. A worker with a rating >= 4",
      "msa": "the msa of the facility",
      "state": "the state of the facility",
      "city": "city of the facility"
    }
  },
  "fct_worker_dnrs": {
    "description": "Table of workplaces where workers have had a verified shift, joined with their active dnrs, where each row is a distinct worker-workplace pair.\n",
    "columns": {
      "worked_workplace_id": "Primary key, unique indentifier for the worker-workplace pair\n",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "workplace_name": "The name of the workplace as it appears in the facility profile\n",
      "days_since_dnr": "Number of days between the current date and the day the DNR was created\n",
      "dnr_placed_by": "The entity that placed the DNR, either HCP or HCF Number of days between the current date and the day the dnr was created\n",
      "has_worked_at_workplace": "If the worker has had a verified shift at the workplace"
    }
  },
  "fcf_activation_experiment": {
    "description": "",
    "columns": {}
  },
  "fct_exclusions": {
    "description": "Fact model for data coming from the application's exclusions table\n",
    "columns": {
      "exclusion_id": "Primary key, unique indentifier for the exclusion\n",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "shift_review_id": "ID for the shift review\n",
      "excluded_by_id": "ID of the user that created the exclusion\n",
      "workplace_user_id": "ID of the workplace user, if the exclusion was performed by a workplace user\n",
      "employee_id": "ID of the employee, if the exclusion was performed by a CBH employee\n",
      "requested_by": "The entity that requested the exclusion, either AGENT or FACILTY\n",
      "notes": "Notes on why the exclusion was requested\n",
      "delete_note": "Notes on why the exclusion was\n",
      "is_deleted": "Flag indicating whether the record has been marked as deleted",
      "reason": "Reason for the exclusion\n",
      "severity_question": "Question asked to give signal on severity of exclusion\n",
      "severity_response": "Response to severity question\n",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "fct_360_learning__user_paths": {
    "description": "Fact table to provide the data from 360 Learning source about agent's modules/course stats",
    "columns": {
      "learning_360_user_path_id": "Unique identifier for user paths, generated as a surrogate key(user_id, path_id).",
      "learning_360_path_id": "Identifier for the learning path.",
      "learning_360_user_id": "Unique identifier for the user.",
      "email": "Email address of the user.",
      "first_name": "First name of the user.",
      "last_name": "Last name of the user.",
      "session_id": "Identifier for the session within the learning path.",
      "author_ids": "Comma-separated list of author IDs associated with the learning path.",
      "instructor_ids": "Comma-separated list of instructor IDs associated with the learning path.",
      "path_name": "Name of the learning path.",
      "session_name": "Name of the session within the learning path.",
      "source_language": "Source language of the learning path.",
      "default_language": "Default language of the learning path.",
      "detailed_status_type": "Detailed status type of the learning path or session.",
      "detailed_status_reason": "Reason for the detailed status type.",
      "progress": "Progress percentage of the user in the learning path.",
      "result": "Result status of the learning path, e.g., successful, failed.",
      "score": "Score achieved by the user in the learning path.",
      "status": "Overall status of the learning path.",
      "total_time_spent_seconds": "Total time spent by the user on the learning path, in seconds.",
      "completed_at": "Timestamp when the learning path was completed.",
      "start_date": "Start date of the learning path or session.",
      "end_date": "End date of the learning path or session.",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system"
    }
  },
  "stg_zendesk__brands": {
    "description": "staging model for zendesk brands",
    "columns": {
      "brand_id": "unique identifier for the zendesk brand",
      "ticket_form_ids": "unique identifiers for the zendesk ticket form",
      "brand_name": "name of the zendesk brand",
      "zendesk_brand_url": "url of the zendesk brand",
      "brand_url": "internal url of the brand",
      "subdomain": "internal name of the brand",
      "signature_template": "template used for the brand signature",
      "host_mapping": "TBD",
      "has_help_center": "does the brand have a help center",
      "help_center_state": "state of the brand's help center",
      "is_active": "is the brand active",
      "is_default": "is the brand the default brand",
      "is_deleted": "is the brand deleted",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was updated",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system"
    }
  },
  "hcf_first_verified": {
    "description": "",
    "columns": {}
  },
  "int_aggregate_ratings_to_workplace": {
    "description": "intermediate model that aggregates ratings to the workplace grain\n",
    "columns": {
      "workplace_id": "Primary key, unique identifer for the workplace\n",
      "num_ratings_for_workplace": "the number of ratings the workplace has gotten\n",
      "avg_workplace_rating": "the average of ratings the workplace gotten\n",
      "ratings_for_workplace": "JSON of ratings records for the workplace\n",
      "num_ratings_by_workplace": "the number of ratings the workplace has given\n",
      "avg_worker_rating": "the average rating the workplace has given\n",
      "ratings_by_workplace": "JSON of ratings records given by the workplace"
    }
  },
  "marketplace_cdf": {
    "description": "",
    "columns": {}
  },
  "backend_preferred_worker_changed_stg": {
    "description": "",
    "columns": {}
  },
  "stg_worker_ops__wfm_tymeshift_schedules": {
    "description": "This model processes Tymeshift schedules data from the worker_ops data source, generates a surrogate key for each schedule, and renames the fields for easier analysis.\n",
    "columns": {
      "schedule_id": "Surrogate key generated using a combination of agent email, task type, task ID, task name,  start time, and end time to uniquely identify each schedule.\n",
      "agent_id": "Unique identifier for the agent.",
      "agent_name": "Name of the agent associated with the schedule.",
      "agent_email": "Email address of the agent.",
      "task_type": "Type of the task (e.g., work shift, break).",
      "time_off_type": "Type of time off for the agent, if applicable.",
      "task_id": "Unique identifier for the task.",
      "task_name": "Name of the task associated with the schedule.",
      "start_time": "Start time of the scheduled task.",
      "end_time": "End time of the scheduled task.",
      "uploaded_at": "Time of upload through the slack csv upload bot."
    }
  },
  "pa_dashboard_Claimed_w_PA_by_AgentReq": {
    "description": "",
    "columns": {}
  },
  "report_target_worker_view_metrics": {
    "description": "Report containing workplace shift blocks and details about app views by the workers that were targeted for those shift blocks. Shift blocks are identified by identifying if the number of shifts posted in a single day exceeds 2 standard deviations from the workplace's average number of shifts posted in a day - this is done per worker requirement. Target workers are determined as workers that had priority access to the shifts.",
    "columns": {
      "target_worker_view_metric_id": "Primary key, unique identifier to the record. Granularity of this data is at the block_id and worker_id.",
      "block_id": "Identifies what is considered as a block of shifts that were posted. This is a key created by the workplace_id, worker_requirement, and the shift creation date (i.e. shift_created_at_day)",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "workplace_name": "Name of the workplace",
      "worker_requirement": "Worker requirement used to determine a block of shifts.",
      "shift_created_at_day": "The date that the shifts were created. This is used to determine a block of shifts.",
      "num_shifts_posted": "The number of shifts posted in a day by the workplace for a worker requirement that were considered to be a block",
      "avg_num_shifts": "The average number of shifts posted in a day by the workplace for a worker requirement",
      "std_num_shifts": "The standard deviation of the number of shifts posted by the workplace for a worker requirements",
      "viewed_before_access_window": "If the worker viewed the app after the shift creation time and before the priority access window, then TRUE",
      "viewed_during_access_window": "If the worker viewed the app after the shift creation time and within the priority access window, then TRUE",
      "viewed_12_hours_from_creation": "If the worker viewed the app within 12 hours of the shift creation time, then TRUE",
      "viewed_24_hours_from_creation": "If the worker viewed the app within 24 hours of the shift creation time, then TRUE",
      "viewed_7_days_from_creation": "If the worker viewed the app within 7 days of the shift creation time, then TRUE"
    }
  },
  "monthly_facility_experience": {
    "description": "",
    "columns": {}
  },
  "hcp_activation_cohort_pct_active_weekly": {
    "description": "",
    "columns": {}
  },
  "app_pii_facilityusers_stg": {
    "description": "Staging model for data coming from the application's facility users table\n",
    "columns": {
      "id": "Primary key, unique identifier for the facility user\n",
      "NAME": "Name of the facility user",
      "email": "Email of the facility user",
      "phone": "Phone number of the facility user",
      "workplacePhone": "Phone number of the facility user's workplace",
      "firebase_id": "Firebase ID of the facility user",
      "facility_id": "Identifier for the facility associated with the facility user",
      "created_at": "Date and time the facility user was created",
      "updated_at": "Date and time the facility user was last updated"
    }
  },
  "hcf_users_msa": {
    "description": "",
    "columns": {}
  },
  "stg_main_app__magic_shifts": {
    "description": "magic shifts data, this can be used to identify if a specific shift is a magic shift or not\n",
    "columns": {
      "shift_id": "primary key for the shift\n",
      "magic_points": "The number of 'Magic Points' that were used on the shift to give it Urgent Shift status and boost it's pay",
      "updated_at": "The date and time when the magic attributes were last updated."
    }
  },
  "hcf_first_last_shift_open_mod": {
    "description": "",
    "columns": {}
  },
  "fct_zendesk__techsupport_tickets": {
    "description": "Fact model for tech support Zendesk tickets. This model integrates ticket data with users, ticket forms, groups, custom fields, and metrics, and is designed to handle tickets from multiple forms related to technical support.\n",
    "columns": {
      "ticket_id": "Unique identifier for Zendesk tickets",
      "subject": "Unique subject of the ticket",
      "requester_id": "Unique identifier for the Zendesk requester",
      "assignee_id": "Unique identifier for the Zendesk assignee",
      "organization_id": "Unique identifier for Zendesk organizations",
      "brand_id": "Unique identifier for Zendesk brands",
      "requester_name": "Name of the ticket requester",
      "requester_email": "Email of the ticket requester",
      "assignee_name": "Name of the ticket assignee",
      "assignee_email": "Email of the ticket assignee",
      "assignee_supervisor": "Supervisor of the ticket assignee",
      "assignee_agent_role": "Role of the ticket assignee agent in their team/roster",
      "group_name": "Name of the Zendesk group the ticket is assigned to",
      "ticket_form_name": "Name of the Zendesk ticket form the ticket was created with",
      "channel": "Channel the ticket was created from",
      "status": "Status of the ticket",
      "priority": "Priority of the ticket",
      "recipient": "Address that received the ticket",
      "description": "Description of the ticket",
      "ticket_type": "Type of the ticket",
      "ticket_tags": "Tags on the ticket",
      "who_is_being_impacted": "Custom field for identifying who is being impacted in tech support",
      "hcf_services_or_features_impacted": "Custom field for HCF services or features impacted in tech support",
      "hcp_services_or_features_impacted": "Custom field for HCP services or features impacted in tech support",
      "internal_tools_effected": "Custom field for internal tools affected in tech support",
      "z_ticket_vertical": "Custom field for ticket vertical in tech support",
      "what_team_submit_ticket": "Custom field for the team submitting the ticket in tech support",
      "ticket_outcome": "Custom field for ticket outcome in tech support",
      "reason_for_process_improvement": "Custom field for the reason for process improvement in tech support",
      "related_sop_request": "Custom field for link to sop create or update link",
      "reopens": "Number of times the ticket was reopened",
      "replies": "Number of replies to the ticket",
      "reply_time_in_minutes": "Time taken to reply to the ticket in minutes",
      "first_resolution_time_in_minutes": "Time taken to resolve the ticket for the first time in minutes",
      "full_resolution_time_in_minutes": "Time taken to fully resolve the ticket in minutes",
      "handle_time": "Time taken to handle the ticket in minutes",
      "last_touch_handle_time": "Time spent on the last update, in minutes",
      "created_at": "Timestamp of when the record was created",
      "initially_assigned_at": "Timestamp of when the ticket was initially assigned",
      "assigned_at": "Timestamp of when the ticket was assigned",
      "solved_at": "Timestamp of when the ticket was solved",
      "generated_timestamp": "Timestamp of when the ticket was generated",
      "updated_at": "timestamp of when the record was last updated"
    }
  },
  "time_between_first_enrolled_and_log_event": {
    "description": "",
    "columns": {}
  },
  "dim_zendesk_users": {
    "description": "Zendesk users fact model with each record being one zendesk user",
    "columns": {
      "user_id": "Zendesk's unique user identifier",
      "worker_id": "Worker's external id in the app",
      "workplace_user_id": "Workplace user's external id in the app",
      "organization_id": "id of the organization the user belongs to",
      "custom_role_id": "id of the custom role granted to the user in zendesk",
      "default_group_id": "id of the default group the user belongs to",
      "user_name": "user full name",
      "user_email": "user's registered email",
      "user_phone": "user's registered phone number",
      "user_role": "zendesk user's role",
      "user_role_type": "number value to represent user's role type in zendesk",
      "user_timezone": "user's timezone",
      "user_locale": "user's locale",
      "facility": "facility that the user belongs to",
      "user_msa": "msa of the user",
      "user_type": "type of the user",
      "is_auto_escalate_to_tier_2": "boolean value to check if user's tickets are marked as auto escalated to tier 2",
      "has_ongoing_legal_threat": "boolean value to check if user has any ongoing legal threat",
      "user_class": "class of the user, can be worker, workplace or agent",
      "designation": "designation of the user in zendesk",
      "supervisor": "supervisor of the user, applicable for internal agents",
      "agent_company": "company of the agent, either an external BPO or Clipboard Health. Denoted as \"company\" in user_fields object in zendesk",
      "group_name": "name of the group the user belongs to",
      "agent_status": "status of the agent, either active or inactive. Denoted as \"status\" in user_fields object in zendesk",
      "line_of_business": "line of business of the agent. Designating their team within the Customer Operations organization",
      "agent_role": "role of the agent in their team/roster. Denoted as \"role\" in user_fields object in zendesk",
      "fcr_status": "wether the user had a first call resolution or not",
      "csat_last_requested": "when was the csat last requested",
      "ticket_restriction": "ticket restriction for the user",
      "is_verified": "boolean value to check if user is verified",
      "is_active": "boolean value to check if user is active",
      "is_shared": "boolean value to check if user is shared",
      "is_shared_agent": "boolean value to check if user is a shared agent",
      "is_moderator": "boolean value to check if user is a moderator",
      "is_two_factor_auth_enabled": "boolean value to check if user has two factor authentication enabled",
      "is_restricted_agent": "boolean value to check if user is a restricted agent",
      "is_suspended": "boolean value to check if user is suspended",
      "has_shared_phone_number": "boolean value to check if user has shared their phone number in zendesk",
      "is_permanently_deleted": "boolean value to check if user is permanently deleted",
      "last_login_at": "timestamp when user last logged in",
      "created_at": "timestamp when user was created",
      "updated_at": "timestamp when user was last updated",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake",
      "agent_starting_date": "\nAgent's start date\n",
      "agent_graduation_date": "\nAgent's graduation date"
    }
  },
  "stg_klaus__reviews": {
    "description": "This model processes the raw data from the Klaus reviews source, renaming columns and preparing the data for downstream usage.",
    "columns": {
      "ticket_id": "The unique identifier for the ticket.",
      "review_url": "The URL of the review in the Klaus system.",
      "ticket_url": "The external URL of the ticket.",
      "source_type": "The source type of the review (e.g., Zendesk, Freshdesk).",
      "reviews": "JSON field containing all review details, including ratings and comments.",
      "comments": "JSON field containing comments associated with the review.",
      "workspace_id": "The identifier for the workspace where the review resides.",
      "created_at_iso": "ISO 8601 formatted timestamp indicating when the review was created.",
      "updated_at_iso": "ISO 8601 formatted timestamp indicating when the review was last updated.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system"
    }
  },
  "fct_shift_events": {
    "description": "Table containing the latest additonal information about important shift events (i.e. the latest timestamp of when a shift was claimed etc.). This table can be joined to the fct_shifts table on shift_id to derive metrics such as the number of hours between when the shift was created and the shift was claimed, verified etc. Note that a shift can go through many changes in its lifecycle (i.e a shift can be claimed multiple times), this only shows the latest timestamps for the defined actions. It also does not factor for changes based on a specific worker within a shift. All timestamps are in UTC.",
    "columns": {
      "shift_id": "Unique identifier for the shift",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "shift_start_at": "The latest timestamp of when the shift is set to start",
      "shift_end_at": "The latest timestamp of when the shift is set to end",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake",
      "latest_shift_opened_at": "The latest timestamp of when the shift was opened",
      "latest_shift_unassigned_at": "The latest timestamp of when a shift was unassigned",
      "latest_shift_assigned_at": "The latest timestamp of when a shift was assigned",
      "latest_shift_claimed_at": "The latest timestamp of when the shift was claimed",
      "latest_shift_verified_at": "The latest timestamp of when the shift was verified",
      "latest_facility_cancelled_at": "The latest timestamp of when the facility cancelled the shift",
      "latest_facility_cancel_filled_at": "The latest timestamp of when the facility cancelled the shift due to it being filled",
      "latest_worker_cancelled_at": "The latest timestamp of when the worker cancelled the shift",
      "latest_standard_cancelled_at": "The latest timestamp of when the shift was standard cancelled",
      "latest_shift_deleted_at": "The latest timestamp of when the shift was deleted at",
      "latest_ncns_at": "The latest timestamp of when the worker was marked as a no-call no-show (NCNS)",
      "latest_shift_restored_at": "The latest timestamp of when the shift was restored",
      "latest_shift_delete_filled_at": "The latest timestamp of when the shift was deleted due to it being filled",
      "latest_shift_reassigned_at": "The latest timestamp of when the shift was reassigned",
      "latest_facility_cancelled_me_at": "The latest timestamp of when a facility performed a FCM (facility cancelled me) for a shift",
      "latest_shift_time_change_at": "The latest timestamp of when a shift had its hours adjusted",
      "shift_deleted_at": "This column represents the timestamp of when a shift was deleted. It is useful for tracking the lifecycle of a shift and understanding when shifts are typically removed from the schedule.",
      "shift_open_at": "This column represents the timestamp of when a shift was first opened or made available. It can be used to analyze how far in advance shifts are typically posted and to track the lifecycle of a shift.",
      "first_shift_claim_at": "This column represents the timestamp of when a shift was first claimed by a worker.",
      "last_shift_claim_at": "This column represents the timestamp of when a shift was last claimed by a worker.",
      "first_shift_booked_at": "This column represents the timestamp of when a shift was first either booked by a worker. The first booking is defined as the first 'SHIFT_ASSIGN' or 'SHIFT_CLAIM' action.",
      "last_shift_booked_at": "This column represents the timestamp of when a shift was last booked by a worker. The last booking is defined as the last 'SHIFT_ASSIGN' or 'SHIFT_CLAIM' action.",
      "last_action_at": "This column represents the timestamp of when the last action was performed on the shift.",
      "hours_from_shift_delete_to_start": "This column represents the number of hours between the time a shift was deleted and the time it was scheduled to start. This can be useful for understanding how much notice was given before a shift was cancelled.",
      "hours_from_shift_open_to_first_claim": "This column represents the number of hours between the time a shift was made available (opened) and the time it was first claimed by a worker. This can provide insights into how quickly shifts are being filled after they are posted.",
      "hours_from_shift_open_to_first_booked": "This column represents the number of hours between the time a shift was made available (opened) and the time it was first booked by a worker. This can provide insights into how quickly shifts are being filled after they are posted."
    }
  },
  "app_wwf_phase_2_pilot_workers_stg": {
    "description": "",
    "columns": {}
  },
  "stg_app__employee_profiles": {
    "description": "Staging model for data coming from the application's employees table\n",
    "columns": {
      "employee_id": "Primary key, unique indentifier for the employee\n",
      "name": "",
      "email": "",
      "roles": "",
      "is_deactivated": "",
      "created_at": "",
      "updated_at": "",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "views_per_shift": {
    "description": "",
    "columns": {}
  },
  "dim_workplace_users": {
    "description": "The dim_workplace_users model provides a detailed overview of authorized users of workplaces, including their personal details, roles, associated workplaces, permissions, and notification settings.",
    "columns": {
      "workplace_user_id": "Primary key, unique indentifier for the facility user",
      "firebase_id": "This is the unique identifier for the user in the Firebase system. It is used to track and manage user data across different platforms and services.",
      "name": "This is the full name of the user. It is used for identification and personalization purposes across the system.",
      "email": "This is the email address of the user. It is used for communication, notifications, and account recovery purposes.",
      "phone_number": "This field contains the phone number of the workplace user. It is stored as a string and can be used for communication or identification purposes.",
      "timezone": "This field represents the timezone in which the workplace user operates. It is stored as a string and can be used to schedule meetings or tasks according to the user's local time.",
      "user_role_1": "This field represents the primary role of the workplace user within the organization. It is stored as a string and can be used to understand the user's responsibilities and permissions within the system.",
      "user_role_2": "This column represents the secondary role assigned to a user in the workplace. It is a string value that can be used to understand the additional responsibilities or permissions a user might have in the system.",
      "user_role_3": "This column represents the tertiary role assigned to a user in the workplace. It is a string value that can be used to understand any further responsibilities or permissions a user might have in the system.",
      "user_role_4": "This column represents the quaternary role assigned to a user in the workplace. It is a string value that can be used to understand any additional responsibilities or permissions a user might have in the system beyond their primary, secondary, and tertiary roles.",
      "designation": "This field represents the job title or position of the workplace user. It provides information about the user's role or responsibilities within the organization.",
      "notes": "This field is used to store any additional information or comments about the workplace user. It can include details that are not captured in other fields.",
      "workplaces": "This field contains a list of workplaces associated with the user. Each workplace is represented as a complex object with various attributes such as workplace ID, name, and user ID. This field provides a comprehensive view of the user's affiliations within the organization.",
      "workplace_ids": "list of workplace IDs",
      "workplace_names": "List of workplace names",
      "user_ids": "List of user IDs",
      "is_primary": "This field indicates whether the user is the primary user for the associated workplace. If the value is 'true', the user is the primary user. If the value is 'false', the user is not the primary user.",
      "is_archived": "This field indicates whether the user's profile is archived. If the value is 'true', the user's profile is archived and not actively used. If the value is 'false', the user's profile is active.",
      "active_workplaces": "Number of workplaces in which the user is a user for",
      "has_post_shifts_permissions": "true if the facility user has the post_shifts permission, always true if user has the ADM user role",
      "has_cancel_shifts_permissions": "true if the facility user has the cancel_shifts permission, always true if user has the ADM user role",
      "has_edit_shift_rate_permissions": "true if the facility user has the edit_shift_rate permission, always true if user has the ADM user role",
      "has_manage_invoices_permissions": "true if the facility user has the manage_invoices permission, always true if user has the ADM user role",
      "has_assignment_email_enabled": "This column indicates whether a user has enabled the feature to receive emails when they are assigned to a task or project. If the value is 'true', the user will receive assignment emails. If the value is 'false', the user has opted out of receiving these notifications.",
      "is_assignment_email_batched": "This column indicates whether the assignment emails are batched for the user. If the value is 'true', the user will receive a single email with all their assignments, rather than individual emails for each assignment. If the value is 'false', the user will receive individual emails for each assignment.",
      "has_unassignment_email_enabled": "This column indicates whether a user has enabled the feature to receive emails when they are unassigned from a task or project. If the value is 'true', the user will receive unassignment emails. If the value is 'false', the user has opted out of receiving these notifications.",
      "is_unassignment_email_batched": "This field indicates whether the unassignment emails are batched or not. If the value is true, it means that the unassignment emails are sent in batches rather than individually. This can be useful for managing large volumes of unassignments.",
      "has_summary_email_enabled": "This field indicates whether the summary email feature is enabled or not. If the value is true, it means that the user will receive summary emails. Summary emails provide an overview of key activities and updates.",
      "has_charge_rate_visility_enabled": "This field indicates whether the charge rate visibility feature is enabled or not. If the value is true, it means that the user has the ability to view the charge rates. This can be important for financial and budgeting purposes.",
      "has_assignment_sms_enabled": "This column indicates whether a user has enabled the feature to receive SMS notifications for shift assignments. If the value is 'true', the user will receive SMS notifications for shift assignments. If the value is 'false', the user will not receive these notifications.",
      "is_assignment_sms_batched": "This column indicates whether the SMS notifications for shift assignments are batched for the user. If the value is 'true', the user will receive batched SMS notifications for shift assignments. If the value is 'false', the user will receive individual SMS notifications for each shift assignment.",
      "has_unassignment_sms_enabled": "This column indicates whether a user has enabled the feature to receive SMS notifications for shift unassignments. If the value is 'true', the user will receive SMS notifications for shift unassignments. If the value is 'false', the user will not receive these notifications.",
      "is_unassignment_sms_batched": "This field indicates whether the SMS notifications for unassignments are batched or not. If it is set to true, the SMS notifications for unassignments are sent in batches at specific times rather than immediately. This can be useful for managing the volume of notifications sent to users.",
      "has_chat_messages_enabled": "This field indicates whether the user has enabled chat messages. If it is set to true, the user can send and receive chat messages within the application. This is a key feature for communication and collaboration within the workplace.",
      "has_worker_eta_notification_enabled": "This field indicates whether the user has enabled notifications for worker Estimated Time of Arrival (ETA). If it is set to true, the user will receive notifications when a worker is expected to arrive at their assigned location. This can be useful for planning and coordinating work schedules.",
      "unassignment_email_batched_time": "This field represents the time at which batched unassignment emails are sent to the user. The time is represented in a float format. Batched emails are a collection of multiple notifications or updates that are sent out at a specific time, rather than immediately upon occurrence of the event.",
      "summary_email_time": "This field indicates the time at which summary emails are sent to the user. The time is represented in a float format. Summary emails provide a comprehensive overview of the user's activities or updates within a specific period.",
      "assignment_email_batched_time": "This field represents the time at which batched assignment emails are sent to the user. The time is represented in a float format. Batched emails are a collection of multiple notifications or updates that are sent out at a specific time, rather than immediately upon occurrence of the event.",
      "assignment_sms_batched_time": "This field represents the time at which a batch of assignment SMS notifications were sent out to the users. It is measured in seconds since the Unix Epoch (January 1, 1970). This information is useful for understanding the frequency and timing of assignment notifications.",
      "unassignment_sms_batched_time": "This field indicates the time at which a batch of unassignment SMS notifications were sent out to the users. It is also measured in seconds since the Unix Epoch. This data can be used to analyze the frequency and timing of unassignment notifications.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake",
      "has_access_contract_terms_permissions": "This field indicates whether the user has permissions to access contract terms. If the value is 'true', the user has the necessary permissions. If the value is 'false', the user does not have these permissions."
    }
  },
  "stg_app__placements": {
    "description": "Staging model for data coming from the placement table\n",
    "columns": {
      "placement_id": "Primary key, unique indentifier for the placement\n",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "status": "A placement's status: draft, open or closed\n",
      "title": "A placement's title\n",
      "description": "A placement's description\n",
      "job_types": "A list of placement's types: full_time, part_time, per_diem and weekend_warrior\n",
      "shift_types": "A list of placement's shift types: am, pm, and noc.\n",
      "worker_types": "A list of placement's worker types: CNA, RN, ...\n",
      "hiring_poc_email": "A hiring point of contact's email\n",
      "hiring_poc_name": "A hiring point of contact's name\n",
      "created_by_id": "User Id of the creator of this placement\n",
      "created_by_user_type": "User Type of the creator of this placement\n",
      "perks": "A list of placement's perks: shiftDifferential, dailyPay, ...\n",
      "sign_on_bonus_amount": "A sign on bonus's amount\n",
      "original_job_link": "A original job link which we get a placement's data\n",
      "pay_range_min_pay_amount": "A placement's minimum pay\n",
      "pay_range_max_pay_amount": "A placement's maximum pay\n",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "fct_zendesk__ticket_comments": {
    "description": "Fact model depicting comments left on a Zendesk ticket. These comments represent interactions between users and agents, or internal notes left by agents. This model can be used to perform analysis on the content of comments, the users who left them, and the tickets they are associated with.\n",
    "columns": {
      "ticket_comment_id": "Unique identifier for the ticket comment.",
      "ticket_id": "Unique identifier for the Zendesk ticket.",
      "author_id": "Unique identifier for the author of the comment.",
      "group_id": "Unique identifier for the group the ticket is assigned to.",
      "ticket_form_id": "Unique identifier for the ticket form the ticket was created with.",
      "worker_id": "Unique identifier for the worker who left the comment, if applicable.",
      "workplace_user_id": "Unique identifier for the workplace user who left the comment, if applicable.",
      "user_name": "Full name of the user who left the comment.",
      "user_email": "Email address of the user who left the comment.",
      "user_phone": "Phone number of the user who left the comment.",
      "body": "The content of the comment.",
      "type": "The type of the comment.",
      "comment_type": "Wether the comment is a public reply or an internal note.",
      "via_channel": "The channel through which the comment was left.",
      "ticket_form_name": "The name of the ticket form the ticket was created with.",
      "group_name": "The name of the group the ticket is assigned to.",
      "organization_name": "The name of the organization the user who left the comment belongs to.",
      "status": "The status of the ticket the comment is associated with.",
      "ticket_type_l2": "Second level ticket type of the ticket the comment is associated with.",
      "user_role": "The role of the user who left the comment.",
      "designation": "The designation of the user who left the comment.",
      "supervisor": "The supervisor of the user who left the comment.",
      "line_of_business": "The line of business the user who left the comment belongs to.",
      "user_class": "The class of the user who left the comment, wether a worker, workplace user, or agent.",
      "is_active": "Wether the user who left the comment is active.",
      "is_permanently_deleted": "Wether the user who left the comment is permanently deleted.",
      "public": "Wether the comment is public or private.",
      "uploads": "An array of attachments uploaded with the comment.\n",
      "metadata": "System information (web client, IP address, etc.) and comment flags, if any.\n",
      "comment_timestamp": "The time the comment was created.",
      "event_type": "The type of event that triggered the comment.",
      "attachments": "Array of attachments uploaded with the comment.",
      "created_at": "Timestamp of when the record was created"
    }
  },
  "worker_mobile_open_shift_colleagues_viewed_stg": {
    "description": "",
    "columns": {}
  },
  "fct_zendesk__agents_productivity": {
    "description": "Fact model for agents productivity, showing their time on each status every day since June 06 2023, with their assigned web and messaging items.",
    "columns": {
      "agent_availability_id": "unique identifier for the record, auto-generated using surrogate key from agent_id and status_changed_at",
      "agent_id": "Unique identifier for the zendesk agent",
      "custom_role_id": "id of the custom role granted to the user in zendesk",
      "status_id": "Unique identifier for the agent status",
      "agent_name": "Agent's full name",
      "agent_email": "Agent's email",
      "zendesk_role": "Agent's role within Zendesk",
      "agent_supervisor": "Agent's supervisor",
      "agent_role": "Role of the agent in their team/roster. Denoted as \"role\" in user_fields object in zendesk",
      "is_verified": "Boolean value to check if user is verified",
      "is_active": "Boolean value to check if user is active",
      "is_moderator": "Boolean value to check if user is a moderator",
      "is_two_factor_auth_enabled": "Boolean value to check if user has two factor authentication enabled",
      "is_permanently_deleted": "Boolean value to check if user is permanently deleted",
      "status_name": "Name of the agent status",
      "status_changed_at": "Timestamp of the agent status update",
      "status_duration_in_minutes": "Duration of the agent status in minutes",
      "web_items": "Number of web items assigned to the agent from Zendesk source",
      "web_work_items": "Number of web items assigned to the agent from Worker Ops source",
      "web_capacity": "Number of web items the agent can handle from Zendesk source",
      "web_max_capacity": "Maximum web capacity for the agent from Worker Ops source",
      "web_status": "Current status of the agent for web channel",
      "web_work_item_count": "Count of web work items assigned to the agent",
      "web_latest_assigned_at": "Timestamp when the agent was last assigned a web item",
      "messaging_items": "Number of messaging items assigned to the agent from Zendesk source",
      "chat_work_items": "Number of chat items assigned to the agent from Worker Ops source",
      "messaging_capacity": "Number of messaging items the agent can handle from Zendesk source",
      "chat_max_capacity": "Maximum chat capacity for the agent from Worker Ops source",
      "chat_status": "Current status of the agent for chat channel",
      "chat_work_item_count": "Count of chat work items assigned to the agent",
      "chat_latest_assigned_at": "Timestamp when the agent was last assigned a chat item",
      "status_reason": "Reason for the current agent status",
      "updated_at": "Timestamp when the agent availability record was last updated",
      "workday": "Date of the record",
      "agent_created_at": "Timestamp of when the record was created",
      "agent_updated_at": "timestamp of when the record was last updated"
    }
  },
  "sf_account_stg": {
    "description": "",
    "columns": {}
  },
  "report_open_invoice_snapshots_customer": {
    "description": "Table containing a daily snapshot of open invoices (invoice status of past_due, sent, or viewed) by customers and their relevant dollar value to understand A/R aging. If a date is missing, that means that the customer did not have any open invoices on that date.",
    "columns": {
      "customer_snapshot_id": "Unique surrogate id derived from snapshot_date and customer_id",
      "snapshot_date": "Daily snapshot date",
      "customer_id": "Invoiced customer identifier",
      "customer_name": "Customer Name (i.e. HCF name)",
      "total_unpaid_balance": "Total unpaid balance of the customer for a given snapshot date",
      "total_open_invoices": "Total number of open invoices of the customer for a given snapshot date"
    }
  },
  "app_wwf_phase_1_toggle_hide_as_colleague_on_shifts_stg": {
    "description": "",
    "columns": {}
  },
  "fct_payments": {
    "description": "Table containing all the payment line items to which a payment was applied to. The relationship between Invoice to Payments can be many-to-many and this serves as a bridge table to identify that relationship.",
    "columns": {
      "payment_applied_to_id": "Unique identifier based on the concatination of the payment, customer, invoice, and payment_line id. This is due to payments being made at the customer level or the invoice level. Also a single payment can be applied across multiple invoices.",
      "payment_id": "Payment ID",
      "customer_id": "Customer ID",
      "payment_line_id": "Payment Line ID, as payment can be applied across multiple invoices",
      "invoice_id": "Invoice ID that the payment was applied to, if applicable",
      "ach_sender_id": "ACH PPD ID",
      "reference_number": "Reference number (i.e. check number)",
      "source": "Source of the payment",
      "charges": "Charges represent a payment processed given a customer's payment source, such as a credit card or bank account. This is included for processed payments.",
      "gateway": "Indicates if stripe was used as part of the payment",
      "method": "Payment insturment used",
      "is_voided": "Indicates that the payment was voided",
      "is_cash_matched": "When true there is a CashMatch suggestion",
      "currency_code": "3-letter ISO code",
      "payment_applied_type": "A payment application describes how a payment is applied. Payments can have multiple applications as long as the applied amounts do not exceed the payment amount. These types of payment applications are supported:\n\n| type           | description                                                               |\n|----------------|---------------------------------------------------------------------------|\n| invoice        | Applied to invoice                                                        |\n| estimate       | Applied to estimate deposit                                               |\n| credit_note    | Applied to credit note                                                    |\n| convenience_fee| Applied to convenience fee                                                |\n| credit         | Added to credit balance                                                   |\n| applied_credit | Applied to credit balance                                                 |",
      "payment_amount": "Total payment amount",
      "payment_line_amount": "Payment amount for the line item. The sum of the payment line items equate to the total payment amount",
      "balance": "Unapplied amount remaining",
      "payment_date": "Payment date",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "payment_notes": "Internal notes"
    }
  },
  "fct_zendesk__docs_qa_tickets": {
    "description": "Fact model for DOCS QA tickets which uses one of the 6 QA forms. These tickets represent Quality Assurance evaluations initiated by TLs and QAs for DOCS agents. This model can be used as a central table for DOCS's QA performance.\n",
    "columns": {
      "ticket_id": "The unique ID of the DOCS QA ticket.",
      "requester_id": "The unique ID of the ticket requester.",
      "submitter_id": "The unique ID of the ticket submitter.",
      "assignee_id": "The unique ID of the ticket assignee.",
      "organization_id": "The unique ID of the organization associated with the ticket.",
      "group_id": "The unique ID of the group associated with the ticket.",
      "brand_id": "The unique ID of the brand associated with the ticket.",
      "ticket_form_id": "The unique ID of the ticket form.",
      "recipient": "The recipient of the ticket.",
      "requester_name": "The name of the ticket requester.",
      "requester_email": "The email address of the ticket requester.",
      "assignee_name": "The name of the ticket assignee.",
      "assignee_email": "The email address of the ticket assignee.",
      "assignee_supervisor": "The supervisor of the ticket assignee.",
      "assignee_role": "The role of the ticket assignee.",
      "assignee_company": "The company of the ticket assignee.",
      "ticket_type": "The type of the ticket.",
      "subject": "The subject or title of the ticket.",
      "description": "The description of the issue or question in the ticket.",
      "status": "The status of the ticket.",
      "tags": "The tags associated with the ticket.",
      "ticket_form": "The name of the ticket form.",
      "created_at": "The date and time the ticket was created in UTC.",
      "updated_at": "The date and time the ticket was last updated in UTC.",
      "created_at_pst": "The date and time the ticket was created in Pacific Standard Time.",
      "updated_at_pst": "The date and time the ticket was last updated in Pacific Standard Time.",
      "ticket_being_evaluated": "The ticket ID of the ticket being evaluated.",
      "evaluation_type": "The type of evaluation performed for the ticket.",
      "final_qa_score": "The final QA score for the ticket.",
      "docs_qa_evaluation_request": "Whether or not a QA evaluation was requested for the ticket.",
      "qa_evaluator_score": "The QA evaluator's score for the ticket.",
      "qat1_agent_email_address": "The email address of the QAT1 agent for the ticket.",
      "additional_documents_processed": "The number of additional documents processed for the ticket.",
      "audit_period": "The time period in which the ticket was audited.",
      "confluence_link": "The link to the Confluence page associated with the ticket.",
      "delta_audit_the_auditor": "Whether or not a delta audit was performed by the auditor for the ticket.",
      "documents_processed": "The number of documents processed for the ticket.",
      "documents_with_autofail": "The number of documents that failed automatically for the ticket.",
      "documents_with_markdown": "The number of documents with Markdown for the ticket.",
      "qadoc_q1_markdown_reason": "The reason for the QADOC Q1 Markdown score for the ticket.",
      "qadoc_q2_markdown_reasons": "The reasons for the QADOC Q2 Markdown score for the ticket.",
      "qadoc_q3_markdown_reasons": "The reasons for the QADOC Q3 Markdown score for the ticket.",
      "qadoc_q4_markdown_reason": "The reason for the QADOC Q4 Markdown score for the ticket.",
      "qadocchat_auto_fail": "Whether or not the QADOC Chat failed automatically for the ticket.",
      "qadocchatq1_1_etiquette": "The QADOC Chat Q1.1 Etiquette score for the ticket.",
      "qadocchatq1_1_notes": "The notes for the QADOC Chat Q1.1 Etiquette score for the ticket.",
      "qadocchatq1_2_grammar": "The QADOC Chat Q1.2 Grammar score for the ticket.",
      "qadocchatq1_2_notes": "The notes for the QADOC Chat Q1.2 Grammar score for the ticket.",
      "qadocchatq1_3_macros": "The QADOC Chat Q1.3 Macros score for the ticket.",
      "qadocchatq1_3_notes": "The notes for the QADOC Chat Q1.3 Macros score for the ticket.",
      "qadocchatq2_notes": "The notes for the QADOC Chat Q2 score for the ticket.",
      "qadocchatq2_time_management": "The QADOC Chat Q2 Time Management score for the ticket.",
      "qadocchatq3_notes": "The notes for the QADOC Chat Q3 score for the ticket.",
      "qadocchatq3_validation_of_documentlicense": "The QADOC Chat Q3 Validation of Document/License score for the ticket.",
      "qadocchatq4_notes": "The notes for the QADOC Chat Q4 score for the ticket.",
      "qadocchatq4_resolution": "The QADOC Chat Q4 Resolution score for the ticket.",
      "qadocconsult_auto_fail": "Whether or not the QADOC Consult failed automatically for the ticket.",
      "qadocconsultq1_notes": "The notes for the QADOC Consult Q1 score for the ticket.",
      "qadocconsultq1_resolution": "The QADOC Consult Q1 Resolution score for the ticket.",
      "qadocconsultq2_notes": "The notes for the QADOC Consult Q2 score for the ticket.",
      "qadocconsultq2_response_time": "The QADOC Consult Q2 Response Time score for the ticket.",
      "qadocconsultq3_documentation": "The QADOC Consult Q3 Documentation score for the ticket.",
      "qadocconsultq3_notes": "The notes for the QADOC Consult Q3 score for the ticket.",
      "qadoccritical_auto_fail": "Whether or not the QADOC Critical failed automatically for the ticket.",
      "qadocq1_document_validation": "The QADOC Q1 Document Validation score for the ticket.",
      "qadocq1_notes": "The notes for the QADOC Q1 score for the ticket.",
      "qadocq2_hcp_license": "The QADOC Q2 HCP License score for the ticket.",
      "qadocq2_notes": "The notes for the QADOC Q2 score for the ticket.",
      "qadocq3_documentation": "The QADOC Q3 Documentation score for the ticket.",
      "qadocq3_notes": "The notes for the QADOC Q3 score for the ticket.",
      "qadocq4_communication": "The QADOC Q4 Communication score for the ticket.",
      "qadocq4_notes": "The notes for the QADOC Q4 score for the ticket.",
      "qadocq5_notes": "The notes for the QADOC Q5 score for the ticket.",
      "qadocsmeq1_etiquette": "The QADOC SME Q1 Etiquette score for the ticket.",
      "qadocsmeq1_notes": "The notes for the QADOC SME Q1 score for the ticket.",
      "qadocsmeq2_notes": "The notes for the QADOC SME Q2 score for the ticket.",
      "qadocsmeq2_resolution": "The QADOC SME Q2 Resolution score for the ticket.",
      "qadocsmeq3_notes": "The notes for the QADOC SME Q3 score for the ticket.",
      "qadocsmeq3_validation_of_documents": "The QADOC SME Q3 Validation of Documents score for the ticket.",
      "qadocsmeq4_notes": "The notes for the QADOC SME Q4 score for the ticket.",
      "qadocsmeq4_validation_of_hcp_license": "The QADOC SME Q4 Validation of HCP License score for the ticket.",
      "qadocsmeq5_notes": "The notes for the QADOC SME Q5 score for the ticket.",
      "qadocsmeq5_proper_documentation": "The QADOC SME Q5 Proper Documentation score for the ticket.",
      "qadocwebservicesq1_etiquette": "The QADOC Web Services Q1 Etiquette score for the ticket.",
      "qadocwebservicesq1_notes": "The notes for the QADOC Web Services Q1 score for the ticket.",
      "qadocwebservicesq2_grammar_and_formatting": "The QADOC Web Services Q2 Grammar and Formatting score for the ticket.",
      "qadocwebservicesq2_notes": "The notes for the QADOC Web Services Q2 score for the ticket.",
      "qadocwebservicesq3_documentation": "The QADOC Web Services Q3 Documentation score for the ticket.",
      "qadocwebservicesq3_notes": "The notes for the QADOC Web Services Q3 score for the ticket.",
      "qadocwebservicesq4_notes": "The notes for the QADOC Web Services Q4 score for the ticket.",
      "qadocwebservicesq4_validation": "The QADOC Web Services Q4 Validation score for the ticket.",
      "qadocwebservicesq5_notes": "The notes for the QADOC Web Services Q5 score for the ticket.",
      "qadocwebservicesq5_resolution": "The QADOC Web Services Q5 Resolution score for the ticket.",
      "requested_qa_eval_review_validinvalid": "Whether the requested QA evaluation review was valid or invalid for the ticket.",
      "total_time_spent_sec": "The total time spent on the ticket in seconds.",
      "documents_magical_experience": "The magical experience associated with the documents.",
      "wko_cx_delta_ata": "The WKO CX Delta ATA related to the ticket.",
      "qadocvoice_auto_fail": "Whether the QADoc Voice test automatically failed.",
      "qadocvoiceq1_etiquette": "The QADOC Voice Q1 Etiquette score for the ticket.",
      "qadocvoiceq1_notes": "Notes related to QADOC Voice Q1.",
      "qadocvoiceq2_notes": "Notes related to QADOC Voice Q2.",
      "qadocvoiceq3_notes": "Notes related to QADOC Voice Q3.",
      "qadocvoiceq4_notes": "Notes related to QADOC Voice Q4.",
      "qadocvoiceq5_notes": "Notes related to QADOC Voice Q5.",
      "qadocvoiceq6_notes": "Notes related to QADOC Voice Q6.",
      "qadocvoiceq2_documentation": "Documentation score for QADOC Voice Q2.",
      "qadocvoiceq3_time_management": "Time management score for QADOC Voice Q3.",
      "qadocvoiceq4_validation": "Validation score for QADOC Voice Q4.",
      "qadocvoiceq5_resolution": "The resolution for QADOC Voice Q5.",
      "qadocvoiceq6_closing": "The closing score for QADOC Voice Q6.",
      "qadocvoice_q1_score": "The score for QADOC Voice Q1.",
      "qadocvoice_q2_score": "The score for QADOC Voice Q2.",
      "qadocvoice_q3_score": "The score for QADOC Voice Q3.",
      "qadocvoice_q4_score": "The score for QADOC Voice Q4.",
      "qadocvoice_q5_score": "The score for QADOC Voice Q5.",
      "qadocvoice_q6_score": "The score for QADOC Voice Q6."
    }
  },
  "int_aggregate_exclusions_to_workers": {
    "description": "intermediate model that aggregates exclusions to the worker grain\n",
    "columns": {
      "worker_id": "Primary key, unique identifer for the worker\n",
      "num_exclusions_by_workplace": "count of how many workplaces have excluded the worker\n",
      "exclusions_by_workplace": "JSON of exclusions made against the worker\n",
      "num_exclusions_by_worker": "count of how many workplaces the worker has excluded\n",
      "exclusions_by_worker": "JSON of exclusions made by the worker"
    }
  },
  "rpt_weekly_payment_score": {
    "description": "Weekly payment score report at the parent account level, summarizing payment timeliness, overdue risk, and dispute rates for healthcare organizations.",
    "columns": {
      "payment_score_sk": "Surrogate key for the weekly payment score record, generated from week and parent account ID.",
      "date_week": "The week (starting Sunday) for which the payment score and related metrics are calculated.",
      "parent_account_name": "Name of the parent account or organization as recorded in Salesforce.",
      "salesforce_parent_account_id": "Salesforce Account ID for the parent organization, used for joining with other Salesforce data.",
      "wadd": "Weighted average days delinquent (WADD) for paid invoices in the week, indicating average payment timeliness (lower is better).",
      "overdue_percentage": "Proportion of open invoice balances that are past due as of the week, expressed as a decimal (e.g., 0.12 for 12%).",
      "dispute_rate": "Rate of invoice disputes for the week, calculated as the ratio of regenerated to original invoices.",
      "payment_score": "Composite payment score for the week, combining WADD, overdue percentage, and dispute rate. Used to assess payment risk and performance."
    }
  },
  "app_shiftlogs_stg": {
    "description": "DEPRECATED - Use fct_shift_logs for any analyses/column definitions",
    "columns": {
      "id": "Primary key.",
      "created_at": "Time at which the log was created.",
      "shift_id": "ID of the shift that concerns the log.",
      "action": "The action that triggered the log creation.",
      "sub_action": "The subaction associated with the action.",
      "is_excused": "Whether or not the action was excused--normally for worker call offs.",
      "facility_id": "The facility that was affected by the action or conducted the action.",
      "new_rate": "The new rate if the action was related to pay/charge change.",
      "previous_rate": "The old rate if the action was related to a rate change.",
      "rate_change_reason": "The reason for the rate change.",
      "new_time": "The new time if the action was related to a time change.",
      "old_time": "The old time if the action was related to a time change.",
      "time_change_reason": "The reason for the time change.",
      "agent_stage_at_time": "This is the agent status at the point of performing an action"
    }
  },
  "pa_dashboard_worker_booked_daily_by_start_date": {
    "description": "",
    "columns": {}
  },
  "int_invoices_payments_transactions": {
    "description": "Table containing the payments/transaction totals and last payment date fields needed for fct_payments. The payments process was changed on 4/1/24 and payments are now being processed as transactions. We can also see duplicates when joining both payments/transactions to invoices as well as orphaned records from payments/transactions. So this process first looks at invoices against the fct_payments table, if there is no payment record, then it looks at the fct_transctions table. Otherwise, it is null.",
    "columns": {
      "invoice_id": "Unique invoice identifier for the latest invoice based on logging events",
      "invoice_number": "Invoice number displayed on the invoice (i.e. reference number)",
      "customer_id": "Customer ID",
      "sf_account_id": "Salesforce account ID",
      "invoice_status": "Invoice state, one of draft, not_sent, sent, viewed, past_due, pending, paid, voided",
      "has_autopay": "When true, autopay is enabled. Defaults to false",
      "has_chase": "When true, chasing is enabled",
      "has_late_fees": "Whether an invoice has late fees associated to it",
      "is_closed": "When true, an invoice is closed and considered bad debt. No further payments are allowed",
      "is_draft": "When false, the invoice is considered outstanding, or when true, the invoice is a draft",
      "is_paid": "Whether an invoice has been paid in full",
      "currency_code": "3-letter ISO currency_code",
      "app_status": "Metadata app status",
      "sync_source": "Metadata sync source",
      "former_invoices": "Whether the invoice has previous invoices associated to it",
      "invoice_type": "Invoice type can be one of the following:\n\n| status         | description                                                               |\n|----------------|---------------------------------------------------------------------------|\n| original       | The invoice does not have any former invoices associated to it            |\n| regenerated    | The invoice has former invoices associated to it                          |",
      "payment_terms": "Payment terms for the invoice, i.e. 'NET 30'",
      "net_number": "Derived from the payment term, this is the net number associated to the payment terms, if applicable",
      "balance": "Balance owed on the invoice",
      "attempt_count": "Number of payment attempts",
      "subtotal": "Subtotal of the invoice",
      "late_fee_amount": "Portion of the total invoice amount that is late fees",
      "principal_amount": "Portion of the total invoice amount that is the principal",
      "total": "Total amount of the invoice",
      "days_from_date_sent": "Number of days since the invoice date",
      "days_from_due_date": "Number of days since the due date",
      "invoice_date": "Date of the invoice",
      "due_date": "Date payment is due by",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "expected_payment_date": "Expected payment date",
      "p2p_creation_date": "p2p creation date",
      "period_start_date": "Period start date",
      "period_end_date": "Period end date",
      "metadata": "Additional metadata about the invoice",
      "metadata_expected_payment_date": "Expected payment date derived from invoice metadata",
      "payment_source": "Denotes if the data on payments is coming from fct_payments or fct_transactions for auditability and ease of joining",
      "latest_payment_date": "Either the latest payment date or latest transaction date. If null, this invoice has no payment/transaction",
      "total_payment_amount": "The total payment amount across all fct_payments or fct_transaction records. If null, this invoice has no payment/transaction"
    }
  },
  "pa_dashboard_Median_Distribution_of_Highly_Rated_vs_Internal_Criteria_per_HCF": {
    "description": "",
    "columns": {}
  },
  "stg_app__agent_activity_logs": {
    "description": "Staging table containing logs of worker activites on the app",
    "columns": {
      "worker_activity_log_id": "Primary key, unique identifier to the log",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "activity_type": "The type of activity the worker performed on the app",
      "meta": "Any additional metadata about the worker's activity on the app",
      "is_deleted": "If the activity was deleted from the source, then TRUE",
      "created_at": "Timestamp of when the record was created",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "referral_spend": {
    "description": "",
    "columns": {}
  },
  "int_shift_claims": {
    "description": "Table containing application shift claims",
    "columns": {
      "shift_log_id": "primary key, unique indentifer for the shift log record\n",
      "shift_id": "Identifier for the shift associated with the log event",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "workplace_id": "Identifier for the workplace associated with the shift log event",
      "worker_requirement": "The worker requirement for the shift",
      "lead_time": "Lead time associated with the shift claim event before the shift started",
      "pay": "Pay associated with the shift log event",
      "charge": "Charge associated with the shift log event",
      "shift_start_at": "Timestamp of the shift start associated with the shift log event",
      "event_at": "Timestamp of the event associated with the shift log event",
      "next_action": "The next action taken after",
      "next_action_at": "Timestamp of when the next action was created",
      "workplace_name": "Name of the workplace at which the shift was posted",
      "workplace_longitude": "The longitude coordinate of the workplace",
      "workplace_latitude": "The latitude coordinate of the workplace",
      "worker_full_name": "Full name of the worker who claimed the shift",
      "worker_distance_preference": "The distance preference of the worker",
      "worker_longitude": "The longitude at which the worker is residing",
      "worker_latitude": "The latitude at which the worker is residing"
    }
  },
  "app_ziptomsas_stg": {
    "description": "",
    "columns": {}
  },
  "hcp_created_at_cohorts_mod": {
    "description": "",
    "columns": {}
  },
  "zd_techops_metrics": {
    "description": "Table of metrics for the techops team\n",
    "columns": {
      "ID": "Primary key, unique identifier for the zendesk ticket\n",
      "ASSIGNEE NAME": "The name of the zendesk agent assigned to the ticket\n",
      "ASSIGNEE EMAIL": "The email of the zendesk agent assigned to the ticket\n",
      "ticket_created_at_week": "The week the ticket was created\n",
      "Ticket Type L1": "The first level of the ticket type\n",
      "Ticket Type L2": "The second level of the ticket type\n",
      "Ticket Type L3": "The third level of the ticket type\n",
      "CHANNEL": "The channel the ticket was created in\n",
      "avg_reply_time_minutes": "The average time in minutes it took to reply to the ticket\n",
      "avg_first_resolutino_time_minutes": "The average time in minutes it took to resolve the ticket\n",
      "avg_full_resolution_time_minutes": "The average time in minutes it took to fully resolve the ticket\n",
      "avg_total_time_spent_minutes": "The average time in minutes spent on the ticket\n",
      "updated_at": "The time the ticket was last updated"
    }
  },
  "hcps_within_50_miles_sf_accounts": {
    "description": "Number of HCPs that have claimed a shift in the past 30 days within a 50 mile radius of each prospect facility.",
    "columns": {
      "prospect_id": "Salesforce ID for each prospect account",
      "prospect_name": "Salesforce account name",
      "prospect_address": "Billing address from Salesforce account",
      "cna_enrolled_count": "Number of enrolled CNAs within a 50 mile radius",
      "cna_active_count": "Number of active CNAs within a 50 mile radius",
      "rn_enrolled_count": "Number of enrolled RNs within a 50 mile radius",
      "rn_active_count": "Number of active RNs within a 50 mile radius",
      "lvn_enrolled_count": "Number of enrolled LVNs within a 50 mile radius",
      "lvn_active_count": "Number of active LVNs within a 50 mile radius"
    }
  },
  "msa_agentreq_step": {
    "description": "",
    "columns": {}
  },
  "rpt_current_ineligibles": {
    "description": "This model aggregates data related to ineligible and near ineligible accounts, including balances, tagging, and adjustments for reporting purposes.",
    "columns": {
      "ineligibles_sk": "A surrogate key generated for uniquely identifying ineligible records based on snapshot date and Salesforce account ID.",
      "snapshot_date": "The date when the snapshot of open invoices was taken.",
      "salesforce_account_id": "The unique identifier for Salesforce accounts associated with customers.",
      "parent_name": "The name of the parent account associated with the Salesforce account.",
      "name": "The name of the Salesforce account.",
      "ineligible_tagging": "Categorization of accounts based on legal status, payment plans, or insurance coverage.",
      "sum_balance": "The total balance of all invoices associated with the account.",
      "sum_of_ineligible": "The sum of balances for invoices deemed ineligible based on specific criteria such as days overdue and invoice age.",
      "sum_of_near_ineligible": "The sum of balances for invoices considered near ineligible based on days overdue and invoice age.",
      "max_dso_date_sent": "The maximum number of days since the due date that an invoice was sent, indicating delayed payments.",
      "adjusted_ineligible": "An adjusted value for ineligible balances calculated based on thresholds relative to total balance.",
      "adjusted_near_ineligible": "An adjusted value for near-ineligible balances calculated based on thresholds relative to total balance."
    }
  },
  "int_document_logs_id_standardization": {
    "description": "Intermediate model that standardizes the document_id and worker_id into the same columns for the document logs. In the original staging table stg_docs__document_logs, these fields are stored in different columns depending on how the document was processed/verified however, this is not easy/intuitive for analytics use.",
    "columns": {
      "document_log_line_id": "Primary Key - unique identifier to the standardized log record. Some logs act on multiple document_ids/worker_ids at the same time, so we have to expand on those fields, hence the need for a unique identifier",
      "document_log_id": "The identifier to the original document log record. Because we expand some of the rows within the logs, this is no longer the uniquue field.",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "document_id": "Identifier to the worker's documents",
      "performed_by_id": "Identifies who performed the action as denoted by the performed_type. This will indicate where this ID can be joined to (i.e. worker_id etc.)",
      "action": "The action type that was performed (i.e. document_uploaded, document_updated, etc.)",
      "performed_by_type": "The type of user who performed the update (i.e. admin, worker, etc.)",
      "updated_type": "The type of update that was made on the document if the action type was DOCUMENT_UPDATED",
      "notification": "Contents of the notification sent to the worker, if applicable",
      "is_deleted": "Flag indicating whether the record has been marked as deleted",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake",
      "document": "The object containing details about the document. This is NULL for bulk updates",
      "metadata": "If the document was verified by Camber (automated service), this is the details of the verfication"
    }
  },
  "stg_app__shift_times": {
    "description": "staging model for the shift times collection\n",
    "columns": {
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "am_shift_duration": "duration of the am shift in hours\n",
      "am_shift_start_time": "start time of the am shift\n",
      "pm_shift_duration": "duration of the pm shift in hours\n",
      "pm_shift_start_time": "start time of the pm shift\n",
      "noc_shift_duration": "duration of the noc shift in hours\n",
      "noc_shift_start_time": "start time of the noc shift\n",
      "standard_defs": "JSON of the standard definitions\n",
      "extra_defs": "JSON of the extra definitions\n",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake",
      "is_deleted": "whether or not the record has been deleted"
    }
  },
  "first_claimed_verified_or_cancelled": {
    "description": "",
    "columns": {}
  },
  "monthly_hcp_growth_accounting": {
    "description": "",
    "columns": {}
  },
  "monthly_hcf_gross_rev_growth_accounting": {
    "description": "",
    "columns": {}
  },
  "one_touch_resolution_metrics": {
    "description": "Techops report showing metrics for tickets that were resolved in one handling\n",
    "columns": {
      "id": "Primary key, unique identifier for the zendesk ticket metric\n",
      "ticket_id": "The unique identifier for the zendesk ticket\n",
      "url": "The url for the zendesk ticket\n",
      "reply_time_in_minutes": "The time in minutes it took to reply to the ticket\n",
      "reply_time_in_minutes_business": "The time in minutes it took to reply to the ticket during business hours\n",
      "full_resolution_time_in_minutes": "The time in minutes it took to fully resolve the ticket\n",
      "agent_wait_time_in_minutes": "The time in minutes the agent spent waiting for the requester to reply\n",
      "requester_wait_time_in_minutes": "The time in minutes the requester spent waiting for the agent to reply\n",
      "on_hold_time_in_minutes": "The time in minutes the ticket was on hold\n",
      "is_one_touch_resolution_replies": "Whether the ticket was resolved in one handling\n",
      "is_one_touch_resolution_reopens": "Whether the ticket was reopened after being resolved in one handling\n",
      "reply_time_in_seconds": "The time in seconds it took to reply to the ticket\n",
      "group_stations": "The group stations for the ticket\n",
      "assignee_stations": "The assignee stations for the ticket\n",
      "reopens": "The number of times the ticket was reopened\n",
      "replies": "The number of replies to the ticket\n",
      "created_at": "The time the ticket was created\n",
      "updated_at": "The time the ticket was last updated\n",
      "assignee_updated_at": "The time the assignee was last updated\n",
      "requester_updated_at": "The time the requester was last updated\n",
      "status_updated_at": "The time the status was last updated\n",
      "initially_assigned_at": "The time the ticket was first assigned\n",
      "assigned_at": "The time the ticket was assigned\n",
      "solved_at": "The time the ticket was solved\n",
      "latest_comment_added_at": "The time the last comment was added\n",
      "__hevo__ingested_at": "The time the data was loaded into the data warehouse\n",
      "__hevo__loaded_at": "The time the data was loaded into the data warehouse"
    }
  },
  "app_shiftsbyinstate_stg": {
    "description": "",
    "columns": {}
  },
  "monthly_hcf_shift_accounting": {
    "description": "",
    "columns": {}
  },
  "agents_time_to_churn": {
    "description": "",
    "columns": {}
  },
  "int_contacts__latest_distinct": {
    "description": "Intermediate table containing the latest contacts for the customers within Invoiced.com. Contains PII. This data is ingested via Dagster rather than Airbyte. Due to nature of ingestion, this data is only updated 1x a day.",
    "columns": {
      "contact_id": "Unique identifer to the contact",
      "customer_id": "The customer in Invoiced.com that the contact is associated to",
      "contact_name": "Contact name",
      "title": "Contact's title",
      "department": "Contact's department",
      "address": "Contact's address (Address line 1)",
      "city": "Contact's city",
      "state": "Contact's state",
      "postal_code": "Contact's postal code",
      "country": "Contact's country",
      "email_address": "Contact's email address",
      "phone": "Contact's phone number",
      "is_primary": "When true the contact will be copied on any account communications",
      "is_sms_enabled": "When true the contact can be contacted via text message",
      "has_send_new_invoices_enabled": "When true the contact is sent new invoices on behalf of the customer that they are associated to",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the data was ingested in Dasgter"
    }
  },
  "fct_zendesk__wops_escalations_tickets": {
    "description": "Fact model for Wops' Zendesk escalations tickets. These tickets represent escalations from Wops agents to the Wops SMEs.",
    "columns": {
      "ticket_id": "Unique identifier for the Zendesk ticket",
      "requester_id": "Identifier for the user who requested the ticket",
      "assignee_id": "Identifier for the user assigned to the ticket",
      "organization_id": "Identifier for the organization associated with the ticket",
      "group_id": "Identifier for the group associated with the ticket",
      "ticket_form_id": "Identifier for the form used to create the ticket",
      "requester_name": "Name of the user who requested the ticket",
      "requester_email": "Email of the user who requested the ticket",
      "assignee_name": "Name of the user assigned to the ticket",
      "assignee_email": "Email of the user assigned to the ticket",
      "assignee_supervisor": "Supervisor of the user assigned to the ticket",
      "agent_role": "Role of the agent handling the ticket",
      "agent_company": "Company of the agent handling the ticket",
      "line_of_business": "Line of business associated with the ticket",
      "group_name": "Name of the group associated with the ticket",
      "ticket_form_name": "Name of the form used to create the ticket",
      "channel": "Channel through which the ticket was created",
      "status": "Current status of the ticket",
      "priority": "Priority level of the ticket",
      "description": "Description of the ticket",
      "ticket_tags": "Tags associated with the ticket",
      "is_escalated_ticket": "Indicates if the ticket is escalated",
      "escalation_team": "Team handling the escalated ticket",
      "escalation_reason": "Reason for ticket escalation",
      "escalation_review": "Review notes for the escalated ticket",
      "reopens": "Number of times the ticket was reopened",
      "replies": "Number of replies to the ticket",
      "reply_time_in_minutes": "Time taken to reply to the ticket in minutes",
      "first_resolution_time_in_minutes": "Time taken for first resolution in minutes",
      "full_resolution_time_in_minutes": "Total time taken for full resolution in minutes",
      "handle_time": "Total handle time for the ticket",
      "last_touch_handle_time": "Handle time for the last touch on the ticket",
      "created_at": "Timestamp of when the record was created",
      "initially_assigned_at": "The date and time the ticket was first assigned to an agent.",
      "assigned_at": "The date and time the ticket was assigned to an agent.",
      "solved_at": "The date and time the ticket was marked as solved.",
      "updated_at": "timestamp of when the record was last updated",
      "created_at_pst": "Timestamp of when the record was created. Converted to Pacific Standard Time",
      "initially_assigned_at_pst": "The date and time the ticket was first assigned to an agent, converted to Pacific Standard Time.",
      "assigned_at_pst": "The date and time the ticket was assigned to an agent, converted to Pacific Standard Time.",
      "solved_at_pst": "The date and time the ticket was marked as solved, converted to Pacific Standard Time."
    }
  },
  "int_payments__latest_distinct": {
    "description": "Table containing the latest, distinct payments based on Invoiced logger data",
    "columns": {
      "payment_id": "Unique payment identifier for the latest payment based on logging events",
      "customer_id": "Customer ID",
      "ach_sender_id": "ACH PPD ID",
      "reference_number": "Reference number (i.e. check number)",
      "object_type": "Object Type, defaults to 'Payment'",
      "source": "Source of payment",
      "charges": "Collection of charges included for processed payments",
      "gateway": "Indicates if stripe was used as part of the payment",
      "method": "Payment method used",
      "is_voided": "Indicates whether a payment was voided",
      "is_cash_matched": "Indicates whether there is a CashMatch suggestion",
      "applied_to": "An array of payment applications (i.e. how payments are applied)",
      "currency_code": "3-letter ISO currency code",
      "payment_notes": "Internal payment notes",
      "amount": "Payment amount",
      "balance": "Unapplied amount remaining",
      "payment_date": "Payment date",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "_airbyte_meta": "airbyte metadata",
      "metadata": "invoiced metadata",
      "pdf_url": "URL where receipt PDF can be downloaded"
    }
  },
  "stg_360_learning__user_paths": {
    "description": "This staging model provides the raw data about the stats of agent's modules/courses from the \"360 Learning\" source.",
    "columns": {
      "learning_360_user_path_id": "Surrogate key generated using `user_id` and `pathid`.",
      "learning_360_user_id": "Identifier for the user associated with the learning path.",
      "learning_360_path_id": "Identifier for the learning path.",
      "session_id": "Identifier for the session within the path.",
      "author_ids": "List of author IDs associated with the learning path.",
      "instructor_ids": "List of instructor IDs associated with the learning path.",
      "path_name": "Name of the learning path.",
      "session_name": "Name of the session.",
      "source_language": "Source language of the user path session.",
      "default_language": "Default language of the user path session.",
      "stats": "JSON field containing detailed statistics of the user path.",
      "start_date": "Start date of the user path session.",
      "end_date": "End date of the user path session.",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system"
    }
  },
  "marked_interest_hcfs_v1": {
    "description": "",
    "columns": {}
  },
  "facility_level_weekly_shift_expansion": {
    "description": "",
    "columns": {}
  },
  "hcf_activation_cohort_pct_active_monthly": {
    "description": "",
    "columns": {}
  },
  "stg_app__urgent_shifts_ncns": {
    "description": "Staging model for data coming from the application's urgent shifts no call no show table\n",
    "columns": {
      "urgent_shift_ncncs_id": "Primary key, unique indentifier for the urgent shifts ncns events\n",
      "worker_id": "WorkerId associated with the No Show event\n",
      "shift_id": "ShiftId associated with the No Show event\n",
      "facility_name": "Name of the facility where the shift was scheduled\n",
      "notes": "Additional notes or comments regarding the No Show event\n",
      "worker_name": "Full name of the worker who was scheduled for the shift\n",
      "replacement_worker_name": "Name of the worker who replaced the original worker, if applicable\n",
      "shift_type": "Type or category of the shift\n",
      "agent_req": "Agent requirements for the shift\n",
      "timezone": "Timezone in which the shift is scheduled\n",
      "is_ncns": "Boolean flag indicating if this is a No Show event\n",
      "is_deleted": "Boolean flag indicating if the no show record has been deleted\n",
      "hours_between_created_and_updated_at": "Number of hours between when the no show record was created and last updated\n",
      "shift_start_at": "Timestamp indicating when the shift starts\n",
      "created_at": "Timestamp when the record was created\n",
      "updated_at": "Timestamp when the record was last updated\n",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake",
      "reason": "Reason provided for resolving the No Show event"
    }
  },
  "postless_weeks_shifts": {
    "description": "",
    "columns": {}
  },
  "report_open_invoice_snapshots": {
    "description": "Table containing a daily snapshot of open invoices (invoice status of past_due, sent, or viewed) and their relevant dollar value to understand A/R aging",
    "columns": {
      "invoice_snapshot_id": "Unique surrogate id derived from snapshot_date and days_due_bucket",
      "snapshot_date": "Daily snapshot date",
      "days_due_bucket": "Dimension that catagorizes the number of days since the invoice was due into buckets",
      "days_due_bucket_sort": "Value that sorts the days_due_bucket catagorization for reporting",
      "unpaid_balance": "Total value of the unpaid balance for a given snapshot date and days_due_bucket",
      "pct_total_snapshot_date": "Percent of the total unpaid balance based on an snapshot date",
      "num_distinct_customers": "Number of distinct customers"
    }
  },
  "stg_survey_sparrow__responses": {
    "description": "Staging table for the Survey Sparrow responses data\n",
    "columns": {
      "response_id": "The unique identifier for each survey response",
      "tags": "Tags associated with the response",
      "state": "The state of the response (e.g., COMPLETED)",
      "device": "Device information associated with the response",
      "answers": "The answers provided in the response",
      "channel": "The channel through which the survey response was submitted",
      "language": "The language in which the survey was answered",
      "survey_id": "The unique identifier for the survey to which the response belongs",
      "variables": "Variables associated with the response",
      "channel_id": "The channel ID associated with the response",
      "contact_id": "The contact ID of the respondent",
      "start_time": "The timestamp when the survey response started",
      "expressions": "Expressions related to the survey response",
      "nps_channel": "The NPS channel associated with the response",
      "completed_time": "The timestamp when the survey response was completed",
      "nps_channel_id": "The ID of the NPS channel associated with the response",
      "airbyte_extracted_at": "The time at which the data was extracted by Airbyte"
    }
  },
  "stg_worker_ops__wfm_zendesk_tickets_data": {
    "description": "This model creates a view of Zendesk ticket data from the worker_ops data source, renames and selects relevant fields such as ticket ID, assignee details, group information,  and ticket status for further analysis.\n",
    "columns": {
      "ticket_id": "Unique identifier for each Zendesk ticket.",
      "assignee_id": "ID of the agent assigned to the ticket.",
      "requester_id": "ID of the requester for the ticket.",
      "brand_id": "ID of the brand for the ticket.",
      "group_id": "ID of the group to which the ticket is assigned.",
      "group_name": "Name of the group to which the ticket is assigned.",
      "status": "Current status of the ticket (e.g., open, solved).",
      "channel": "The channel from which the ticket was created.",
      "ticket_tags": "Tags associated with the ticket.",
      "wops_ticket_type_a": "Value of custom field for MQR ticket type in MQR form (Internal Field)",
      "product_feature_a": "Product feature related to the ticket",
      "handle_time": "Total time spent handling the ticket, converted from seconds to minutes.\n",
      "reply_time": "Time taken to reply to the ticket.",
      "solved_at": "Timestamp of when the ticket was solved.",
      "assigned_at": "Timestamp of when the ticket was assigned.",
      "initially_assigned_at": "Timestamp of when the ticket was initially assigned.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "solved_at_pst": "Timestamp of when the ticket was solved in PST.",
      "assigned_at_pst": "Timestamp of when the ticket was assigned in PST.",
      "created_at_pst": "Timestamp of when the record was created",
      "updated_at_pst": "timestamp of when the record was last updated"
    }
  },
  "zendesk_ticket_agent__handle_time": {
    "description": "Aggregated handle time for Zendesk tickets, broken down by ticket and agent.  This model joins audit event data with Zendesk user information to provide insight into how much time each agent has spent on each ticket.\n",
    "columns": {
      "ticket_user_id": "the unique ID of ticket_id + user_id",
      "ticket_id": "The ID of the Zendesk ticket.",
      "user_id": "Unique identifier of the Zendesk agent (author of the audit event).",
      "user_name": "Full name of the Zendesk user who handled the ticket.",
      "user_email": "Email of the Zendesk user who handled the ticket.",
      "group_id": "Group ID of the Zendesk agent.",
      "group_name": "Group name of the Zendesk agent.",
      "supervisor": "Supervisor of the Zendesk agent.",
      "handle_time_in_seconds": "Total handle time in seconds spent by the agent on the ticket.",
      "amazon_connect_call_duration_in_seconds": "Amazon Connect call duration in seconds.",
      "amazon_connect_hold_time_in_seconds": "Amazon Connect hold time in seconds.",
      "amazon_connect_talk_time_in_seconds": "Amazon Connect talk time in seconds.",
      "handle_time_in_minutes": "Total handle time in minutes spent by the agent on the ticket.",
      "amazon_connect_call_duration_in_minutes": "Amazon Connect call duration in minutes.",
      "amazon_connect_hold_time_in_minutes": "Amazon Connect hold time in minutes.",
      "amazon_connect_talk_time_in_minutes": "Amazon Connect talk time in minutes.",
      "wops_ticket_type_a": "Value of custom field for WOPS ticket type in WOPS form (Internal Field).",
      "product_help_category": "Value of custom field for product help category in WOPS form.",
      "product_feature_a": "Product feature related to the ticket.",
      "payments_category_b": "Value of custom field for payments category in WOPS form. Represents the category of the payments ticket",
      "escalation_team": "The team the ticket is escalated to",
      "escalation_type": "Decides whether the escalation is within WOPs or external team",
      "ea_ticket_type": "The custom field option which captures the type of EA Ticket chosen.",
      "contact_channel": "The contact channel whehter Web/Voice/Chat/Escalations based on group ID.",
      "created_at": "The time when ticket is created at in local time.",
      "created_at_pst": "The time when ticket is created at in PST time.",
      "solved_at": "The time when ticket is solved at in local time.",
      "solved_at_pst": "The time when ticket is solved at in PST time.",
      "last_agent_update_time": "The time when agent last handled the ticket.",
      "aht_type": "The type of AHT - Web, Voice, Chat, Escalations, Consult"
    }
  },
  "fct_zendesk_tickets": {
    "description": "fact model for zendesk tickets",
    "columns": {
      "ticket_id": "unique identifier for zendesk tickets",
      "requester_id": "unique identifier for zendesk requester",
      "assignee_id": "unique identifier for zendesk assignee",
      "submitter_id": "unique identifier for zendesk submitter",
      "worker_id": "unique identifier for the worker in the application",
      "workplace_user_id": "unique identifier for the workplace user in the application",
      "side_conversation_parent_id": "unique id of the side conversation the ticket was created from. Uses Zendesk's external Id to parse the side conversation id after the string 'ticket' occurence",
      "amazon_connect_contact_ids": "unique identifier for zendesk amazon connect contacts",
      "organization_id": "unique identifier for zendesk organization (workplace)",
      "group_id": "unique identifier for zendesk group",
      "brand_id": "unique identifier for zendesk brand",
      "ticket_form_id": "unique identifier for zendesk ticket form",
      "shift_id": "custom field containing the related shift id for the zendesk ticket",
      "ticket_url": "url for the zendesk ticket",
      "via_channel": "channel through which the ticket was created",
      "recipient": "recipient address of the ticket",
      "ticket_type": "type of the ticket",
      "subject": "subject of the ticket",
      "description": "description of the ticket",
      "status": "status of the ticket",
      "priority": "priority of the ticket",
      "ticket_tags": "tags associated with the ticket in string",
      "is_ultimate_bot": "whether the ticket is handled by the ultimate bot",
      "scenario": "scenario recognized by the ultimate bot",
      "fallback": "fallback type if the ultimate bot has handed off the ticket",
      "is_chat_to_web": "If the ticket is converted to a web ticket after 30 minutes",
      "resolution_type": "Resolution type category for the self served tickets by the bot",
      "resolution": "Resolution for the self served tickets by the bot",
      "custom_fields": "csutom fields associated with the ticket",
      "via_channel_address": "address of the channel through which the ticket was created",
      "via_address": "address of the channel through which the ticket was created",
      "to_address": "address of the recipient of the ticket",
      "via_relation": "relation of the channel through which the ticket was created",
      "satisfaction_rating": "satisfaction rating of the ticket",
      "rating_reason": "reason for the satisfaction rating of the ticket",
      "provided_comment": "comment provided for the satisfaction rating of the ticket",
      "requester_name": "name of the requester",
      "requester_email": "email of the requester",
      "requester_phone": "phone of the requester",
      "requester_user_class": "user class of the requester",
      "is_requester_verified": "whether the requester is verified",
      "has_requester_contacted_again_in_24_hours": "whether the requester has contacted us again in 24 hours",
      "requester_next_contact_created_at": "when the requester's next contact was created",
      "has_reached_out_via_different_form": "whether the requester has reached out via a different form",
      "has_incidents": "whether the ticket has incidents",
      "is_public": "whether the ticket is public",
      "does_allow_channelback": "whether the ticket allows channelback",
      "does_allow_attachments": "whether the ticket allows attachments",
      "is_from_messaging_channel": "whether the ticket is from a messaging channel",
      "reopens": "number of times the ticket has been reopened",
      "replies": "number of replies on the ticket",
      "calendar_agent_wait_time_in_minutes": "wait time for the agent in minutes",
      "calendar_first_resolution_time_in_minutes": "first resolution time in minutes",
      "calendar_full_resolution_time_in_minutes": "full resolution time in minutes",
      "calendar_on_hold_time_in_minutes": "on hold time in minutes",
      "calendar_reply_time_in_seconds": "reply time in seconds",
      "calendar_reply_time_in_minutes": "reply time in minutes",
      "calendar_requester_wait_time_in_minutes": "wait time for the requester in minutes",
      "handle_time": "handle time for the ticket",
      "last_touch_handle_time": "last touch handle time for the ticket",
      "connect_handle_time_total_min": "total handle time of the amazon connect call in minutes",
      "connect_handle_time_last_call_min": "handle time of the last amazon connect call in minutes",
      "created_at": "Timestamp of when the record was created",
      "created_at_pst": "timestamp of when the ticket was created in pst",
      "updated_at": "timestamp of when the record was updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "assigned_at": "timestamp of when the ticket was assigned",
      "initially_assigned_at": "timestamp of when the ticket was initially assigned",
      "assignee_updated_at": "timestamp of when the assignee was updated",
      "requester_updated_at": "timestamp of when the requester was updated",
      "latest_comment_added_at": "timestamp of when the latest comment was added",
      "status_updated_at": "timestamp of when the status was updated",
      "solved_at": "timestamp of when the ticket was solved",
      "solved_at_pst": "timestamp of when the ticket was solved in pst",
      "generated_timestamp": "timestamp of when the record was generated",
      "ticket_type_l1": "First level of the ticket type",
      "ticket_type_l2": "Second level of the ticket type",
      "ticket_type_l3": "Third level of the ticket type",
      "outbound_type": "outbound type of the Outreach ticket, created through the Outreach form to customers",
      "dsat_driver": "driver of the dsat score collected from the outreach",
      "dsat_driver_level_2": "second level of the dsat score collected from the outreach form",
      "insights_score": "insights score of the ticket collected from the outreach form",
      "assignee_name": "name of the assignee",
      "assignee_email": "email of the assignee",
      "ticket_form_name": "name of the ticket form",
      "group_name": "name of the group",
      "brand_name": "name of the brand",
      "organization_name": "name of the organization",
      "preinvoice_dispute_status": "status of the preinvoice dispute"
    }
  },
  "app_agentactivitylogs_stg": {
    "description": "",
    "columns": {}
  },
  "shift_booking_journey": {
    "description": "",
    "columns": {}
  },
  "investor_hcp_created_at_mom_revenue": {
    "description": "",
    "columns": {}
  },
  "int_agent_activity_logs_flattened": {
    "description": "TBD",
    "columns": {
      "agent_activity_log_shift_id": "TBD",
      "agent_activity_logs_id": "TBD",
      "type": "TBD",
      "agent_id": "TBD",
      "slot_date": "TBD",
      "slot": "TBD",
      "shift_id": "TBD",
      "facility_id": "TBD",
      "distance": "TBD",
      "pay": "TBD",
      "viewed_at": "TBD",
      "start_time": "TBD",
      "position": "TBD",
      "created_at": "TBD"
    }
  },
  "report_zendesk__hcf_tickets": {
    "description": "fact model for hcf tickets\n",
    "columns": {
      "ticket_id": "unique identifier for zendesk tickets",
      "requester_id": "unique identifier for zendesk requesters\n",
      "assignee_id": "unique identifier for zendesk assignees\n",
      "organization_id": "unique identifier for zendesk organizations\n",
      "workplace_id": "unique identifier for zendesk organizations to link to app profiles\n",
      "brand_id": "unique identifier for zendesk brands\n",
      "situation_id": "Id of situation this ticket belongs to\n",
      "satisfaction_rating_id": "id of most recent satiscation rating used for this ticket\n",
      "qa_ticket_id": "id of qa ticket evaluating this ticket\n",
      "previous_contact_ticket_id": "id of the most recent ticket by this requester prior to this ticket\n",
      "subject": "subject of the ticket\n",
      "requester_name": "name of the ticket requester\n",
      "requester_email": "email of the ticket requester\n",
      "organization_name": "name of the facility\n",
      "facility_type": "type of the facility\n",
      "assignee_name": "name of the ticket assignee\n",
      "assignee_email": "email of the ticket assignee\n",
      "assignee_supervisor": "supervisor of the ticket assignee\n",
      "assignee_agent_role": "role of the ticket assignee agent in their team/roster\n",
      "group_name": "name of the zendesk group the ticket is assigned to\n",
      "ticket_form_name": "name of the zendesk ticket form the ticket was created with\n",
      "channel": "channel the ticket was created from\n",
      "status": "status of the ticket\n",
      "priority": "priority of the ticket\n",
      "recipient": "address that received of the ticket\n",
      "description": "description of the ticket\n",
      "satistfaction_score": "satistfaction_score of the ticket\n",
      "cf_poor_facility_experience": "custom field indicating if the ticket is around a poor facility experience\n",
      "cf_requester_is_registered_facility_user": "custom field indicating if the requester is a registered facility user\n",
      "cf_requester_criteria": "custom field indicating the requester's criteria\n",
      "ticket_type": "type of the ticket\n",
      "ticket_type_l1": "type of the ticket based on ticket type custom field level 1\n",
      "ticket_type_l2": "type of the ticket based on ticket type custom field level 2\n",
      "ticket_type_l3": "type of the ticket based on ticket type custom field level 3\n",
      "ticket_tags": "tags on the ticket\n",
      "custom_fields": "Custom Field values of the ticket\n",
      "ticket_status": "Status of reviewed ticket\n",
      "has_reqcriteria_notmet_user_role": "does the ticket have the tag indicating reqcriteria not met due to user role\n",
      "has_reqcriteria_notmet_unregistered_number_email": "does the ticket have the tag indicating reqcriteria not met due to unregistered number email\n",
      "has_reqcriteria_notmet_bothcriteria": "does the ticket have the tag indicating reqcriteria not met due to both criteria\n",
      "has_reqcriteria_met_cant_selfserve": "does the ticket have the tag indicating reqcriteria not met due to cannot selfserve\n",
      "reopens": "number of times the ticket was reopened\n",
      "replies": "number of replies on the ticket\n",
      "reply_time_in_minutes": "time taken to reply to the ticket in minutes\n",
      "first_resolution_time_in_minutes": "time taken to resolve the ticket for the first time in minutes\n",
      "full_resolution_time_in_minutes": "time taken to resolve the ticket in minutes\n",
      "handle_time": "time taken to handle the ticket in seconds\n",
      "last_update_time": "time spent on last update in seconds\n",
      "count_shifts_30_days_prior": "# of shifts occuring 30 days prior to this ticket at this facility\n",
      "count_shifts_30_days_after": "# of shifts occuring 30 days after this ticket at this facility\n",
      "is_suspended_prior": "was the hcf suspended at any point 30 days prior to the ticket\n",
      "is_suspended_after": "was the hcf suspended at any point 30 days after to the ticket\n",
      "final_qa_score": "qa score of this ticket if evaluated\n",
      "created_at": "\"Timestamp of when the record was created\"",
      "initially_assigned_at": "timestamp of when the ticket was initially assigned\n",
      "assigned_at": "timestamp of when the ticket was assigned\n",
      "solved_at": "timestamp of when the ticket was solved\n",
      "generated_timestamp": "timestamp of when the ticket was generated\n",
      "updated_at": "\"timestamp of when the record was last updated\"",
      "previous_contact_created_at": "timestamp of previous ticket by requester"
    }
  },
  "stg_app__transfer_logs": {
    "description": "Staging model for data coming from the application's transferlogs collection from the payments service database\n",
    "columns": {
      "id": "Primary key, unique identifier for the reversal record\n",
      "shift_id": "Shift ID",
      "bonus_id": "Bonus ID",
      "agent_id": "Agent ID",
      "amount_in_cents": "Amount in cents",
      "amount_in_dollars": "Amount in dollars",
      "idempotency_key": "Idempotency key",
      "full_amount_in_cents": "Full shift payment amount in cents",
      "full_amount_in_dollars": "Full shift payment amount in dollars",
      "gateway_transfer_skipped": "Flag to indicate if the Stripe transfer was intentionally skipped (e.g. for testing)",
      "payment_type": "Payment type - either bonus or shift payment",
      "payment_type_id": "Payment type ID - either bonus_id or shift_id",
      "reversed": "Flag to indicate if the payment was reversed",
      "source_event": "Source event - event caused the transfer",
      "status": "Completion status of the transfer",
      "transfer_amount_in_cents": "Amount transferred in cents (from Stripe response)",
      "transfer_amount_in_dollars": "Amount transferred in dollars (from Stripe response)",
      "transfer_amount_reversed": "Amount reversed in cents (from Stripe response)",
      "transfer_reverse_amount_in_dollars": "Amount reversed in dollars (from Stripe response)",
      "transfer_created": "Transfer creation date",
      "balance_transaction": "Stripe balance transaction ID",
      "transfer_destination": "Stripe transfer destination",
      "transfer_payment": "Stripe transfer payment ID",
      "transfer_id": "Stripe transfer ID",
      "transfer_agent_id": "Agent ID (from Stripe metadata)",
      "transfer_shift_id": "Shift ID (from Stripe metadata)",
      "transfer_reversed": "Flag to indicate if the transfer was reversed (from Stripe response)",
      "source_type": "Transfer source type",
      "transfer_error": "Stripe transfer error object",
      "transfer_error_message": "Stripe transfer error message",
      "created_at": "Record creation date",
      "updated_at": "Record update date",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "msa_mom_by_activation": {
    "description": "",
    "columns": {}
  },
  "monthly_hcp_growth_accounting_by_msa": {
    "description": "",
    "columns": {}
  },
  "stg_shift_reviews__workplace_user_reviews": {
    "description": "Staging table containing workplace reviews from workplace user about workers. This data comes from the shift review service from the app.",
    "columns": {
      "workplace_user_review_id": "Primary key and unique identifier to the worker review by the workplace",
      "workplace_user_id": "CBH's unique indentifer for a workplace's user (i.e. a facility user or HCF user, this is typically a person that works for the workplace and acting on behalf of the workplace).",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "shift_id": "Unique identifier for the shift",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "qualities": "Additional worker qualities selected by the workplace user as part of the review",
      "additional_feedback": "Additional feedback provided by the workplace user as part of the review",
      "is_worker_dnr": "If the worker is marked as Do Not Return (DNR) at the workplace, then TRUE",
      "rating": "Numerical rating for the worker on a scale from 1-5 with 5 being the best",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "deleted_at": "Timestamp of when the record was deleted in the source system.",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "stg_pricing_parameters__market_params": {
    "description": "This model unpacks the raw algo marketparams data",
    "columns": {
      "config_id": "Unique id for the market-level pricing config",
      "pricing_msa": "Name of the metro-statistical area of this pricing market",
      "agent_req": "Qualification title of an HCP",
      "description": "Comments added by pricing admin when changing the market params",
      "opt_out_from_automated_policies": "When enabled, this market will be skipped by GTM scheduler even if it qualifies",
      "floor": "Minimum allowed pay value",
      "market_base": "Number of weekly shifts to subsidize",
      "market_fill": "Percentage of weekly shifts to subsidize",
      "sd": "Pay spread in dollars between min-fill and non min-fill facility-weeks",
      "weekday_base": "Average pay on weekday shifts",
      "weekend_base": "Average pay on weekend shifts",
      "margin_cap": "Minimum margin taken on non-subsidized shifts",
      "min_fill_margin_cap": "Minimum margin taken on min-fill subsidized shifts",
      "rolling_filled_ratio": "Multiple of the base pay to apply to all future shifts at currently min-fill facilities",
      "rolling_filled_margin": "Minimum margin taken on facilities that are currently min-fill subsidized shifts",
      "late_cancel_rate_multiplier": "Multiple of the base pay applied to late cancelled shifts",
      "late_cancel_margin_cap": "Minimum margin taken on late cancelled shifts",
      "target_irr": "Discount rate to apply to the pay <> charge ROI",
      "holiday_take": "Percentage take rate on the holiday charge boost",
      "late_cancel_lead_time_threshold1": "Lead time in minutes at which late cancel pricing begins to apply",
      "late_cancel_lead_time_threshold2": "Lead time in minutes at which late cancel pricing begins levels off",
      "ncns_rate_multiplier": "Multiple of the base pay applied to NCNS shifts",
      "tags": "Set of tags for the market such as \"GTM\"",
      "created_by": "The person who created this parameters version",
      "updated_by": "The person who last updated this parameters version"
    }
  },
  "rpt_subsidy_analysis_v2": {
    "description": "Subsidized shifts report detailing all shifts and subsidies applied on those shifts\n",
    "columns": {
      "shift_id": "Unique identifier for the shift",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "start_day": "The date time representing the start of the UTC day on which the shift started",
      "pay": "The hourly pay for the shift",
      "charge": "The hourly charge for the shift",
      "is_gtm": "Whether this shift was in a market to which GTM subsidies applied",
      "is_finding_fill": "Whether this shift was at a facility which is subsidized with FindingFill",
      "is_first_impressions_matter": "Whether this shift was at a facility which is subsidized with First Impressions Matter",
      "current_base_pay": "Hourly base pay for the shift without any clamps or subsidies applied",
      "total_base_pay": "The total base pay for the shift without any clamps or subsidies applied",
      "net_charge": "The total charge for the shift",
      "net_revenue": "The total net revenue for the shift",
      "shift_length": "The duration of the shift in hours",
      "current_margin_cap": "The value of the margin_cap parameter at the time at which the shift was priced",
      "pay_at_non_subsidized_margin_cap": "The base pay the shift would get if no subsidies were applied to marginCap",
      "clamped_base_pay": "The base pay for the shift after the marginCap has been applied",
      "total_clamped_base_pay": "The total base pay for the shift after the marginCap has been applied",
      "base_pay_subsidy": "The total subsidy we applied to this shift because of a marginCap lower than our default 0.2",
      "min_fill_count_subsidy": "The amount of subsidy applied to this shift because the facility has not filled the minimum number of shifts on that week",
      "min_fill_percentage_subsidy": "The amount of subsidy applied to this shift because the facility has not filled the minimum percentage of shifts on that week",
      "non_gtm_base_pay": "For GTM shifts, this is an approximation of the base pay if the market was not on GTM subsidies",
      "non_gtm_pay_at_margin_cap": "For GTM shifts, this is an approximation of the pay at margin cap if the market was not on GTM subsidies",
      "non_gtm_clamped_base": "For GTM shifts, this is an approximation of clamped base rule output if the market was not on GTM subsidies",
      "gtm_subsidy_approximation": "For GTM shifts, this is an approximation how much of the pay is coming from GTM subsidies",
      "gtm_subsidy": "For GTM shifts, this is the amount of subsidy we applied, only valid since we launched automated policies in CSS",
      "finding_fill_base_subsidy": "For Finding Fill shifts, this is an approximation how much of the base pay is coming from FindingFill",
      "first_impressions_matter_base_subsidy": "For First Impressions Matter shifts, this is an approximation how much of the base pay is coming from FIM",
      "ncns_subsidy": "For NCNS shifts, how much of the final pay is is coming from NCNS subsidies",
      "late_cancellation_subsidy": "For late cancelled shifts, how much of the final pay is is coming from late cancellation subsidies",
      "unscheduled_marketplace_v2_subsidy": "For Unscheduled Marketplace V2 (aka LC rewrite) shifts, how much the pay is boosted by",
      "late_posting_unscheduled_marketplace_v2_subsidy": "For Late Posted Unscheduled Marketplace V2 (aka late-posted variant of LC rewrite) shifts, how much the pay is boosted by",
      "holiday_subsidy": "For holiday shifts, how much of the final pay is is coming from holiday boosts",
      "worker_minimum_pay_subsidy": "For shifts worked by workers with a minimum pay rate, how much additional pay we are adding to meet their rates",
      "late_posting_subsidy": "For shifts which are late posted, how much additional pay we are adding as part of the Late Posting experiment",
      "late_cancellation_pricing_swing_subsidy": "For shifts which are boosted by the late cancellation pricing swing experiment, the amount they were boosted by",
      "fixed_pay_subsidy": "For shifts that had their rates manually adjusted, the amount they were subsidized by from our normal 0.2 margin",
      "fixed_rates_workplace_subsidy": "For shifts at workplaces with fixed pay rates configured, the amount they were subsidized by from our normal 0.2 margin",
      "rare_event_subsidy": "For rare event shifts, the net pay added by the rare events intervention",
      "shift_offer_id": "The shift offer id that was claimed for this shift",
      "shift_offer_claimed_at": "The date time the shift offer was claimed at",
      "market_pricing_parameters_id": "The id of the market pricing parameters that were in effect at the time the shift offer was claimed. Use this to join with the fct_market_pricing_parameters table on `config_id` to get more details about the market pricing parameters",
      "workplace_pricing_parameters_id": "The id of the workplace pricing parameters that were in effect at the time the shift offer was claimed. Use this to join with the fct_workplace_pricing_parameters table on `override_id` to get more details about the workplace pricing parameters",
      "shift_updated_at": "Timestamp of the last update to the shift. This is useful to know if the shift was updated after it was claimed"
    }
  },
  "credit_limit_too_high": {
    "description": "",
    "columns": {}
  },
  "stg_amazon_connect__queues": {
    "description": "Staging model for Amazon Connect queues data.",
    "columns": {
      "queue_name": "Name of the queue.",
      "queue_arn": "Amazon Resource Name (ARN) of the queue.",
      "queue_id": "Unique identifier for the queue.",
      "hours_of_operation_id": "Identifier for the hours of operation associated with the queue.",
      "status": "Status of the queue (e.g., ENABLED or DISABLED).",
      "last_modified_time": "Timestamp of the last modification to the queue.",
      "last_modified_region": "AWS region where the queue was last modified.",
      "outbound_caller_id_name": "Name of the outbound caller ID configuration for the queue.",
      "outbound_caller_id_number_id": "Identifier for the outbound caller ID number configuration.",
      "outbound_flow_id": "Identifier for the outbound flow configuration.",
      "queue_description": "Description of the queue."
    }
  },
  "period_start_invoice_payback_in_weeks": {
    "description": "",
    "columns": {}
  },
  "postless_months": {
    "description": "Shifts aggregated to the monthly workplace grain, calcuates the number of months between verified shifts\n",
    "columns": {
      "facility_month_id": "Surrogate key that combines the shift month and workplace ID\n",
      "facility_id": "Legacy name, unique ID for the workplace\n",
      "start_month": "Month in which the workplace had at least one verified shift\n",
      "net_rev": "Total net revenue from the workplace for the month\n",
      "gross_rev": "Total gross revenue from the workplace for the month\n",
      "months_in_between": "The number of months since the last verified shift"
    }
  },
  "investor_hcf_created_at_mom_revenue": {
    "description": "",
    "columns": {}
  },
  "weekly_global_booking_journey": {
    "description": "",
    "columns": {}
  },
  "stg_app__placement_candidate_logs": {
    "description": "Staging model for data coming from the placement candidate logs table, which tracks changes made to placement candidates\n",
    "columns": {
      "placement_candidate_log_id": "Primary key, unique identifier for the placement candidate log entry\n",
      "placement_candidate_id": "Reference to the placement candidate that was modified\n",
      "updated_fields": "Array of field changes, containing key (field name), previousValue, and newValue\n",
      "created_by_user_id": "ID of the user who made the changes to the placement candidate\n",
      "created_by_email": "Email of the user who made the changes to the placement candidate\n",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "fasp_dashboard_worker_action_count_stg": {
    "description": "This contains information on weekly worker action count in a facility.",
    "columns": {
      "created_week": "date of last day of the week when the action was created.",
      "facility_id": "facility ID of the shift owner",
      "worker_name": "name of the worker who performed the action",
      "worker_id": "ID of the worker who performed the action",
      "action_count": "all the log count of a worker action in a facility for a week",
      "is_highly_rated": "is the worker favorite in the facility where the action is performed",
      "msa": "the msa of the facility",
      "state": "the state of the facility",
      "city": "city of the facility"
    }
  },
  "app_shifts_stg": {
    "description": "DEPRECATED - Use fct_shifts for any analyses/column definitions",
    "columns": {}
  },
  "invoice_payback_in_weeks": {
    "description": "",
    "columns": {}
  },
  "stg_app__agent_extra_worked_time_requests": {
    "description": "Worker extra worked time requests\n",
    "columns": {
      "agent_extra_worked_time_request_id": "primary key for the request\n",
      "type": "Type of request (such as Break)",
      "status": "Status of request (such as pending, approved etc)",
      "worker_id": "Id of the worker for the request",
      "workplace_id": "Id of of the workplace",
      "shift_id": "Id of the shift",
      "billed_to": "Ewtr charges are billed to whom",
      "reason": "Reason for request",
      "authorizing_employee": "Authorizing Employee",
      "start_time": "start of the request type",
      "end_time": "end of the request type",
      "status_updated_by": "ewtr status updated by",
      "status_updated_by_id": "Id of the member who updated the ewtr status",
      "status_update_reason": "ewtr status update reason",
      "updated_at": "Timestamp of when the record was updated",
      "created_at": "Timestamp of when the record was created",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "monthly_hcf_growth_accounting_by_facility": {
    "description": "Monthly workplace growth accounting model broken out by workplace\n",
    "columns": {
      "facility_month_id": "Surrogate key that combines the shift month and workplace ID\n",
      "facility_id": "Surrogate key that combines the shift month and workplace ID\n",
      "msa": "Metropolitan statistical area (MSA) for the workplace. MSA is a geographical region with a relatively high population density at its core and close economic ties throughout the region.\n",
      "facility_type": "type of the facility\n",
      "start_month": "Month in which the workplace had at least one verified shift\n",
      "new_hcfs": "1 if the start month is also the first month the workplace has a verified shift, 0 otherwise\n",
      "resurrected_hcfs": "1 if the workplace is resurrected in the start month, 0 otherwise\n",
      "retained_hcfs": "1 if the workplace is retained in the start month, 0 otherwise\n",
      "churned_hcfs": "1 if the workplace is does not have a verified shift in the start month, but has one in the previous month, 0 otherwise\n",
      "new_revenue": "Net revenue from the workplace if the workplace is new\n",
      "resurrected_revenue": "Net revenue from the workplace if the workplace is resurrected\n",
      "churned_revenue": "Net revenue from the workplace for the previous month, if the workplace has churned\n",
      "expansion_revenue": "The amount that net revenue has increased if the workplace was retained.\n",
      "contraction_revenue": "The amount that net revenue has decreased if the workplace was retained.\n",
      "retained_revenue": "The lesser of this month's net revenue and last month's net revenue from the workplace, if the workplace was retained\n",
      "present_time_period_rev": "Net revenue from the workplace for the current month\n",
      "previous_time_period_rev": "Net revenue from the workpalce for the previous month\n",
      "rev_growth": "Change in net revenue from the workplace from the previous month\n",
      "growth_rate": "Percent increase in net revenue from the workpalce from the previous month\n",
      "gross_retention": "Percent of previous month's net revenue that has been retained in the current month\n",
      "quick_ratio": "Ratio of positive revenue changes over negative revenue changes",
      "net_rev_churn": "Percent decrease in net revenue from the workpalce from the previous month"
    }
  },
  "hcf_activation_cohort_monthly_rev": {
    "description": "",
    "columns": {}
  },
  "int_aggregate_ratings_to_workers": {
    "description": "intermediate model that aggregates ratings to the worker grain\n",
    "columns": {
      "worker_id": "Primary key, unique identifer for the worker\n",
      "num_ratings_for_workplaces": "the number of ratings the worker has given to workplaces\n",
      "avg_workplace_rating": "the average rating the worker has givent to workplaces\n",
      "ratings_for_workplace": "JSON of ratings given by the worker for workplaces\n",
      "num_ratings_for_worker": "the number of ratings given to the worker by workplaces\n",
      "avg_worker_rating": "the average rating given to the worker by workplaces\n",
      "ratings_for_worker": "JSON of ratings given to the worker by workplaces"
    }
  },
  "ltc_weekly_net_facility_adds_verified_only": {
    "description": "Weekly summary of facilities added, churned, retained, and resurrected week-over-week, as well as churned and resurrected using a rolling 30 day definition and limited to verified shifts only\n",
    "columns": {
      "start_week": "week based on shift start date",
      "new_hcfs": "number of HCFs whose first ever shift was scheduled during said week",
      "rolling_30_resurrected_hcfs": "number of HCFs for whom 30 or more days elapsed since their last shift during said week",
      "rolling_30_churned_hcfs": "number of HCFs for whom 30 or more days elapsed since their last shift during said week",
      "weekly_resurrected_hcfs": "number of HCFs who scheduled a shift during the week after not have a shift the prior week",
      "weekly_churned_hcfs": "number of HCFs who did not schedule a shift for the second week in a row",
      "weekly_retained_hcfs": "number of HCFs who scheduled a shift for this week after having a shift the prior week"
    }
  },
  "yearly_churn_by_workplace": {
    "description": "Table that reports on workplace churn at the yearly workplace grain. Churn is defined as the workplace having had at least one shift posted (based on the shift_start_at) in the previous year and having none posted in the current year. Deleted shifts are excluded from the shifts used to calculate churn.\n",
    "columns": {
      "yearly_workplace_id": "Surrogate that is a combination of the workplace id and year\n",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "date_year": "The calender year\n",
      "msa": "MSA of the workplace\n",
      "type": "The type of workplace\n",
      "csa": "CSA of the workplace\n",
      "state": "State where the workplace is located\n",
      "salesforce_id": "Salesforce account ID for the workplace\n",
      "salesforce_parent_id": "Salesforce account ID of the workplace's parent\n",
      "num_shifts": "The number of shifts for the workpalce with start dates in the year\n",
      "cohort": "The year that the workplace first posted a shift\n",
      "is_first_shift_year": "If the date_year is also the year that the workplace first posted a shift\n",
      "initial_churn": "1 if the workplace is churned / churning for the first time, 0 otherwise\n",
      "reactivation_churn": "1 if the workplace is churned / churning for the second time or greater, 0 otherwise\n",
      "is_activate_never_churned": "1 if the workplace posted at least one shift in the year and has never churned previously, 0 otherwise\n",
      "is_activate_reactivated": "1 if the workplace posted at least one shift in the year but has churned in a previous year, 0 otherwise"
    }
  },
  "stg_zendesk_wops__ticket_fields": {
    "description": "Staging model for Zendesk ticket fields data.",
    "columns": {
      "field_id": "Ticket field ID, automatically assigned when the field is created.",
      "sub_type_id": "For system ticket fields of type \"priority\" and \"status\".",
      "field_name": "The name of the field, extracted from the raw_title.",
      "field_key": "The key used to identify the field.",
      "field_tag": "For \"checkbox\" fields only. A tag added to tickets when the checkbox field is selected.",
      "field_url": "The URL for this resource.",
      "field_type": "System or custom field type.",
      "field_title": "The title of the field.",
      "field_regexp_for_validation": "Regular expression for validating field input.",
      "field_position": "The position of the field in the ticket form.",
      "is_required": "Indicates if the field is required.",
      "raw_title": "The raw title of the field.",
      "description": "The description of the field.",
      "custom_statuses": "Custom statuses associated with the field.",
      "raw_description": "The raw description of the field.",
      "title_in_portal": "The title of the field as displayed in the portal.",
      "agent_description": "The description of the field for agents.",
      "raw_title_in_portal": "The raw title of the field as displayed in the portal.",
      "is_active": "Indicates if the field is active.",
      "is_removable": "Indicates if the field can be removed.",
      "is_visible_in_portal": "Indicates if the field is visible in the portal.",
      "is_required_in_portal": "Indicates if the field is required in the portal.",
      "is_editable_in_portal": "Indicates if the field is editable in the portal.",
      "is_collapsed_for_agents": "Indicates if the field is collapsed for agents.",
      "custom_field_options": "Options for custom fields.",
      "system_field_options": "Options for system fields.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake"
    }
  },
  "app_pbj_report_stg": {
    "description": "",
    "columns": {}
  },
  "bls_2020_wage_data": {
    "description": "",
    "columns": {}
  },
  "fct_survey_sparrow_question_responses": {
    "description": "Fact table combining Survey Sparrow responses with survey, contact, and question details.\n",
    "columns": {
      "survey_response_id": "A surrogate key generated to uniquely identify each row in the fact table",
      "response_id": "The unique identifier for each survey response",
      "survey_id": "The unique identifier for the survey associated with the response",
      "question_id": "The unique identifier for the question associated with the responses",
      "contact_id": "The unique identifier for the contact who submitted the survey response",
      "survey_question_text": "The text of the survey question associated with the response",
      "tag_id": "The unique identifier for the tag associated with the survey response",
      "tag_name": "The name of the tag associated with the survey response",
      "zd_ticket_id": "Zendesk Ticket ID (if available) extracted from the response",
      "zd_ticet_type": "Zendesk Ticket Type (if available) extracted from the response",
      "survey_name": "The name of the survey associated with the response",
      "contact_email": "The email address of the contact who submitted the survey response",
      "contact_name": "The full name of the contact who submitted the survey response",
      "question_text": "The text of the question from the survey",
      "question_type": "The type of the question from the survey",
      "survey_answer_value": "The value of the answer provided in response to the survey question",
      "start_time": "The timestamp when the survey response was started",
      "completed_time": "The timestamp when the survey response was completed",
      "created_at": "The timestamp when the question was created",
      "updated_at": "The timestamp when the question was last updated",
      "device_name": "The name of the device used to submit the survey response",
      "device_type": "The type of the device used to submit the survey response",
      "channel_name": "The name of the channel through which the survey response was submitted",
      "channel_status": "The status of the channel through which the survey was submitted",
      "nps_channel_name": "The name of the NPS channel associated with the survey response",
      "nps_channel_status": "The status of the NPS channel associated with the survey response"
    }
  },
  "first_time_booked_month_fin": {
    "description": "For a given month, this table details the cumulative shifts that first time HCPs have booked for that month for each day until the end of the month. Each row says something like, by September 21st, 200 new HCPs had signed up for shifts starting in October.",
    "columns": {
      "first_month": "The month of the shift start.",
      "first_created_day": "The day up to which we have counted first active HCPs.",
      "days_to_month_start": "Days until the start of the month in which the shift is starting. Negative if we are in the month when the HCP books their shift.",
      "cum_first": "Cumulative number of shifts until that day."
    }
  },
  "fct_latest_low_fill_high_take_automated_policy_runs": {
    "description": "This model stores the data for latest low fill high take policy runs",
    "columns": {
      "automated_policy_run_id": "The id of the stored automated policy run",
      "policy_name": "The name of the policy being executed by this run (in this case LowFillHighTake).",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "qualification": "Qualification title of an HCP",
      "segment": "Name of the metro-statistical area of this pricing market",
      "run_at": "The time at which this automated policy run was executed",
      "run_at_day": "The day on which this automated policy run was executed",
      "statistics_last_activation_at": "When was this workplace market last activated. An activation is the first facility shift's start or the first shift's start after a period of inactivity greater than 1 month.",
      "statistics_shifts_started": "The number of shifts started in the past week.",
      "statistics_filled_shifts_started": "The number of shifts filled in the past week.",
      "statistics_total_potential_charge": "The total potential charge for shifts started during the past week",
      "statistics_total_potential_revenue": "The total potential revenue for shifts started during the past week",
      "statistics_booked_shifts": "The number of shifts booked at the facility in the past week",
      "statistics_open_shifts": "The number of open shifts available at the facility in the past week",
      "statistics_total_booked_charge": "The total charge for shifts booked during the past week",
      "statistics_total_booked_revenue": "The total revenue for shifts booked during the past week",
      "output_workplace_override_id": "The id of the stored output workplace override version. If null, the result from the run wasn't stored",
      "phase": "The current phase of the run",
      "initial_adjustment_min_fill_margin_cap": "The initial min fill margin cap adjustment",
      "initial_adjustment_market_base": "The initial market base adjustment",
      "initial_adjustment_weekday_base": "The initial weekday base adjustment",
      "initial_adjustment_weekend_base": "The initial weekend base adjustment",
      "fill_rate": "The fill rate considered during this low fill high take policy run",
      "book_rate": "The book rate considered during this low fill high take policy run",
      "booked_take_rate": "The booked take rate considered during this low fill high take policy run",
      "market_book_rate": "The market level book rate considered during this low fill high take policy run",
      "target_book_rate_difference": "The difference between market level book rate and the workplace book rate. During phase weekly adjustment, we perform interventions based on this difference",
      "reason": "The reason based on which the run was made (LOW_FILL_HIGH_TAKE, RECENTLY_ACTIVATED, WEEKLY_ADJUSTMENT)",
      "market_min_fill_margin_cap": "The market level min fill margin cap at the time of the run",
      "market_level_market_base": "The market level market base at the time of the run",
      "market_weekday_base": "The market level weekday base at the time of the run",
      "market_weekend_base": "The market level weekend base at the time of the run",
      "has_workplace_overrides": "Whether the given workplace market had an workplace override at the time of the run",
      "workplace_min_fill_margin_cap": "The workplace level min fill margin cap at the time of the run",
      "workplace_market_base": "The workplace level market base at the time of the run",
      "workplace_weekday_base": "The workplace level weekday base at the time of the run",
      "workplace_weekend_base": "The workplace level weekend base at the time of the run",
      "current_min_fill_margin_cap": "The current min fill margin cap at the time of the run",
      "current_market_base": "The current market base at the time of the run",
      "current_weekday_base": "The current weekday base at the time of the run",
      "current_weekend_base": "The current weekend base at the time of the run",
      "has_output_workplace_overrides": "Whether this automated policy run had its result stored in the database",
      "output_min_fill_margin_cap": "The output min fill margin cap after the run",
      "output_market_base": "The output market base after the run",
      "output_weekday_base": "The output weekday base after the run",
      "output_weekend_base": "The output weekend base after the run",
      "average_fill_rate_3_weeks": "The average fill rate computed over the last 3 weeks"
    }
  },
  "fct_zendesk__ticket_events": {
    "description": "Fact table for Zendesk ticket events. This model outlines a timeline of status, assignee and requester changes in a Zendesk ticket.",
    "columns": {
      "event_id": "A unique ID for the ticket event.",
      "ticket_id": "A unique ID for the Zendesk ticket.",
      "ticket_audit_id": "A unique ID for the ticket audit. An audit is a collection of events",
      "event_author_id": "A unique ID of the agent who performed/or who is related to the event.",
      "field_id": "A unique ID for the ticket field that was changed.",
      "requester_id": "A unique ID for the user who requested the ticket.",
      "assignee_id": "A unique ID for the agent who was assigned to the ticket",
      "assignee_name": "The name of the agent assigned to the ticket at the time of the event.",
      "assignee_email": "The email address of the agent who was assigned to the ticket when it was closed.",
      "requester_name": "The name of the user who requested the ticket.",
      "requester_email": "The email address of the user who requested the ticket.",
      "field_name": "The name of the ticket field that was changed.",
      "event_type": "The type of event that occurred, such as a status change or comment.",
      "new_value": "The new value of the ticket field that was changed. An empty value indicates that the field was cleared.",
      "previous_value": "The previous value of the ticket field before it was changed. An empty value indicates that the field didn't have a value before the change.",
      "event_source_title": "The title of the source of the event.",
      "event_source_channel": "The channel source of the event.",
      "is_reopened": "A boolean value that indicates whether the ticket was reopened after it was solved.",
      "is_unassigned": "A boolean value that indicates whether the ticket was unassigned.",
      "comment_body": "The full text of any comments added to the ticket. Comments are either public replies sent to customers or internal notes added to the ticket",
      "client": "Metadata about the web client (usually a browser) associated with the ticket.",
      "client_location": "The location of the web client associated with the ticket.",
      "assignee_role": "The role or job title of the agent assigned to the ticket.",
      "assignee_supervisor": "The name of the agent's direct supervisor.",
      "agent_company": "The company that employs the agent assigned to the ticket.",
      "assignee_line_of_business": "The line of business that the agent assigned to the ticket supports.",
      "ticket_form_name": "The name of the support ticket form used to create the ticket.",
      "group_name": "The name of the group within the support organization that the ticket is assigned to.",
      "organization_name": "The name of the support organization handling the ticket.",
      "priority": "The priority level of the ticket.",
      "via_channel_address": "The email, chat, or other channel address used to communicate with the requester.",
      "created_at": "Timestamp of when the record was created",
      "status_duration": "The number of minutes the ticket spent in a given status before it was changed.",
      "handle_time": "The number of minutes it took the agent to handle the ticket. Handle time is the time spent on the ticket when it's in open status."
    }
  },
  "msa_step_graphs": {
    "description": "",
    "columns": {}
  },
  "past_shifts_per_hcps": {
    "description": "",
    "columns": {}
  },
  "report_zendesk__svqa_tickets": {
    "description": "This model contains information about Zendesk SVQA tickets.",
    "columns": {
      "ticket_id": "unique identifier for zendesk tickets",
      "subject": "Subject of the ticket",
      "requester_id": "Unique identifier for Zendesk requester",
      "assignee_id": "Unique identifier for Zendesk assignee",
      "organization_id": "Unique identifier for Zendesk organization (workplace)",
      "brand_id": "Unique identifier for Zendesk brand",
      "requester_name": "Name of the requester",
      "requester_email": "Email of the requester",
      "assignee_name": "Name of the assignee",
      "assignee_email": "Email of the assignee",
      "group_name": "Name of the group",
      "ticket_form_name": "Name of the ticket form",
      "via_channel": "Channel through which the ticket was created",
      "priority": "Priority of the ticket",
      "recipient": "Recipient address of the ticket",
      "ticket_type": "Type of the ticket",
      "description": "Description of the ticket",
      "status": "Status of the ticket",
      "ticket_type_l1": "First level of the ticket type",
      "ticket_type_l2": "Second level of the ticket type",
      "ticket_type_l3": "Third level of the ticket type",
      "ticket_tags": "Tags associated with the ticket",
      "uni_use_of_tools_resources_10": "Evaluation of the use of tools and resources",
      "uni_process_completion_and_accuracy_45": "Evaluation of the process completion and accuracy",
      "uni_description": "Evaluation description",
      "uni_delta_audit_the_auditor": "Delta audit of the auditor",
      "uni_total_time_spent_sec": "Total time spent in seconds",
      "uni_policy_30": "Evaluation of policy adherence",
      "uni_s_shift_id": "Shift ID",
      "uni_time_spent_last_update_sec": "Time spent on last update in seconds",
      "uni_final_qa_score": "Final QA score",
      "uni_evaluation_type": "Type of evaluation",
      "uni_internal_shift_notes_15": "Internal shift notes",
      "uni_qat1_agent_email_address": "Email address of QAT1 agent",
      "pia_pre_invoice_internal_shift_notes_markdown_reason": "Reason for markdown in pre-invoice internal shift notes",
      "pia_facility_name": "Name of the facility",
      "pia_line_item_description": "Description of the line item",
      "pia_pre_invoice_policy_markdown_reason": "Reason for markdown in pre-invoice policy",
      "pia_pre_invoice_process_completion_accuracy_markdown_reason": "Reason for markdown in pre-invoice process completion accuracy",
      "pia_invoice_period": "Invoice period",
      "sccp_sccp_internal_shift_notes_markdown_reasons": "Reasons for markdown in SCCP internal shift notes",
      "sccp_sccp_policy_markdown_reason_s": "Reasons for markdown in SCCP policy",
      "sccp_sccp_process_completion_accuracy_markdown_reasons": "Reasons for markdown in SCCP process completion accuracy",
      "sccp_sccp_ticket_id": "SCCP ticket ID",
      "pidft_incorrect_use_of_pending_or_onhold_status": "Incorrect use of pending or on-hold status",
      "pidft_pt_internal_notes": "Internal notes for PT",
      "pidft_ticket_type": "Type of ticket",
      "pidft_merging_a_ticket_to_an_unassigned_ticket": "Merging a ticket to an unassigned ticket",
      "pidft_ob_call_recording_line_advisement": "OB call recording line advisement",
      "pidft_failure_to_address_all_or_additional_inquiries_raised_by_the_customer": "Failure to address all or additional inquiries raised by the customer",
      "pidft_sending_email_to_incorrect_email_or_customer": "Sending email to incorrect email or customer",
      "pidft_delta": "Delta evaluation",
      "pidft_pt_empathy": "Evaluation of PT empathy",
      "pidft_agent_communicated_incorrect_amount": "Agent communicated incorrect amount",
      "pidft_agent_processed_incorrect_amount": "Agent processed incorrect amount",
      "pidft_duplicate_resolutioncommunication": "Duplicate resolution/communication",
      "pidft_excessive_hold_or_dead_airs_that_led_to_customer_disconnection": "Excessive hold or dead air that led to customer disconnection",
      "pidft_agent_processed_incorrect_charge_s": "Agent processed incorrect charges",
      "pidft_compliance_autofail": "Compliance autofail",
      "pidft_autofail_passfail": "Autofail pass/fail",
      "pidft_cip_autofail": "CIP autofail",
      "pidft_incorrect_change_to_customer_account": "Incorrect change to customer account",
      "pidft_failed_to_complete_security_verification": "Failed to complete security verification",
      "pidft_svt_line_of_business": "SVT line of business",
      "pidft_agent_verified_non_compliant_timesheet": "Agent verified non-compliant timesheet",
      "pidft_actual_amount_owed_to_the_professional": "Actual amount owed to the professional",
      "pidft_failure_to_leave_internal_notes": "Failure to leave internal notes",
      "pidft_invalid_ticket_escalation": "Invalid ticket escalation",
      "pidft_payment_autofail": "Payment autofail",
      "pidft_pt_tools_and_process_utilization": "Evaluation of PT tools and process utilization",
      "pidft_pt_education": "Evaluation of PT education",
      "pidft_amount_processed_to_professional_by_agent": "Amount processed to professional by agent",
      "pidft_ticket_being_evaluated": "Ticket being evaluated",
      "pidft_pt_zendesk_form": "PT Zendesk form",
      "pidft_processed_duplicate_payment": "Processed duplicate payment",
      "pidft_non_compliance_to_sop": "Non-compliance to SOP",
      "pidft_pt_overall_communication": "Evaluation of PT overall communication",
      "pidft_work_avoidance": "Work avoidance",
      "pidft_pt_merging_relevant_tickets": "Evaluation of PT merging relevant tickets",
      "sa_parent_account": "Parent account",
      "sa_shift_adjustment_process_completion_accuracy_markdown_reason": "Reason for markdown in shift adjustment process completion accuracy",
      "sa_shift_adjustment_internal_shift_notes_markdown_reason": "Reason for markdown in shift adjustment internal shift notes",
      "sa_shift_adjustment_policy_markdown_reason": "Reason for markdown in shift adjustment policy",
      "bda_case_action_time_5": "Time taken for case action",
      "bda_note_placement_10": "Placement of case notes",
      "bda_salesforce_case_id": "Salesforce case identifier",
      "bda_case_resolution_time_10": "Time taken to resolve the case",
      "bda_case_solved_independently_5": "Indicates if the case was solved independently",
      "bda_complete_and_accurate_resolution_30": "Evaluation of resolution completeness and accuracy",
      "bda_complete_and_accurate_notes_10": "Evaluation of notes completeness and accuracy",
      "bda_customer_communication_5": "Quality of customer communication",
      "bda_customer_education_5": "Effectiveness of customer education",
      "bda_workflow_followed_15": "Adherence to the defined workflow",
      "bda_agent_response_time_5": "Time taken by the agent to respond",
      "reopens": "Number of times the ticket has been reopened",
      "replies": "Number of replies on the ticket",
      "calendar_reply_time_in_minutes": "Reply time in minutes",
      "calendar_first_resolution_time_in_minutes": "First resolution time in minutes",
      "calendar_full_resolution_time_in_minutes": "Full resolution time in minutes",
      "created_at": "Timestamp of when the record was created",
      "initially_assigned_at": "Timestamp of when the ticket was initially assigned",
      "assigned_at": "Timestamp of when the ticket was assigned",
      "solved_at": "Timestamp of when the ticket was solved",
      "generated_timestamp": "Timestamp of when the record was generated",
      "updated_at": "Timestamp of when the record was updated",
      "uni_wko_cx_delta_ata": "UNI Evaluation: WKO CX Delta Audit the Auditor",
      "pia_bonus_pay_20": "PIA Evaluation: Bonus pay score (20%)",
      "pia_policy_auto_fail_30": "PIA Evaluation: Policy auto-fail score (30%)",
      "pia_shift_adjustment_process_25": "PIA Evaluation: Shift adjustment process score (25%)",
      "pidft_overall_communication_including_empathy_15": "PIDFT Evaluation: Overall communication including empathy score (15%)",
      "pidft_internal_tools_and_process_utilization_20": "PIDFT Evaluation: Internal tools and process utilization score (20%)",
      "pidft_pi_zendesk_form_20": "PIDFT Evaluation: PI Zendesk form usage score (20%)",
      "pidft_resolution_policy_25_auto_fail": "PIDFT Evaluation: Resolution policy auto-fail score (25%)",
      "pidft_pi_internal_notes": "PIDFT Evaluation: PI internal notes",
      "sa_internal_policy_25": "SA Evaluation: Internal policy score (25%)",
      "bda_note_completeness_and_placement_sf_notes_cbd_5": "BDA Evaluation: Note completeness and placement (SF Notes CBD) score (5%)",
      "bda_workflow_followed_process_10": "BDA Evaluation: Workflow followed process score (10%)",
      "bda_knowing_the_customer_5": "BDA Evaluation: Knowing the customer score (5%)",
      "bda_dispute_related_trackers_qtr_dash_5": "BDA Evaluation: Dispute related trackers QTR dash score (5%)",
      "bda_case_solved_correctly_30": "BDA Evaluation: Case solved correctly score (30%)"
    }
  },
  "hcp_activation_cohort_monthly_ltv": {
    "description": "",
    "columns": {}
  },
  "ltc_weekly_net_facility_adds": {
    "description": "Weekly summary of facilities added, churned, retained, and resurrected week-over-week, as well as churned and resurrected using a rolling 30 day definition\n",
    "columns": {
      "start_week": "week based on shift start date",
      "new_hcfs": "number of HCFs whose first ever shift was scheduled during said week",
      "rolling_30_resurrected_hcfs": "number of HCFs for whom 30 or more days elapsed since their last shift during said week",
      "rolling_30_churned_hcfs": "number of HCFs for whom 30 or more days elapsed since their last shift during said week",
      "weekly_resurrected_hcfs": "number of HCFs who scheduled a shift during the week after not have a shift the prior week",
      "weekly_churned_hcfs": "number of HCFs who did not schedule a shift for the second week in a row",
      "weekly_retained_hcfs": "number of HCFs who scheduled a shift for this week after having a shift the prior week"
    }
  },
  "daily_first_time_hcps_int": {
    "description": "",
    "columns": {}
  },
  "logs_and_shifts_int": {
    "description": "",
    "columns": {}
  },
  "hcp_first_booked_verified_per_hcf_type": {
    "description": "",
    "columns": {}
  },
  "dso_proxy_week_sent": {
    "description": "",
    "columns": {}
  },
  "sf_opportunity_history_stg": {
    "description": "",
    "columns": {}
  },
  "shift_farming_original_qualified_agents_mod": {
    "description": "",
    "columns": {}
  },
  "agent_min_bad_event": {
    "description": "",
    "columns": {}
  },
  "stg_mqr_training_master_spreadsheet__trainee_information": {
    "description": "Staging model for data coming from the MQR training master spreadsheet, trainee information sheet",
    "columns": {
      "email": "Email address of the trainee\n",
      "name": "Full name of the trainee\n",
      "trainee_status": "Trainees current status\n",
      "card_url": "Url of Trello card\n",
      "slack_tag": "Trainee's Slack tag\n",
      "team_lead": "Trainee's team lead\n",
      "backup_sme": "Trainee's backup subject matter expert\n",
      "primary_sme": "Trainee's primary subject matter expert\n",
      "starting_date": "Trainee's start date\n",
      "graduation_date": "Trainee's graduation date\n",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system"
    }
  },
  "fct_incident_reports": {
    "description": "fact table for incident reports from both Zendesk and Salesforce\n",
    "columns": {
      "ticket_id": "unique id for the ticket can be the Zendesk or Salesforce id",
      "zendesk_assignee_id": "assignee id if the ticket came from Zendesk, null if the ticket came from Salesforce\n",
      "salesforce_assignee_id": "assignee id if the ticket came from Salesforce, null if the ticket came from Zendesk\n",
      "zendesk_requester_id": "requester id if the ticket came from Zendesk, null if the ticket came from Salesforce\n",
      "salesforce_requester_id": "requester id if the ticket came from Salesforce, null if the ticket came from Zendesk\n",
      "zendesk_submitter_id": "submitter id if the ticket came from Zendesk, null if the ticket came from Salesforce\n",
      "salesforce_submitter_id": "submitter id if the ticket came from Salesforce, null if the ticket came from Zendesk\n",
      "reporter": "If the reporter is a HCP or HCF\n",
      "created_at": "Timestamp the ticket was created at\n",
      "ticket_type": "Type of the ticket\n",
      "ticket_status": "Status of the ticket\n",
      "generated_at": "When the ticket was generated\n",
      "ticket_description": "Description of the ticket\n",
      "updated_at": "When the ticket was last updated\n",
      "final_categorization": "How the ticket is categorized\n",
      "hcp_full_name": "The full name of the HCP in the incident report\n",
      "worker_id": "The unique id for the HCP in the incident report\n",
      "facility_name": "Name of the facility where the incident occured\n",
      "facility_id": "unique id of the facility where the incident occured\n",
      "action_taken": "The action taken as a result of the incident report\n",
      "incident_cause": "The category of what caused the incident\n",
      "priority": "priority of the ticket\n",
      "ticket_url": "url link of the ticket\n",
      "group_id": "The group id for the ticket\n",
      "channel": "The channel where the ticket came from\n",
      "closed_date": "Date the ticket was marked as closed\n",
      "customer_description": "Description of the incident from the person who reporter the incident\n",
      "parties_involved": "Category of who was involved in the incident\n",
      "reported_against": "Category of who the incident was reported against"
    }
  },
  "zd_ticket_metrics_stg": {
    "description": "",
    "columns": {}
  },
  "stg_kops_airtable__requests_backlog": {
    "description": "Staging model for Requests Backlog data from Airtable.",
    "columns": {
      "airtable_record_id": "The unique record ID in Airtable.",
      "total_backlog": "Total number of backlog tasks on the given date.",
      "sum_of_backlog": "Sum of all backlog records on the given date.",
      "total_created": "Total number of records created on the given date.",
      "total_completed": "Total number of records completed on the given date.",
      "backlog_date": "The date of the backlog record.",
      "airtable_created_at": "Timestamp of record creation in Airtable.",
      "airbyte_extracted_at": "Timestamp of data extraction by Airbyte."
    }
  },
  "stg_amazon_connect__users": {
    "description": "Staging model for Amazon Connect users data.",
    "columns": {
      "user_id": "Unique identifier for the user.",
      "user_arn": "Amazon Resource Name (ARN) of the user.",
      "user_email": "User's email address (username).",
      "directory_user_id": "Directory user ID.",
      "security_profile_ids": "JSON array of security profile IDs.",
      "routing_profile_id": "ID of the routing profile assigned to the user.",
      "hierarchy_group_id": "ID of the hierarchy group the user belongs to.",
      "last_modified_time": "Timestamp of the last modification.",
      "last_modified_region": "AWS region where the last modification was made.",
      "first_name": "User's first name.",
      "last_name": "User's last name.",
      "primary_email": "User's primary email address.",
      "secondary_email": "User's secondary email address (if available).",
      "phone_type": "Type of phone used (e.g., SOFT_PHONE).",
      "auto_accept": "Whether auto-accept is enabled for the user.",
      "after_contact_work_time_limit": "After-contact work time limit for the user (in seconds).",
      "desk_phone_number": "Desk phone number assigned to the user (if applicable)."
    }
  },
  "fct_workplace_pricing_parameter_overrides": {
    "description": "fact table for workplace level pricing overrides, where each records represents a single workplace overrides version\n",
    "columns": {
      "override_id": "Unique id for the facility-agent_req-level pricing config override",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "market_segment": "Name of the metro-statistical area of this pricing market",
      "worker_qualification": "Qualification title of an HCP",
      "floor": "Minimum allowed pay value",
      "market_base": "Number of weekly shifts to subsidize",
      "market_fill": "Percentage of weekly shifts to subsidize",
      "intervention_strength": "Pay spread in dollars between min-fill and non min-fill facility-weeks",
      "weekday_base": "Average pay on weekday shifts",
      "weekend_base": "Average pay on weekend shifts",
      "margin_cap": "Minimum margin taken on non-subsidized shifts",
      "min_fill_margin_cap": "Minimum margin taken on min-fill subsidized shifts",
      "rolling_filled_ratio": "Multiple of the base pay to apply to all future shifts at currently min-fill facilities",
      "rolling_filled_margin": "Minimum margin taken on facilities that are currently min-fill subsidized shifts",
      "late_cancel_rate_multiplier": "Multiple of the base pay applied to late cancelled shifts",
      "late_cancel_margin_cap": "Minimum margin taken on late cancelled shifts",
      "target_irr": "Discount rate to apply to the pay <> charge ROI",
      "holiday_take": "Percentage take rate on the holiday charge boost",
      "late_cancel_lead_time_threshold1": "Lead time in minutes at which late cancel pricing begins to apply",
      "late_cancel_lead_time_threshold2": "Lead time in minutes at which late cancel pricing begins levels off",
      "ncns_margin_cap": "Minimum margin taken on NCNS shifts",
      "ncns_rate_multiplier": "Multiple of the base pay applied to NCNS shifts",
      "created_by": "The entity who created this workplace overrides version",
      "updated_by": "The entity who last updated this workplace overrides version",
      "created_at": "The time at which this workplace overrides version was created",
      "updated_at": "The time at which this workplace overrides version was updated",
      "status": "Status for the current overrides version, ACTIVE or STALE",
      "description": "Description associated with this overrides change written by the author",
      "is_opted_out_from_automated_policies": "When enabled, this market will be skipped by GTM scheduler even if it qualifies",
      "removed_at": "The time at which this workplace overrides version was removed (no longer active)",
      "next_override_id": "The workplace overrides version which superseded this workplace parameters version",
      "previous_override_id": "The workplace overrides version which was replaced by this workplace parameters version"
    }
  },
  "investor_hcf_mom_created_at_cohort": {
    "description": "",
    "columns": {}
  },
  "int_facility_params__actives": {
    "description": "This model filters out all stale facility override logs",
    "columns": {
      "override_id": "Unique id for the facility-agent_req-level pricing config override",
      "facility_id": "Unique id for the facility",
      "pricing_msa": "Name of the metro-statistical area of this pricing market",
      "agent_req": "Qualification title of an HCP",
      "floor": "Minimum allowed pay value",
      "market_base": "Number of weekly shifts to subsidize",
      "market_fill": "Percentage of weekly shifts to subsidize",
      "sd": "Pay spread in dollars between min-fill and non min-fill facility-weeks",
      "weekday_base": "Average pay on weekday shifts",
      "weekend_base": "Average pay on weekend shifts",
      "margin_cap": "Minimum margin taken on non-subsidized shifts",
      "min_fill_margin_cap": "Minimum margin taken on min-fill subsidized shifts",
      "rolling_filled_ratio": "Multiple of the base pay to apply to all future shifts at currently min-fill facilities",
      "rolling_filled_margin": "Minimum margin taken on facilities that are currently min-fill subsidized shifts",
      "late_cancel_rate_multiplier": "Multiple of the base pay applied to late cancelled shifts",
      "late_cancel_margin_cap": "Minimum margin taken on late cancelled shifts",
      "target_irr": "Discount rate to apply to the pay <> charge ROI",
      "holiday_take": "Percentage take rate on the holiday charge boost",
      "late_cancel_lead_time_threshold1": "Lead time in minutes at which late cancel pricing begins to apply"
    }
  },
  "stg_zendesk__groups": {
    "description": "staging model for zendesk groups",
    "columns": {
      "group_id": "unique identifier for the zendesk group",
      "group_name": "name of the zendesk group",
      "description": "description of the zendesk group",
      "group_url": "url of the zendesk group",
      "is_default": "is the group the default group",
      "is_deleted": "is the group deleted",
      "is_public": "is the group public",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was updated",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "hcp_monthly_activation_cohort_30_day_revenue": {
    "description": "",
    "columns": {}
  },
  "billing_credit_usage_alerts": {
    "description": "",
    "columns": {}
  },
  "zd_main_techops": {
    "description": "Techops report showing metrics for tickets that were resolved in one handling\n",
    "columns": {
      "ID": "Primary key, unique identifier for the zendesk ticket\n",
      "CHANNEL": "The channel the ticket was created in\n",
      "CREATED_AT": "The time the ticket was created\n",
      "UPDATED_AT": "The time the ticket was last updated\n",
      "SUBJECT": "The subject of the ticket\n",
      "DESCRIPTION": "The description of the ticket\n",
      "STATUS": "The status of the ticket\n",
      "RECEIVED AT": "The time the ticket was received\n",
      "REQUESTER NAME": "The name of the requester\n",
      "REQUESTER EMAIL": "The email of the requester\n",
      "ASSIGNEE NAME": "The name of the zendesk agent assigned to the ticket\n",
      "ASSIGNEE EMAIL": "The email of the zendesk agent assigned to the ticket\n",
      "GROUP NAME": "The group name for the ticket\n",
      "GROUP STATIONS": "The group stations for the ticket\n",
      "ASSIGNEE STATIONS": "The assignee stations for the ticket\n",
      "REOPENS": "The number of times the ticket was reopened\n",
      "REPLIES": "The number of replies to the ticket\n",
      "REPLY TIME IN MINUTES": "The total time in minutes from when a ticket was created to the first public reply\n",
      "FIRST RESOLUTION TIME IN MINUTES": "The total time in minutes from when a ticket was created to the first resolution\n",
      "FULL RESOLUTION TIME IN MINUTES": "The total time in minutes from when a ticket was created to when it was solved\n",
      "Ticket Type L1": "The first level of the ticket type\n",
      "Ticket Type L2": "The second level of the ticket type\n",
      "Ticket Type L3": "The third level of the ticket type\n",
      "SATISFACTION RATING": "The satisfaction rating for the ticket\n",
      "SATISFACTION COMMENT": "The satisfaction comment for the ticket\n",
      "TICKET FORM": "The ticket form for the ticket\n",
      "BRAND": "The brand for the ticket\n",
      "ORGANIZATION NAME": "The organization name for the ticket\n",
      "PRIORITY": "The priority for the ticket"
    }
  },
  "stg_pricing_parameters__facility_params": {
    "description": "This model unpacks the raw facility-level override data",
    "columns": {
      "override_id": "Unique id for the facility-agent_req-level pricing config override",
      "facility_id": "Unique id for the facility",
      "pricing_msa": "Name of the metro-statistical area of this pricing market",
      "agent_req": "Qualification title of an HCP",
      "floor": "Minimum allowed pay value",
      "market_base": "Number of weekly shifts to subsidize",
      "market_fill": "Percentage of weekly shifts to subsidize",
      "sd": "Pay spread in dollars between min-fill and non min-fill facility-weeks",
      "weekday_base": "Average pay on weekday shifts",
      "weekend_base": "Average pay on weekend shifts",
      "margin_cap": "Minimum margin taken on non-subsidized shifts",
      "min_fill_margin_cap": "Minimum margin taken on min-fill subsidized shifts",
      "rolling_filled_ratio": "Multiple of the base pay to apply to all future shifts at currently min-fill facilities",
      "rolling_filled_margin": "Minimum margin taken on facilities that are currently min-fill subsidized shifts",
      "late_cancel_rate_multiplier": "Multiple of the base pay applied to late cancelled shifts",
      "late_cancel_margin_cap": "Minimum margin taken on late cancelled shifts",
      "target_irr": "Discount rate to apply to the pay <> charge ROI",
      "holiday_take": "Percentage take rate on the holiday charge boost",
      "late_cancel_lead_time_threshold1": "Lead time in minutes at which late cancel pricing begins to apply",
      "late_cancel_lead_time_threshold2": "Lead time in minutes at which late cancel pricing begins levels off",
      "ncns_rate_multiplier": "Multiple of the base pay applied to NCNS shifts",
      "ncns_margin_cap": "Minimum margin taken on NCNS shifts",
      "created_by": "The person who created this parameters version",
      "updated_by": "The person who last updated this parameters version",
      "opt_out_from_automated_policies": "When enabled, this market will be skipped by GTM scheduler even if it qualifies",
      "description": "Description associated with this overrides change written by the author"
    }
  },
  "invoiced_invoices_stg": {
    "description": "DEPRECATED - use fct_invoices for any analysis/definitions",
    "columns": {
      "id": "N/A",
      "attempt_count": "N/A",
      "autopay": "N/A",
      "balance": "N/A",
      "chase": "N/A",
      "closed": "N/A",
      "sync_source": "N/A",
      "created_at": "N/A",
      "currency": "N/A",
      "customer_id": "N/A",
      "date": "N/A",
      "draft": "N/A",
      "due_date": "N/A",
      "late_fees": "N/A",
      "sf_account_id": "N/A",
      "app_status": "N/A",
      "period_start_date": "N/A",
      "period_end_date": "N/A",
      "paid": "N/A",
      "payment_terms": "N/A",
      "net_number": "N/A",
      "invoice_number": "N/A",
      "status": "N/A",
      "subtotal": "N/A",
      "total": "N/A",
      "days_from_date_sent": "N/A",
      "days_from_due_date": "N/A",
      "dso_date_sent": "N/A",
      "dso_date_due": "N/A",
      "payment_date": "N/A",
      "payment_amount": "N/A",
      "former_invoices": "N/A",
      "invoice_type": "N/A",
      "original_invoice_date": "N/A",
      "original_invoice_number": "N/A",
      "original_invoice_id": "N/A",
      "is_latest_invoice": "N/A"
    }
  },
  "invoiced_promise_to_pay": {
    "description": "",
    "columns": {}
  },
  "humangood_all_shifts_data": {
    "description": "Model detailing all shifts data for Human Good workplaces. To be used in external data shares",
    "columns": {
      "shift_id": "Model detailing shifts data for all Human Good corp account's workplaces. To be used in external data shares",
      "facility_id": "Unique identifier for the facility. Can be used to filter for data pertaining to that specific facility",
      "workplace_name": "Name of the facility",
      "shift_start_time": "Shift start timestamp in the facility's local timezone",
      "worker_requirement": "Nursing certification of the Healthcare Professional (HCP) that worked the shift",
      "shift_type": "Type of the shift worked",
      "worker_id": "Unique identifier for the Healthcare Professional. Can be used to filter for data pertaining to that specific Healthcare Professional",
      "worker_full_name": "Full name of the Healthcare Professional.",
      "is_shift_verified": "Whether the shift has been verified yet or not. True means that the shift is verified, False means that the shift has not been verified yet.",
      "is_shift_deleted": "Whether the shift has been canceled, either by the HCP or the facility. True means that the shift is canceled, False means that the shift has not been canceled.",
      "shift_total_time": "Total duration of the shift",
      "hcp_clock_in": "Timestamp of when the Healthcare Professional clocked in for the shift on the app, in the facility's local timezone",
      "admin_clock_in": "Timestamp of when the Clipboard Health app captured the clock-in event, in the facility's local timezone",
      "hcp_clock_out": "Timestamp of when the Healthcare Professional clocked out from the shift on the app, in the facility's local timezone",
      "admin_clock_out": "Timestamp of when the Clipboard Health app captured the clock-out event, in the facility's local timezone",
      "hcp_lunch_in": "Timestamp of when the Healthcare Professional started their break on the app, in the facility's local timezone",
      "admin_lunch_in": "Timestamp of when the Clipboard Health app captured the lunch-in event, in the facility's local timezone",
      "hcp_lunch_out": "Timestamp of when the Healthcare Professional ended their break on the app, in the facility's local timezone",
      "admin_lunch_out": "Timestamp of when the Clipboard Health app captured the lunch-out event, in the facility's local timezone",
      "total_worked_hours_for_shift": "Total worked hours for the shift by the worker",
      "shift_start_month": "Month that the shift starts on",
      "start_month_name": "Abbreviated name of the shift's start month",
      "total_worked_hours_by_worker": "Total worked hours by a given Healthcare Professional. Can be filtered for by facility_id and/or worker_id",
      "total_monthly_worked_hours_by_worker": "Total monthly worked hours by a given Healthcare Professional. Can be filtered for by facility_id and/or worker_id"
    }
  },
  "rpt_total_scorecard": {
    "description": "Model for calculating a comprehensive scorecard for facilities based on various financial and operational metrics.",
    "columns": {
      "name": "Name of the facility or account.",
      "salesforce_id": "Unique Salesforce ID for the facility or account.",
      "current_week": "The current week for the scorecard.",
      "facility_score": "Overall score for the facility based on loyalty, disputes, pending instances, APN instances, overdue AR, DSO, and high invoice DSO scores, adjusted for legal and blacklist status.",
      "loyalty_score": "Score indicating the loyalty of the facility based on the number of invoices processed.",
      "invoice_count": "Total number of invoices for the facility, excluding drafts and voided invoices.",
      "dispute_score": "Score reflecting the dispute rate of the facility, with higher scores indicating fewer disputes.",
      "dispute_rate": "Percentage of invoices that have been disputed over the past year.",
      "dso_score": "Score based on the Days Sales Outstanding (DSO) normalized performance, indicating how efficiently payments are collected.",
      "avg_dso_npt": "Average Days Sales Outstanding normalized performance, indicating how efficiently payments are collected relative to net terms.",
      "pend_score": "Score reflecting the number of pending instances for the facility, with higher scores indicating fewer pending instances.",
      "pend_count": "Total count of pending instances for the facility.",
      "apn_score": "Score based on the number of pending notices for the facility, with higher scores indicating fewer notices.",
      "apn_count": "Total count of pending notices for the facility.",
      "high_invoice_dso_score": "Score based on the highest DSO for the last 20 invoices, reflecting payment efficiency for larger invoices.",
      "invoice_dso": "DSO for the last 20 invoices, indicating payment efficiency for recent invoices.",
      "overdue_ar_score": "Score reflecting the percentage of accounts receivable that are overdue, with higher scores indicating fewer overdue accounts.",
      "overdue_ar_percent": "Percentage of accounts receivable that are overdue.",
      "is_blacklisted": "Indicates whether the facility is blacklisted.",
      "is_with_legal": "Indicates whether the facility is involved in legal proceedings.",
      "payer_category": "Classification of the facility as a 'Good Payer', 'Ok Payer', 'Bad Payer', or 'Very Bad Payer' based on its overall score."
    }
  },
  "hcp_shifts_worked_weekly_mod": {
    "description": "",
    "columns": {}
  },
  "stg_shift_reviews__workplace_ratings": {
    "description": "Staging model containing the rating that the worker provided to the workplace. This data comes from the shift review service from the app.\n",
    "columns": {
      "rating_id": "Primary key, unique identifier for the workplace rating\n",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "shift_id": "Unique identifier for the shift",
      "shift_period": "Relates to a shift period",
      "shift_worker_qualification": "Relates to a shift worker qualification",
      "rating": "Worker rating of the workplace",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated"
    }
  },
  "invoiced_credit_note_stg": {
    "description": "",
    "columns": {}
  },
  "stg_zendesk__ticket_comments": {
    "description": "Staging model for zendesk ticket comments. These comments represent the interactions between the ticket requester and the support agent.\n",
    "columns": {
      "ticket_comment_id": "Unique identifier for the ticket comment.",
      "ticket_id": "Unique identifier for the zendesk ticket.",
      "audit_id": "Unique identifier for the audit. Audits represent events occuring on the ticket.",
      "author_id": "Unique identifier for the author of the comment.",
      "via": "Channel and source object representing how the ticket was created.",
      "body": "The content of the comment.",
      "type": "The type of the comment.",
      "public": "Whether the comment is public or private.",
      "uploads": "List of tokens received from uploading files for comment attachments. The files are attached by creating or updating tickets with the tokens\n",
      "metadata": "System information (web client, IP address, etc.) and comment flags, if any",
      "html_body": "The comment formatted as HTML",
      "timestamp": "The time the comment was created, in Unix epoch time.",
      "created_at": "Timestamp of when the record was created",
      "event_type": "The type of event that triggered the comment.",
      "plain_body": "The comment presented as plain text.",
      "attachments": "Array of attachments uploaded with the comment.",
      "via_reference_id": "TBD",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake"
    }
  },
  "int_zendesk__document_priority": {
    "description": "Intermediate view containing the document priority from Zendesk tickets for the corresponding requirement and worker",
    "columns": {
      "document_priority_sk": "Surrogate key that combines worker_id and req_id",
      "ticket_id": "Unique identifier for zendesk tickets",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "req_id": "Unique identifier for the requirement",
      "doc_priority": "Document priority defined by the Zendesk ticket",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "Timestamp of when the record was created"
    }
  },
  "rpt_shift_view_docs_reqs": {
    "description": "Report for shift views and document requirements, each record is a requirement of the shift viewed. For example if the shift viewed has 4 requirements then this report will have 4 rows (1 for each requirement) for each time the shift was viewed\n",
    "columns": {
      "shift_view_req_id": "Surrogate key created by combining the worker_open_shift_viewed_id and req_id\n",
      "worker_open_shift_viewed_id": "Unique identifier to the shift view event",
      "req_id": "Unique identifier for the requirement",
      "shift_id": "Unique identifier for the shift",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "req_name": "Name of the requirement. Note: that this can change over time, use req_id when possible",
      "has_missing_documents": "If the worker has missing documents then true",
      "is_instant_review": "True if the shifts missing documents can be reviewed instantly\n",
      "missing_documents": "A comma separated list of the missing documents\n",
      "worker_has_req": "True if the worker had the requirement fulfilled when they viewed the shift, false if they did not\n",
      "shift_viewed_at": "Timestamp of when the worker viewed the shift"
    }
  },
  "app_accountlogs_stg": {
    "description": "Account Logs from our main app DB. These represent stage/status changes for HCPs and HCFs.",
    "columns": {
      "id": "Primary key.",
      "account_id": "ID of the HCP or HCF who was subject to the stage change.",
      "agent_id": "ID of the HCP if the status change concerned and HCP. This should be same as the Account ID.",
      "facility_id": "ID of the HCF if the status change concerned and HCF. This should be same as the Account ID.",
      "updated_at": "Time at which the record was modified.",
      "text": "A short note with the account log, similar to the note field.",
      "note": "A short note with the account log, similar to the text field.",
      "type": "Account type, whether it was an HCP of HCF.",
      "new_status": "The new stage that the HCF or HCP found themselves in.",
      "previous_status": "The status from which the HCF or HCP transitioned from.",
      "admin_id": "The ID of the CBH admin that made the change.",
      "reason": "The reason for the change.",
      "meta_shift_id": "The shift id that triggered the change."
    }
  },
  "stg_zendesk_wops__tickets": {
    "description": "This model represents the tickets in Zendesk, which are the primary means of communication between end users and agents.",
    "columns": {
      "ticket_id": "The unique identifier for the ticket.",
      "assignee_id": "The ID of the agent currently assigned to the ticket.",
      "requester_id": "The ID of the user who requested the ticket.",
      "submitter_id": "The ID of the user who submitted the ticket.",
      "forum_topic_id": "The ID of the forum topic this ticket originated from, if any.",
      "ticket_form_id": "The ID of the ticket form used for the ticket.",
      "organization_id": "The ID of the organization associated with the ticket.",
      "custom_status_id": "The ID of the custom status of the ticket.",
      "brand_id": "The ID of the brand associated with the ticket.",
      "group_id": "The ID of the group assigned to the ticket.",
      "deleted_ticket_form_id": "The ID of the deleted ticket form, if applicable.",
      "problem_id": "The ID of the problem this ticket is linked to, if any.",
      "collaborator_ids": "The IDs of the users collaborating on the ticket.",
      "url": "The API URL of the ticket.",
      "via": "How the ticket was created.",
      "tags": "The tags associated with the ticket.",
      "type": "The type of the ticket, such as \"problem\", \"incident\", \"question\", or \"task\".",
      "fields": "Custom fields for the ticket.",
      "status": "The current status of the ticket.",
      "subject": "The subject of the ticket.",
      "priority": "The priority of the ticket.",
      "is_public": "Whether the ticket is public.",
      "recipient": "The email address of the ticket recipient.",
      "description": "The description of the ticket.",
      "external_id": "An external ID for the ticket.",
      "raw_subject": "The unformatted subject of the ticket.",
      "email_cc_ids": "The IDs of users CC'ed on the ticket.",
      "follower_ids": "The IDs of users following the ticket.",
      "followup_ids": "The IDs of follow-up tickets.",
      "custom_fields": "Custom fields associated with the ticket.",
      "has_incidents": "Whether the ticket has incidents.",
      "does_allow_attachments": "Whether the ticket allows attachments.",
      "does_allow_channelback": "Whether the ticket allows channelback.",
      "satisfaction_rating": "The satisfaction rating of the ticket, if available.",
      "sharing_agreement_ids": "The IDs of sharing agreements associated with the ticket.",
      "is_from_messaging_channel": "Whether the ticket originated from a messaging channel.",
      "generated_timestamp": "The timestamp when the ticket was generated.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "due_at": "The due date of the ticket, if applicable.",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake"
    }
  },
  "pa_dashboard_Verified_by_Claimed_Rate_PA_vs_NonPA": {
    "description": "",
    "columns": {}
  },
  "live_shift_time": {
    "description": "",
    "columns": {}
  },
  "dim_workplaces": {
    "description": "dimension model with each record representing a unique workplace",
    "columns": {
      "workplace_id": "primary key, unique id for each workplace",
      "salesforce_id": "Salesforce account ID of the workplace. This ID ties back to the Salesforce account ID of the account in Salesforce tables.",
      "billing_specialist_id": "The ID of the billing specialist at the workplace",
      "invoiced_customer_id": "The Invoiced.com customer ID of the workplace. This field ties back to dim_customers and fct_invoices",
      "type": "Type of workplace",
      "vertical_type": "Workplace Vertical",
      "name": "Name of workplace",
      "email": "Email of workplace",
      "instant_book": "String describing whether or not instant book is enabled at the workplace",
      "rate_negotiation": "If ON, the the HCP can propose new rates for all the open shifts at this workplace. If OFF, then it will prevent HCPs from negotiating rates and will immediately reject and end any current negotiations that are open",
      "account_stage": "Current stage/status of the workplace'",
      "timezone": "Timezone of the workplace",
      "country": "Country of the workplace",
      "state": "State of the workplace",
      "state_code": "Two letter state code of the workplace",
      "csa": "The combined statistical area of the workplace",
      "msa": "The metropolitan statistical area of the workplace",
      "street_number": "Street number of the workplace",
      "street_name": "Street name of the workplace",
      "address": "Address (Street number and name) of the workplace",
      "postal_code": "Postal code of the workplace",
      "pricing_msa": "An MSA is a US Census Bureau-defined metropolitan statistical area used to define our areas of operation. Pricing MSAs are CBH-specific. While they typically map directly to MSAs, we may split large MSAs into multiple pieces. For example, the New York MSA is split into New York, NY and New York, NJ.",
      "city": "City of the workplace",
      "longitude": "Longitude of the workplace",
      "latitude": "Latitude of the workplace",
      "future_shifts_requested": "Number of future shifts requested by this workplace",
      "clock_in_method": "Potentially deprecated, all records are NULL",
      "time_system": "Potentially deprecated, all records are NULL",
      "is_test_account": "Always false as test accounts are filtered out in stg_app__facility_profiles",
      "is_self_onboarded": "If the workplace self-onboarded, the TRUE",
      "is_manual_msa": "If the MSA of the worker is manually set, the TRUE",
      "verification_preference": "The shift verification preference of the workplace. Note that outbound verifcation may be deprecated in the future and may be already deprecated by the shift verification team.",
      "is_100_instant_pay_enabled": "If instant pay is enabled by the workplace to workers, then TRUE",
      "is_early_clockin_enabled": "If early clockin is enabled, then TRUE. This is related to the toggle in the app Facility drawer titled \"Prevent healthcare professionals from clocking in early?\"",
      "is_nfc_hcp_toggle_enabled": "No additional information about this field, however most records at FALSE, potentially indicating that this field could be deprecated.",
      "is_nfc_tag": "If the NFC tags are enabled for the workplace, then TRUE",
      "requires_lunch_break": "If the workplace requires workers to take a lunch break, then TRUE",
      "is_prospect": "If the workplace is marked as a prospect in placement settings, then TRUE",
      "is_managed_by_parent_workplace": "If the workplace is managed by a parent workplace, then TRUE",
      "rates": "Object containing the various set rates for the workplace per worker type",
      "cna_covid_charge": "Historically, the additional COVID charges for a CNA for the facility based on the covid status of the facility. Potentially to be deprecated.",
      "lvn_covid_charge": "Historically, the additional COVID charges for a LVN for the facility based on the covid status of the facility. Potentially to be deprecated.",
      "rn_covid_charge": "Historically, the additional COVID charges for a RN for the facility based on the covid status of the facility. Potentially to be deprecated.",
      "np_covid_charge": "Historically, the additional COVID charges for a NP for the facility based on the covid status of the facility. Potentially to be deprecated.",
      "caregiver_covid_charge": "Historically, the additional COVID charges for a Caregiver for the facility based on the covid status of the facility. Potentially to be deprecated.",
      "hazard_pay": "Any additional hazard pay that the facility pays",
      "covid_active": "If COVID is currently active at the facility, then TRUE. Field is typically not accurate based on what the facility reports and may be deprecated in the future.",
      "late_cancellation_window": "The number of hours prior to a shift starting that a facility can cancel a shift and would be considered a late cancellation",
      "late_cancellation_fee_hours": "The number of hours paid to a worker by the facility if the facility cancelled a shift within the late cancellation window",
      "rush_fee_differential": "The additional amount to pay the worker if a rush fee period is applicable for the facility",
      "rush_fee_period": "The number of hours from the start time of a requested shift where it is considered for a rush fee differential",
      "net_terms": "Net invoicing terms for the facility",
      "dispute_terms": "How long the facility has after being invoiced to file a dispute.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "facility_last_logged_in_at": "When the facility last logged into CBH app/website",
      "covid_status_last_updated_at": "DEPRECATED",
      "sent_home_charge_hours": "Number used for calculating caregiver compensation for sent-home or last-minute cancellations",
      "holiday_fee": "JSON that describes the pay increase this workplace gives for holidays",
      "has_pay_on_holiday": "True if the workplace has increased pay on all holidays, false otherwise",
      "has_pay_on_all_holidays": "JSON that describes the pay increase this workplace gives for holidays",
      "holiday_list": "The list of holiday_ids where the workplaces has holiday pay",
      "holiday_name_list": "The list of holidays where the workplaces has holiday pay",
      "rates_table": "Charge rate differentials for different shift types and days of the week.\nCharge Rates are calculated by taking base charge and adding these differentials as additional charges.",
      "is_quiz_workers_on_rules_enabled": "Signifies if the workplace has enabled the Quiz feature or not",
      "has_auto_declination_enabled": "Signifies if the workplace has enable the auto declination feature or not",
      "auto_declination_reason": "Reason for the enabling the auto-declination feature",
      "max_allowed_work_consecutive_hours": "Maximum number of hours a worker can work consecutively",
      "max_allowed_work_hours_per_week": "Maximum number of hours a worker can work in a week",
      "has_pending_notice_enabled": "Signifies if the admin has enabled the pending notice alert for the facility",
      "pending_notice_date": "Time at which the facility will move from enrolled status to Pending status, if facility donot clear their invoice dues",
      "parent_facility_id": "The parent of the facility",
      "is_variable_charge_enabled": "Boolean field denoting facility's access to variable charge feature",
      "has_rate_differential": "Boolean that indicates whether the workplace has at least one active rate differential. This only works for rate tables that follow the {<day_of_week>:<noc/am/pm/surge>} pattern. If a rate table is added that doesn't fall within this pattern the has_rate_differential will be false.",
      "has_location_awareness_enabled": "whether the workplace has the location awareness setting enabled",
      "is_deleted": "Flag indicating whether the record has been marked as deleted",
      "has_autopay": "If the workplace has autopay enabled in Invoiced.com, then TRUE",
      "salesforce_record_type_id": "TO DO",
      "salesforce_created_by_id": "TO DO",
      "salesforce_last_modified_by_id": "TO DO",
      "salesforce_activity_metric_id": "TO DO",
      "salesforce_owner_id": "TO DO",
      "zendesk_account_id": "TO DO",
      "salesforce_parent_id": "TO DO",
      "cbh_app_account_id": "TO DO",
      "invoiced_invoiced_customer_id": "TO DO",
      "salesforce_account_name": "The name of the salesforce account",
      "salesforce_parent_account_name": "The name of the parent's salesforce account",
      "salesforce_account_is_deleted": "Flag that indicates if the Salesforce account has been deleted",
      "salesforce_account_type": "TO DO",
      "billing_state": "TO DO",
      "billing_country": "TO DO",
      "shipping_postal_code": "TO DO",
      "is_add_to_do_not_contact_list": "TO DO",
      "cms_certification_number": "TO DO",
      "main_email_address": "TO DO",
      "invoiced_account_balance": "TO DO",
      "is_salesloft_active_account": "TO DO",
      "salesloft_salesloft_domain": "TO DO",
      "salesforce_soft_credit_limit": "TO DO",
      "opportunity_count": "TO DO",
      "billing_city": "TO DO",
      "shipping_address": "TO DO",
      "facility_type": "TO DO",
      "unqualified_reason": "TO DO",
      "metro": "TO DO",
      "description": "TO DO",
      "net_dispute_terms": "TO DO",
      "net_pay_terms": "TO DO",
      "lead_source": "DEPRECATED",
      "salesforce_hard_credit_limit": "TO DO",
      "staffing_preference": "DEPRECATED",
      "past_customer_reason": "DEPRECATED",
      "contract_type": "TO DO",
      "community_number": "TO DO",
      "payments_stem_from": "TO DO",
      "last_month_cancels": "DEPRECATED",
      "last_month_call_offs": "DEPRECATED",
      "all_time_net_revenue": "TO DO",
      "invoiced_attention_to": "TO DO",
      "legal_entity_name": "TO DO",
      "delightedinc_nps": "TO DO",
      "total_number_of_beds": "TO DO",
      "website": "TO DO",
      "phone": "Phone number for the workplace, comes from the Salesforce account",
      "clean_phone_number": "a cleaned up phone number for the workplace, extracts the only the 10 digit phone number. Comes from the Salesforce account",
      "is_blacklisted": "TO DO",
      "is_sdr_hcf_so_transition": "DEPRECATED",
      "has_onboarding_plus_email_sent": "DEPRECATED",
      "has_added_work_instructions": "DEPRECATED",
      "has_added_covid_information": "DEPRECATED",
      "has_added_payment_info": "DEPRECATED",
      "has_added_financial_statement": "DEPRECATED",
      "has_aster_staffing_agreement": "TO DO",
      "has_exclusive_agreement": "DEPRECATED",
      "activation_type": "DEPRECATED",
      "is_raymart_verified_parent_accounts": "DEPRECATED",
      "is_create_on_invoiced": "TO DO",
      "time_region": "TO DO",
      "number_of_contacts": "TO DO",
      "is_onboarding_call_completed": "DEPRECATED",
      "how_facility_was_activated": "DEPRECATED",
      "believed_number_of_child_accounts": "TO DO",
      "is_endorsed_to_third_party_debt_collector": "TO DO",
      "has_insurance_claim_raised_for_facility": "TO DO",
      "total_number_of_unenrolled_children": "TO DO",
      "is_reactivations_account": "DEPRECATED",
      "is_parent": "TO DO",
      "onboarding_call_conducted_by": "DEPRECATED",
      "days_since_last_shift_created": "TO DO",
      "is_receiving_ag": "TO DO",
      "is_receiving_ag_lvn": "TO DO",
      "is_receiving_ag_rn": "TO DO",
      "receiving_ag_start_date": "TO DO",
      "pbj_agency_hours_2022q4": "TO DO",
      "is_pbj_top_40th_percentile": "DEPRECATED",
      "activations_owner": "TO DO",
      "billing_address": "TO DO",
      "is_contest_account": "DEPRECATED",
      "parent_contract_type": "TO DO",
      "is_top_50_msa": "TO DO",
      "billing_latitude": "TO DO",
      "billing_longitude": "TO DO",
      "am_relationship_status": "The relationship the AM has with this account",
      "salesforce_account_created_at": "TO DO",
      "last_modified_at": "TO DO",
      "added_to_dnc_date": "TO DO",
      "latest_dnc_date": "TO DO",
      "last_activity_date": "TO DO",
      "churn_reason_last_updated_date": "DEPRECATED",
      "onboarding_call_complete_date": "DEPRECATED",
      "onboarding_email_complete_date": "DEPRECATED",
      "self_onboarding_start_date": "DEPRECATED",
      "self_onboarding_finished_date": "DEPRECATED",
      "hcfso_welcome_email_sent_date": "DEPRECATED",
      "first_shift_request_date": "TO DO",
      "first_shift_assigned_date": "TO DO",
      "first_shift_verified_date": "TO DO",
      "ltc_last_call_attempted_at": "TO DO",
      "ltc_last_spoke_with_dm_at": "TO DO",
      "onboarding_call_completed_date": "DEPRECATED",
      "resurrected_date": "TO DO",
      "reactivated_date": "TO DO",
      "system_mod_at": "TO DO",
      "last_shift_assigned_date": "TO DO",
      "last_shift_requested_date": "TO DO",
      "last_shift_verified_date": "TO DO",
      "first_shift_created_date": "TO DO",
      "last_shift_created_date": "TO DO",
      "salesforce_net_terms": "The workplace's invoicing net terms",
      "is_one_off_billing_handling": "true if the one-off handling has implications to pending/suspend execution, or if the one-off account handling diverges from the current pending/suspend guidance. Accounts with Legal or on Payment Plans should not have this box checked. Accounts on informal payment plans should have this boxed checked (ie. Accounts agreed to $xx payment each week, but did not sign a PA).",
      "description_of_one_off_billing_handling": "Brief description of the billing handling process entered by Billing Rep when marking the one_off_billing_handling field as true.",
      "has_churned_due_to_no_needs": "If the account has churned due to not having staffing needs",
      "credit_consumed": "TO DO",
      "hard_credit_limit": "TO DO",
      "soft_credit_limit": "TO DO",
      "credit_limit_updated_at": "Date/time that the credit limit information (i.e. credit_consumed, hard_credit_limit, and soft_credit_limit were updated)",
      "num_exclusions_by_workplace": "count of how many workers the workplace has excluded",
      "exclusions_by_workplace": "JSON of exclusions made by the workplace",
      "num_exclusions_by_worker": "count of how many workers have excluded the workplace",
      "exclusions_by_worker": "JSON of exclusions made against the workplace",
      "num_ratings_for_workplace": "the number of ratings the workplace has gotten",
      "avg_workplace_rating": "the average of ratings the workplace gotten",
      "ratings_for_workplace": "JSON of ratings records for the workplace",
      "num_ratings_by_workplace": "the number of ratings the workplace has given",
      "avg_worker_rating": "the average rating the workplace has given",
      "ratings_by_workplace": "JSON of ratings records given by the workplace",
      "is_instant_pay_enabled": "If instant pay is enabled, the TRUE",
      "num_one_week_suspensions_given": "Count of one week suspensions given by the workplace",
      "num_permanent_suspensions_given": "Count of permanent suspensions given by the workplace",
      "am_shift_duration": "duration of the am shift in hours",
      "am_shift_start_time": "start time of the am shift",
      "pm_shift_duration": "duration of the pm shift in hours",
      "pm_shift_start_time": "start time of the pm shift",
      "noc_shift_duration": "duration of the noc shift in hours",
      "noc_shift_start_time": "start time of the noc shift",
      "churn_outcome_last_updated_date": "This column represents the date when the last update was made to the churn outcome of the workplace. The churn outcome refers to the final status or result of a customer's churn process. The data type of this column is 'date'.",
      "churn_identified": "This column indicates whether a churn has been identified for the workplace. Churn refers to the process when a customer stops doing business or ends the relationship with the company. The data type of this column is 'varchar', and it typically contains values like 'Yes' or 'No'.",
      "churn_notes": "This column contains any additional notes or comments related to the churn process of the workplace. These notes might include reasons for the churn, actions taken, or other relevant details. The data type of this column is 'varchar'.",
      "latest_churn_outcome": "This field represents the most recent churn outcome for the workplace. Churn refers to when a customer or client stops doing business or ends the relationship with a company. The value in this field provides insights into the reason or outcome of the latest churn event. This information is crucial for business users to understand customer retention trends and to develop strategies to improve customer loyalty.",
      "coordinates": "This field represents the geographical coordinates of the workplace. It is generated by combining the longitude and latitude values of the workplace location. This information is crucial for mapping and location-based analysis.",
      "billing_coordinates": "This field represents the geographical coordinates of the billing address associated with the workplace. It is generated by combining the billing longitude and billing latitude values. This information is used for billing and financial purposes, and can also be used for location-based analysis of billing addresses."
    }
  },
  "zd_tickets_top_metrics": {
    "description": "TBD",
    "columns": {}
  },
  "invoiced_critical_account_dashboard_stg": {
    "description": "",
    "columns": {}
  },
  "fct_zendesk__qc_tickets": {
    "description": "fct_zendesk__qc_tickets model is a comprehensive tool for analyzing Quality Control interactions. It collects data from the QC appeal form in Zendesk, including tickets, worker profiles and logs, to provide a detailed view of each worker's appeal journey.Key features of the model include the ability to track the time taken to resolve an issue, the number of times a ticket was reopened, and the probability of a ticket being flagged for quality control.",
    "columns": {
      "ticket_id": "The unique ID of the ticket, from the tickets table",
      "requester_id": "The ID of the person who requested the ticket, from the tickets table",
      "assignee_id": "The ID of the agent assigned to the ticket, from the tickets table",
      "ticket_form_id": "The ID of the ticket form used to create this ticket, from the tickets table",
      "requester_name": "The name of the person who requested the ticket, from the users table",
      "requester_email": "The email address of the person who requested the ticket, from the users table",
      "assignee_name": "The name of the agent assigned to the ticket, from the users table",
      "assignee_email": "The email address of the agent assigned to the ticket, from the users table",
      "assignee_supervisor": "A flag indicating if the assigned agent is a supervisor, from the users table",
      "assignee_agent_role": "The role of the agent assigned to the ticket (e.g. admin, agent), from the users table",
      "group_name": "The name of the Zendesk group the ticket is assigned to, from the groups table",
      "ticket_form_name": "The name of the ticket form used to create this ticket, from the ticket_forms table",
      "status": "The status of the ticket, open, pending, on hold, solved, or closed",
      "ticket_tags": "The unparsed list of tags applied to the ticket, from the tickets table",
      "qc_action_taken_account_reviews": "The action taken to resolve the QC account review, captured in a custom text field",
      "qc_action_taken_appeal_reviews": "The action taken to resolve the QC appeal review, captured in a custom text field",
      "qc_ticket_type": "The type of QC ticket, from a custom dropdown field",
      "flag_rule_qc": "A flag indicating if the ticket was flagged for quality control, from a custom checkbox field",
      "probability_0_100": "The predicted quality risk score from 0-100 for the ticket, from a custom number field",
      "worker_id": "The ID of the agent assigned to the ticket, captured in a custom text field",
      "agent_worker_id": "The ID of the worker",
      "agent_new_status": "The latest status of the worker once the appeal is actione, from the workers' account_logs table",
      "previous_status": "The previous ticket status before the latest change, from the account_logs table",
      "reason": "The reason entered by the agent for the latest status change, from the account_logs table",
      "handle_time": "The total handle time for the ticket in minutes, calculated from a custom number field",
      "last_touch_handle_time": "The last updated handle time in minutes, calculated from a custom number field",
      "reopens": "The number of times the ticket was reopened, from the ticket_metrics table",
      "replies": "The number of public and private replies on the ticket, from the ticket_metrics table",
      "reply_time_in_minutes": "The time in minutes from ticket creation to first reply, from the ticket_metrics table",
      "first_resolution_time_in_minutes": "The time in minutes from ticket creation to first resolution, from the ticket_metrics table",
      "full_resolution_time_in_minutes": "The total time in minutes from ticket creation to final resolution, from the ticket_metrics table",
      "created_at": "The timestamp when the ticket was created, from the tickets table",
      "initially_assigned_at": "The timestamp when the ticket was first assigned, from the ticket_metrics table",
      "assigned_at": "The timestamp when the ticket was assigned to an agent, from the ticket_metrics table",
      "solved_at": "The timestamp when the ticket was marked as solved, from the ticket_metrics table",
      "solved_at_pst": "The timestamp when the ticket was marked as solved in PST, from the ticket_metrics table",
      "status_updated_at": "The timestamp when the ticket status was last updated by an agent, from the account_logs table",
      "created_at_pst": "The timestamp when the ticket was created in PST, from the tickets table",
      "initially_assigned_at_pst": "The timestamp when the ticket was first assigned in PST, from the ticket_metrics table"
    }
  },
  "dim_salesforce_account_billing_insurance": {
    "description": "Dimension table containing the billing insurance details for a Salesforce account (i.e. workplace)",
    "columns": {
      "salesforce_account_id": "Primary key, unique indentifier for the salesforce account",
      "parent_id": "Parent ID of the Salesforce account",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "invoiced_invoiced_customer_id": "The customer ID within Invoiced.com",
      "atradius_id": "Facility ID on the insurance portal",
      "name": "Name of the Salesforce Account",
      "coverage_status_narrative_from_insurance": "Indicates the decision from the insurance, which can be approved, refused, or withdrawn",
      "underwriter_entity_for_the_claim": "Trade insurance provider",
      "limit_1_first_insurance_amount": "Initial insurance amount",
      "limit_2": "Updated insurance amount",
      "current_limit_latest_insurance_amount": "Latest insurance amount",
      "total_amount_reported": "Total amount claimed from insurance",
      "total_amount_received": "Amount paid from the claim",
      "ar_insured_amount": "Exact amount of insured accounts receivable",
      "insurance_buyer_rating": "A buyer rating, also known as a risk rating, is an assessment by a credit insurer of a customer's financial health and their potential to default on payments.",
      "first_date_insurance_coverage": "Start date of insurance coverage",
      "second_date_insurance_coverage": "Subsequent date of insurance coverage",
      "current_date_insurance_coverage": "Latest date of insurance coverage",
      "end_date_insurance_coverage": "End date of insurance coverage",
      "date_of_claim_submission": "Date of filing an insurance claim",
      "date_of_compensation": "Date of claim compensation"
    }
  },
  "rpt_verified_growth_accounting": {
    "description": "Growth accounting model tracking verified revenue and shifts by vertical.",
    "columns": {
      "growth_accounting_sk": "Surrogate key for shift start month and vertical type.",
      "shift_start_month": "The month when the shift started.",
      "vertical_type": "Vertical type",
      "number_of_active_workplaces": "Total count of active workplaces in the given month.",
      "gross_revenue_from_verified_shifts": "Total gross revenue from verified shifts in the given month.",
      "net_revenue_from_verified_shifts": "Total net revenue from verified shifts in the given month.",
      "number_of_worked_shifts": "Total number of worked shifts in the given month.",
      "new_logos": "Count of new workplaces starting shifts in the given month.",
      "retained_logos": "Count of workplaces that continued shifts from the previous month.",
      "resurrected_logos": "Count of workplaces that resumed shifts after a gap.",
      "churned_logos": "Count of workplaces that stopped shifts.",
      "new_gross_revenue": "Gross revenue from new workplaces.",
      "new_net_revenue": "Net revenue from new workplaces.",
      "new_worked_shifts": "Number of shifts worked by new workplaces.",
      "retained_gross_revenue": "Gross revenue retained from workplaces that continued.",
      "retained_net_revenue": "Net revenue retained from workplaces that continued.",
      "retained_worked_shifts": "Number of shifts retained from workplaces that continued.",
      "expansion_gross_revenue": "Additional gross revenue from retained workplaces.",
      "expansion_net_revenue": "Additional net revenue from retained workplaces.",
      "expansion_worked_shifts": "Additional shifts from retained workplaces.",
      "contraction_gross_revenue": "Loss in gross revenue from retained workplaces.",
      "contraction_net_revenue": "Loss in net revenue from retained workplaces.",
      "contraction_worked_shifts": "Reduction in shifts from retained workplaces.",
      "resurrected_gross_revenue": "Gross revenue from resurrected workplaces.",
      "resurrected_net_revenue": "Net revenue from resurrected workplaces.",
      "resurrected_worked_shifts": "Number of shifts worked by resurrected workplaces."
    }
  },
  "hcf_churn_resurrection_weekly_fin": {
    "description": "",
    "columns": {}
  },
  "stg_ringcentral__calls": {
    "description": "Contains all RingCentral inbound/outbound calls made after 1/1/2024",
    "columns": {
      "call_id": "Unique internal identifier of a call log record",
      "call_from_id": "Phone number of the party that the phone call was from. This phone number can be used to identify RingCentral user",
      "call_to_id": "Phone number of the party that the phone call was to. This phone number can be also be used to identify RingCentral user",
      "party_id": "Internal Identifier of Participant",
      "call_session_id": "Internal identifier of a call session",
      "telephony_session_id": "Telephony identifier of a call session",
      "call_from_name": "Name of the party that the phone call was from",
      "call_from_extension_number": "Extension short number of the party that the phone call was from",
      "call_to_location": "Location of the party that the phone call was made to",
      "call_to_name": "Name of the party that the phone call was made to",
      "call_format": "Type of call (voice or fax)",
      "call_type": "Internal type of call (i.e. local, long distance, etc.)",
      "call_direction": "Call direction (inbound or outbound)",
      "call_action": "The internal action corresponding to the call operation (i.e. accept call, barge in call, call return, etc.)",
      "call_result": "Result of the call operation (i.e. abandoned, accepted, busy, etc.)",
      "call_result_reason": "Result reason of the call operation",
      "call_result_description": "More notes about the result of the call operation",
      "has_short_recording": "Indicates that the recording is too short and therefore wouldn't be returned",
      "call_legs": "Contains all the legs of the call (i.e. activity within the call)",
      "call_duration": "Total call duration in seconds",
      "call_started_at": "The call start time in UTC",
      "extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "extension": "Information about extension on whose behalf a call is initiated. For Secretary call log the Boss extension info is returned",
      "recording_information": "Call recording data. Returned if the call was recorded",
      "ringcentral_uri": "Canonical URI of a call log record"
    }
  },
  "stg_app__instant_pay_users": {
    "description": "Staging model for data coming from the application's instant pay users table\n",
    "columns": {
      "instant_pay_user_id": "Primary key, unique indentifier for the instant pay user\n",
      "worker_id": "",
      "workplace_id": "",
      "reason": "",
      "type": "",
      "performed_by_email": "",
      "is_prohibited": "",
      "created_at": "",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "app_exclusions_stg": {
    "description": "DEPRECATED - Use stg_app__exclusions if any analysis with exclusions is needed. Note: dim_workplaces or dim_workers has exclusion metrics integrated into these tables and can also be used instead.",
    "columns": {}
  },
  "stg_wfm_airtable__managers": {
    "description": "Model to transform and rename columns from the Managers table in Airtable.",
    "columns": {
      "manager_id": "Unique identifier for the manager in Airtable.",
      "manager_name": "Name of the manager.",
      "team_details": "Comma-separated string of team details associated with the manager.",
      "imported_table": "Name of the imported table associated with the manager.",
      "count_of_team_members": "Total count of team members managed by the manager.",
      "airtable_table_name": "Name of the Airtable table containing manager information.",
      "airtable_created_time": "Timestamp of when the manager's record was created in Airtable.",
      "slack_id": "Slack ID of the manager or team lead."
    }
  },
  "fct_shift_offers": {
    "description": "fact table for shift offers, where each records represents a single shift offer",
    "columns": {
      "shift_offer_id": "Primary key, unique identifier for the shift offer\n",
      "worker_id": "Identifier for the worker associated with this offer",
      "display_id": "Unique identifier for the shift offer that we return through the service's API",
      "shift_id": "Identifier for the shift associated with this offer",
      "amount": "The pay amount shown to the worker",
      "rules_output": "Set of rules applied to the offer each with the amount used to calculate pay",
      "qualification": "The worker's qualification",
      "charge_in_minor_units": "The workplace's charge amount",
      "shift_offer_created_at": "The shift offer's creation timestamp",
      "shift_offer_expires_at": "The shift offer's expiration timestamp",
      "shift_offer_refresh_at": "A new pay/offer will not be generated for a worker before this timestamp",
      "shift_offer_claimed_at": "The shift offer's claimed timestamp"
    }
  },
  "fct_placements": {
    "description": "Fact table containing placement data, including details about facilities. This table joins placement data with workplace information, adding the is_prospect field.\n",
    "columns": {
      "placement_id": "Primary key, unique identifier for the placement",
      "workplace_id": "Identifier for the workplace associated with the placement",
      "is_prospect": "Flag indicating if the facility is a prospect or not",
      "status": "Status of the placement",
      "title": "Title of the placement",
      "description": "Description of the placement",
      "job_types": "Types of jobs associated with the placement",
      "shift_types": "Types of shifts associated with the placement",
      "worker_types": "Types of workers eligible for the placement",
      "hiring_poc_email": "Email of the point of contact for hiring",
      "hiring_poc_name": "Name of the point of contact for hiring",
      "created_by_id": "ID of the user who created the placement",
      "created_by_user_type": "Type of user who created the placement",
      "perks": "Perks associated with the placement",
      "sign_on_bonus_amount": "Sign-on bonus amount for the placement, in minor units",
      "original_job_link": "Original job posting link, if any",
      "pay_range_min_pay_amount": "Minimum pay amount for the placement, in minor units",
      "pay_range_max_pay_amount": "Maximum pay amount for the placement, in minor units",
      "created_at": "Timestamp when the placement record was created",
      "updated_at": "Timestamp when the placement record was last updated",
      "ingested_at": "Timestamp when the placement data was ingested into the system",
      "loaded_at": "Timestamp when the placement data was loaded into the data warehouse"
    }
  },
  "sf_user_stg": {
    "description": "",
    "columns": {}
  },
  "low_fill_new_market_v1": {
    "description": "",
    "columns": {}
  },
  "stg_invoiced_api__transactions": {
    "description": "Contains a log of changes to transactions from the invoice provider",
    "columns": {
      "transaction_event_id": "Unique identifier to the log of changes to transactions",
      "transaction_id": "Transaction identifier",
      "customer_id": "Customer identifer",
      "invoice_id": "Invoice identifier",
      "payment_id": "Payment identifer",
      "transaction_type": "Transaction type (i.e. payment, charge, etc.)",
      "payment_method": "Payment method (i.e. check, ach, etc.)",
      "status": "Transaction status",
      "currency_code": "3-letter ISO currency code",
      "amount": "Total transaction amount",
      "transaction_date": "Transaction date",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "_airbyte_meta": "Airbyte metadata",
      "pdf_url": "URL where receipt PDF can be downloaded"
    }
  },
  "hcf_total_dnr": {
    "description": "",
    "columns": {}
  },
  "stg_zendesk__ticket_forms": {
    "description": "staging model for zendesk ticket forms",
    "columns": {
      "ticket_form_id": "unique identifier for the ticket form",
      "ticket_field_ids": "ids of the ticket fields in the ticket form",
      "restricted_brand_ids": "TBD",
      "ticket_form_name": "name of the ticket form",
      "ticket_form_raw_name": "raw name of the ticket form",
      "display_name": "display name of the ticket form",
      "raw_display_name": "raw display name of the ticket form",
      "ticket_form_url": "url of the ticket form",
      "position": "TBD",
      "is_default": "is default form",
      "is_active": "is active form",
      "is_end_user_visible": "is end user visible form",
      "is_in_all_brands": "TBD",
      "agent_conditions": "TBD",
      "end_user_conditions": "TBD",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of record update",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "postless_months_shifts": {
    "description": "",
    "columns": {}
  },
  "fct_zendesk__payments_tickets": {
    "description": "Fact model for Payments-related Zendesk tickets. This model includes ticket details, requester and assignee information, ticket form metadata, and key custom fields related to payments escalations and inquiries.\n",
    "columns": {
      "ticket_id": "The unique ID of the Zendesk ticket.",
      "requester_id": "The unique ID of the ticket requester.",
      "submitter_id": "The unique ID of the ticket submitter.",
      "assignee_id": "The unique ID of the ticket assignee.",
      "organization_id": "The unique ID of the organization associated with the ticket.",
      "group_id": "The unique ID of the Zendesk group associated with the ticket.",
      "brand_id": "The unique ID of the Zendesk brand associated with the ticket.",
      "ticket_form_id": "The unique ID of the ticket form.",
      "recipient": "The recipient of the ticket.",
      "requester_name": "The name of the ticket requester.",
      "requester_email": "The email address of the ticket requester.",
      "assignee_name": "The name of the ticket assignee.",
      "assignee_email": "The email address of the ticket assignee.",
      "assignee_supervisor": "The supervisor of the ticket assignee.",
      "assignee_role": "The role of the ticket assignee.",
      "assignee_company": "The company of the ticket assignee.",
      "type": "The type of the ticket.",
      "subject": "The subject or title of the ticket.",
      "description": "The description of the ticket.",
      "status": "The current status of the ticket.",
      "tags": "The tags associated with the ticket.",
      "ticket_form": "The name of the ticket form.",
      "ticket_status": "The status of the ticket as captured from custom fields.",
      "escalated_ticket": "Indicates if the ticket has been escalated.",
      "escalated_team": "The team handling the escalation.",
      "payments_reason_for_contact": "The reason for contact related to payments.",
      "shift_id": "The shift ID associated with the ticket.",
      "cf_total_time_spent_sec": "The total time spent on the ticket in seconds.",
      "cf_time_spent_last_update_sec": "The time spent on the last ticket update in seconds.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "created_at_pst": "Timestamp of when the record was created. Converted to Pacific Standard Time",
      "updated_at_pst": "timestamp of when the record was last updated. Converted to Pacific Standard Time"
    }
  },
  "pa_dashboard_Worker_Cancels_to_Claimed_Shifts_PA_vs_NonPA_Start_Time": {
    "description": "",
    "columns": {}
  },
  "dso_proxy_period_start_week": {
    "description": "",
    "columns": {}
  },
  "stg_salesforce__opportunities": {
    "description": "Represents an opportunity, which is a sale or pending deal.\n",
    "columns": {
      "opportunity_id": "ID of the opportunity.\n",
      "owner_id": "ID of the User who has been assigned to work this opportunity. If you update this field, the previous owner's access becomes Read Only or the access specified in your organization-wide default for opportunities, whichever is greater.\n",
      "account_id": "ID of the account associated with this opportunity.\n",
      "contact_id": "ID of the contact associated with this opportunity, set as the primary contact. Read-only field that is derived from the opportunity contact role, which is created at the same time the opportunity is created. This field can only be populated when it\u2019s created, and can\u2019t be updated.\n",
      "campaign_id": "ID of a related Campaign. This field is defined only for those organizations that have the campaign feature Campaigns enabled. The User must have read access rights to the cross-referenced Campaign object in order to create or update that campaign into this field on the opportunity.\n",
      "contract_id": "ID of the contract that\u2019s associated with this opportunity.\n",
      "created_by_id": "TO DO",
      "pricebook2_id": "ID of a related Pricebook2 object. The Pricebook2Id field indicates which Pricebook2 applies to this opportunity. The Pricebook2Id field is defined only for those organizations that have products enabled as a feature. You can specify values for only one field (Pricebook2Id or PricebookId)\u2014not both fields. For this reason, both fields are declared nillable.\n",
      "territory2_id": "The ID of the territory that is assigned to the opportunity. Available only if Enterprise Territory Management has been enabled for your organization.\n",
      "activity_metric_id": "TO DO",
      "record_type_id": "ID of the record type assigned to this object.\n",
      "synced_quote_id": "Read only in an Apex trigger. The ID of the Quote that syncs with the opportunity. Setting this field lets you start and stop syncing between the opportunity and a quote. The ID has to be for a quote that is a child of the opportunity.\n",
      "last_modified_by_id": "TO DO",
      "hcf_inbound_form_id": "TO DO",
      "sf_opportunity_id": "TO DO",
      "cbh_app_contact_id": "TO DO",
      "last_amount_changed_history_id": "ID of the OpportunityHistory record that contains information about when the opportunity Amount field was last updated in Winter \u201921 or later. Information includes the date and time of the change and the user who made the change. Available in API version 50.0 and later.\n",
      "hcf_inbound_form_gcl_id": "TO DO",
      "hcf_inbound_form_fbcl_id": "TO DO",
      "hcf_inbound_form_msclk_id": "TO DO",
      "last_close_date_changed_history_id": "ID of the OpportunityHistory record that contains information about when the opportunity Close Date field was last updated in Winter \u201921 or later. Information includes the date and time of the change and the user who made the change.\n",
      "name": "Required. A name for this opportunity. Limit: 120 characters.\n",
      "type": "Type of opportunity. For example, Existing Business or New Business. Label is Opportunity Type.\n",
      "is_won": "Directly controlled by StageName. You can query and filter on this field, but you can\u2019t directly set the value. It can only be set via StageName. Label is Won.\n",
      "pt": "TO DO",
      "rn": "TO DO",
      "amount": "Estimated total sale amount. For opportunities with products, the amount is the sum of the related products. Any attempt to update this field, if the record has products, will be ignored. The update call will not be rejected, and other fields will be updated as specified, but the Amount will be unchanged.\n",
      "cna": "TO DO",
      "fiscal": "If fiscal years are not enabled, the name of the fiscal quarter or period in which the opportunity CloseDate falls. Value should be in YYY Q format, for example, '2006 1' for first quarter of 2006.\n",
      "lvn": "TO DO",
      "mlt": "TO DO",
      "pta": "TO DO",
      "crna": "TO DO",
      "is_closed": "Directly controlled by StageName. You can query and filter on this field, but you can\u2019t directly set it in a create, upsert, or update request. It can only be set via StageName. Label is Closed.\n",
      "next_step": "Description of next task in closing opportunity. Limit: 255 characters.\n",
      "or_rn": "TO DO",
      "phone": "TO DO",
      "active": "TO DO",
      "is_deleted": "Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is Deleted.\n",
      "push_count": "The number of times an opportunity\u2019s close date has been pushed out by one calendar month. For example, moving a close date from April to May counts as one push, but moving from April 1 to April 30 doesn't count. The total is not decreased when the close date is moved in.\n",
      "stage_name": "Required. Current stage of this record. The StageName field controls several other fields on an opportunity. Each of the fields can be directly set or implied by changing the StageName field. In addition, the StageName field is a picklist, so it has additional members in the returned describeSObjectResult to indicate how it affects the other fields. To obtain the stage name values in the picklist, query the OpportunityStage object. If the StageName is updated, then the ForecastCategoryName, IsClosed, IsWon, and Probability are automatically updated based on the stage-category mapping.\n",
      "fiscal_year": "Represents the fiscal year, for example, 2006.\n",
      "lead_source": "Source of this opportunity, such as Advertisement or Trade Show.",
      "metrics": "TO DO",
      "pacu_rn": "TO DO",
      "tactics": "TO DO",
      "agency_1": "TO DO",
      "agency_2": "TO DO",
      "agency_3": "TO DO",
      "champion": "TO DO",
      "description": "Text description of the opportunity. Limit: 32,000 characters.\n",
      "probability": "Percentage of estimated confidence in closing the opportunity. It is implied, but not directly controlled, by the StageName field. You can override this field to a different value than what is implied by the StageName.\n",
      "legal_co": "TO DO",
      "spd_tech": "TO DO",
      "agent_req": "TO DO",
      "caregiver": "TO DO",
      "hcp_stage": "TO DO",
      "rn_shifts": "TO DO",
      "surg_tech": "TO DO",
      "cna_shifts": "TO DO",
      "competitor": "TO DO",
      "conference": "TO DO",
      "cross_sell": "TO DO",
      "fiscal_quarter": "Represents the fiscal quarter. Valid values are 1, 2, 3, or 4.\n",
      "has_overdue_task": "Indicates whether an opportunity has an overdue task (true) or not (false).\n",
      "has_open_activity": "Indicates whether an opportunity has an open event or task (true) or not (false).\n",
      "latest_nps": "TO DO",
      "valid_lead": "TO DO",
      "account_fsp": "TO DO",
      "gtm_account": "TO DO",
      "loss_reason": "TO DO",
      "meg_surg_rn": "TO DO",
      "sdr_manager": "TO DO",
      "account_type": "TO DO",
      "churn_reason": "TO DO",
      "churn_signal": "TO DO",
      "key_am_goals": "TO DO",
      "meeting_plan": "TO DO",
      "phlebotomist": "TO DO",
      "quoted_rates": "TO DO",
      "sdr_teammate": "TO DO",
      "secondary_am": "TO DO",
      "validated_by": "TO DO",
      "account_state": "TO DO",
      "churn_reasonx": "TO DO",
      "forecast_category": "Restricted picklist field. It is implied, but not directly controlled, by the StageName field. You can override this field to a different value than is implied by the StageName value. The values of this field are fixed enumerated values. The field labels are localized to the language of the user performing the operation, if localized versions of those labels are available for that language in the user interface. Possible values are:\n  - BestCase\n  - Closed\n  - Forecast\n  - MostLikely\n  - Omitted\n  - Pipeline\n",
      "identify_pain": "TO DO",
      "validated_on": "TO DO",
      "maple_product": "TO DO",
      "ob_attendee_1": "TO DO",
      "ob_attendee_2": "TO DO",
      "ob_attendee_3": "TO DO",
      "projected_gmv": "TO DO",
      "rate_estimate": "TO DO",
      "connected_with": "TO DO",
      "decision_maker": "TO DO",
      "economic_buyer": "TO DO",
      "holiday_factor": "TO DO",
      "lvn_lpn_shifts": "TO DO",
      "last_contacted": "TO DO",
      "primary_user_1": "TO DO",
      "primary_user_2": "TO DO",
      "sign_up_reason": "TO DO",
      "sourcing_stage": "TO DO",
      "am_account_type": "TO DO",
      "anesthesia_tech": "TO DO",
      "anticipated_fsp": "TO DO",
      "med_tech_shifts": "TO DO",
      "primary_contact": "TO DO",
      "conference_name": "TO DO",
      "budget_confirmed": "TO DO",
      "caregiver_shifts": "TO DO",
      "confidence_level": "TO DO",
      "contest_approved": "TO DO",
      "decision_process": "TO DO",
      "detailed_updates": "TO DO",
      "fsp_travel_block": "TO DO",
      "gong__gong_count": "TO DO",
      "hcp_types_needed": "TO DO",
      "maple_usage_type": "TO DO",
      "opp_created_date": "TO DO",
      "pre_call_context": "TO DO",
      "rn_rate_estimate": "TO DO",
      "referral_details": "TO DO",
      "referred_contact": "TO DO",
      "referring_worker": "TO DO",
      "activation_signal": "TO DO",
      "closing_sales_rep": "TO DO",
      "days_btwn_ofc_gld": "TO DO",
      "days_btwn_ofc_old": "TO DO",
      "decision_criteria": "TO DO",
      "forecast_category_name": "The name of the forecast category. It is implied, but not directly controlled, by the StageName field. You can override this field to a different value than is implied by the StageName value. Possible values are:\n  - Best Case\n  - Closed\n  - Commit\n  - Most Likely\n  - Omitted\n  - Pipeline\n",
      "lvn_rate_estimate": "TO DO",
      "last_live_contact": "TO DO",
      "medical_assistant": "TO DO",
      "travel_block_lead": "TO DO",
      "am_meeting_cadence": "TO DO",
      "block_booking_call": "TO DO",
      "closed_lost_reason": "TO DO",
      "current_fill_rates": "TO DO",
      "medical_technician": "TO DO",
      "negotiation_reason": "TO DO",
      "self_onbording_hcf": "TO DO",
      "shift_estimate_hrs": "TO DO",
      "travel_block_rates": "TO DO",
      "travel_sourcing_on": "TO DO",
      "competitor_discount": "TO DO",
      "discovery_completed": "TO DO",
      "has_opportunity_line_item": "Read-only field that indicates whether the opportunity has associated line items. A value of true means that Opportunity line items have been created for the opportunity. An opportunity can have opportunity line items only if the opportunity has a price book. The opportunity line items must correspond to PricebookEntry objects that are listed in the opportunity Pricebook2. However, you can insert opportunity line items on an opportunity that does not have an associated Pricebook2. For the first opportunity line item that you insert on an opportunity without a Pricebook2, the API automatically sets the Pricebook2Id field, if the opportunity line item corresponds to a PricebookEntry in an active Pricebook2 that has a CurrencyIsoCode field that matches the CurrencyIsoCode field of the opportunity. If the Pricebook2 is not active or the CurrencyIsoCode fields do not match, then the API returns an error. You can\u2019t update the Pricebook2Id or PricebookId fields if opportunity line items exist on the Opportunity. You must delete the line items before attempting to update the PricebookId field.\n",
      "hazard_differential": "TO DO",
      "np_nurse_practioner": "TO DO",
      "orientation_details": "TO DO",
      "overtime_charge_fee": "TO DO",
      "parent_account_name": "TO DO",
      "payroll_vendor_used": "TO DO",
      "reactivation_reason": "TO DO",
      "testimonial_details": "TO DO",
      "type_of_opp_handoff": "TO DO",
      "cross_sell_completed": "TO DO",
      "date_first_demo_held": "TO DO",
      "expected_utilization": "TO DO",
      "first_demo_completed": "TO DO",
      "hcfinboundform_tblci": "TO DO",
      "hha_home_health_aide": "TO DO",
      "incumbent_scheduling": "TO DO",
      "key_decision_maker_1": "TO DO",
      "key_decision_maker_2": "TO DO",
      "number_of_facilities": "TO DO",
      "orientation_required": "TO DO",
      "sdr_teammate_manager": "TO DO",
      "sales_pitch_approach": "TO DO",
      "travel_block_contact": "TO DO",
      "weekend_differential": "TO DO",
      "conference_touchpoint": "TO DO",
      "customer_satisfaction": "TO DO",
      "gong__maincompetitors": "TO DO",
      "urgent_shifts_product": "TO DO",
      "use_case_biggest_pain": "TO DO",
      "was_referral_provided": "TO DO",
      "activation_delay_notes": "TO DO",
      "annual_escalation_rate": "TO DO",
      "contract_storage_place": "TO DO",
      "corporate_sdr_teammate": "TO DO",
      "cross_sell_opportunity": "TO DO",
      "hcf_inbound_form_how_soon": "TO DO",
      "how_did_you_hear_of_us": "TO DO",
      "last_in_person_meeting": "TO DO",
      "maple_feature_requests": "TO DO",
      "next_meeting_date_time": "TO DO",
      "nurse_patient_ratio_rn": "TO DO",
      "roi_analysis_completed": "TO DO",
      "reac_stalled_follow_up": "TO DO",
      "sourcing_notes_details": "TO DO",
      "caregiver_rate_estimate": "TO DO",
      "close_summary_loom_link": "TO DO",
      "customer_feedback_notes": "TO DO",
      "hcf_inbound_form_form_name": "TO DO",
      "hcf_inbound_form_utm_term": "TO DO",
      "key_facility_priorities": "TO DO",
      "loss_reason_explanation": "TO DO",
      "maple_product_purchased": "TO DO",
      "nurse_patient_ratio_cna": "TO DO",
      "nurse_patient_ratio_lvn": "TO DO",
      "timekeeping_vendor_used": "TO DO",
      "unqualified_opportunity": "TO DO",
      "accounts_payable_contact": "TO DO",
      "core_lead_score_at_close": "TO DO",
      "corporate_dashboard_link": "TO DO",
      "customer_requested_rates": "TO DO",
      "immediate_staffing_needs": "TO DO",
      "non_clinical_staff_needs": "TO DO",
      "opportunity_sourced_from": "TO DO",
      "opportunity_stemmed_from": "TO DO",
      "rates_discussed_response": "TO DO",
      "weekday_noc_differential": "TO DO",
      "hcf_inbound_form_utm_medium": "TO DO",
      "hcf_inbound_form_utm_source": "TO DO",
      "core_call_list_at_creation": "TO DO",
      "did_you_request_a_referral": "TO DO",
      "hcfinboundform_utm_content": "TO DO",
      "incumbent_scheduling_notes": "TO DO",
      "travel_block_shift_details": "TO DO",
      "was_a_testimonial_provided": "TO DO",
      "check_if_no_appt_was_needed": "TO DO",
      "core_lead_score_at_creation": "TO DO",
      "date_added_to_cbh_app": "TO DO",
      "hcf_inbound_form_facility_type": "TO DO",
      "hcf_inbound_form_utm_campaign": "TO DO",
      "is_excluded_from_territory_2_filter": "Used for Filter-Based Opportunity Territory Assignment. Indicates whether the opportunity is excluded (True) or included (False) each time the APEX filter is executed.\n",
      "manager_at_time_of_creation": "TO DO",
      "phoneburner__trackingnumber": "TO DO",
      "salesloft1__primary_contact": "TO DO",
      "travel_block_needs_hcp_type": "TO DO",
      "corporate_parent_opportunity": "TO DO",
      "days_till_first_shift_filled": "TO DO",
      "manager_paid_appt_commission": "TO DO",
      "related_facility_opportunity": "TO DO",
      "weekday_evening_differential": "TO DO",
      "which_msas_would_they_launch": "TO DO",
      "days_till_first_shift_request": "TO DO",
      "did_you_request_a_testimonial": "TO DO",
      "facility_shift_confirm_needed": "TO DO",
      "rn_shift_estimate_hrs_monthly": "TO DO",
      "signed_contract_link_on_drive": "TO DO",
      "what_s_our_desired_end_result": "TO DO",
      "lvn_shift_estimate_hrs_monthly": "TO DO",
      "opportunity_stemmed_from_notes": "TO DO",
      "self_signup_contacted_facility": "TO DO",
      "estimated_of_shifts_needed_week": "TO DO",
      "hcfinboundform_gtm_campaign_url": "TO DO",
      "manager_paid_closing_commission": "TO DO",
      "what_msas_do_we_both_operate_in": "TO DO",
      "direct_hire_fee_over_1560_hrs_yr": "TO DO",
      "core_call_list_reason_at_creation": "TO DO",
      "direct_hire_fee_under_1560_hrs_yr": "TO DO",
      "msas_they_operate_in_that_we_don_t": "TO DO",
      "what_do_we_want_to_get_out_of_this": "TO DO",
      "workforce_management_process_notes": "TO DO",
      "of_locations_interested_in_signing": "TO DO",
      "days_from_won_till_ob_call_complete": "TO DO",
      "days_from_won_till_ob_form_complete": "TO DO",
      "hours_charged_for_hcp_sent_half_day": "TO DO",
      "caregiver_shift_estimate_hrs_monthly": "TO DO",
      "core_lead_score_explanation_at_close": "TO DO",
      "days_from_opp_creation_to_closed_won": "TO DO",
      "days_from_won_till_ob_email_complete": "TO DO",
      "hours_charged_for_24_hr_cancellation": "TO DO",
      "salesloft1__most_recent_cadence_name": "TO DO",
      "number_of_check_ins_before_graduation": "TO DO",
      "account_expansion_growth_opportunities": "TO DO",
      "forty_eight_hour_rush_fee_differential": "TO DO",
      "what_services_are_they_currently_using": "TO DO",
      "core_lead_score_explanation_at_creation": "TO DO",
      "hrs_charged_for_hcp_sent_home_half_shift": "TO DO",
      "amount_added_to_rates_for_extended_terms": "TO DO",
      "salesloft1__most_recent_last_completed_step": "TO DO",
      "is_q3_q4_50_off_offered": "Whether or not this opportunity was part of the 50% discount experiment",
      "how_did_they_hear_about_us": "How did the HCF hear about CBH",
      "what_channel_did_they_come_through": "What channel did the HCF come through as a lead",
      "system_mod_stamp": "TO DO",
      "last_viewed_date": "The timestamp when the current user last viewed this record or list view. If this value is null, the user might have only accessed this record or list view (LastReferencedDate) but not viewed it.\n",
      "close_date": "Required. Date when the opportunity is expected to close.\n",
      "created_date": "TO DO",
      "close_date_5": "TO DO",
      "go_live_date": "TO DO",
      "qualified_date": "TO DO",
      "close_date_10": "TO DO",
      "close_date_15": "TO DO",
      "close_date_25": "TO DO",
      "close_date_50": "TO DO",
      "close_date_60": "TO DO",
      "close_date_70": "TO DO",
      "close_date_80": "TO DO",
      "close_date_85": "TO DO",
      "go_live_date2": "TO DO",
      "last_activity_date": "Value is one of the following, whichever is the most recent:\n  - Due date of the most recent event logged against the record.\n  - Due date of the most recently closed task associated with the record.\n",
      "last_modified_date": "TO DO",
      "graduation_date": "TO DO",
      "last_referenced_date": "The timestamp when the current user last accessed this record, a record related to this record, or a list view.\n",
      "last_stage_change_date": "The date of the last change made to the Stage field on this opportunity record.\n",
      "est_onboarding_call_date": "TO DO",
      "cw_stalled_follow_up_date": "TO DO",
      "contract_sent_with_intent_to_sign_date": "TO DO",
      "onboarding_first_call_date": "TO DO",
      "last_meeting_date": "TO DO",
      "next_meeting_date": "TO DO",
      "first_meeting_date": "TO DO",
      "proposal_sent_date": "TO DO",
      "free_trial_end_date": "TO DO",
      "onboarding_launch_date": "TO DO",
      "contract_execution_date": "TO DO",
      "activation_delay_notes_last_updated_at": "TO DO",
      "date_opp_became_closed": "TO DO",
      "date_of_last_owner_change": "TO DO",
      "date_of_last_shift_request": "TO DO",
      "date_of_first_shift_request": "TO DO",
      "date_of_latest_referral_ask": "TO DO",
      "date_last_schedule_published": "TO DO",
      "date_of_latest_testimonial_ask": "TO DO",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "channel_category": "Category of channel that the sale stemmed from",
      "probability_of_activation": "Estimated likelihood that the opp will result in a gross add",
      "rollout": "Type of rollout plan that will be followed assuming the sale closes",
      "phase_1_expected_buildings": "Estimated number of buildings that will enroll during phase 1 of the rollout",
      "phase_2_expected_buildings": "Estimated number of buildings that will enroll during phase 2 of the rollout",
      "est_activation_date": "Estimated date that the account will activate",
      "phase_1_activation_date": "Estimated date that phase 1 accounts will activate",
      "phase_2_activation_date": "Estimated date that phase 2 accounts will activate",
      "exclude_from_mto_attribution": "Set to true in cases where the opportunity is not attributable to an MTO event",
      "mto_attributable": "If the opportunity is attributable to an MTO event",
      "mto_event": "The MTO event that the opportunity is attributable to",
      "source": "To Do",
      "medium": "To Do",
      "relationship_to_parent": "To Do",
      "how_parent_was_sourced": "To Do"
    }
  },
  "stg_docs__document_logs": {
    "description": "Staging table containing the logs for worker documents",
    "columns": {
      "document_log_id": "Primary key, unique identifier to the document log",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "document_id": "Identifies the document that is associated to a worker",
      "performed_by_id": "Identifies who performed the action as denoted by the performed_type. This will indicate where this ID can be joined to (i.e. worker_id etc.)",
      "bulk_worker_ids": "In the instance that the action impacted multiple documents/workers as a bulk process, this field contains the object with the impacted worker IDs",
      "bulk_document_ids": "In the instance that the action impacted multiple documents/workers as a bulk process, this field contains the object with the impacted document IDs",
      "action": "The action type that was performed (i.e. document_uploaded, document_updated, etc.)",
      "performed_by_type": "The type of user who performed the update (i.e. admin, worker, etc.)",
      "updated_type": "The type of update that was made on the document if the action type was DOCUMENT_UPDATED",
      "notification": "Contents of the notification sent to the worker, if applicable",
      "is_deleted": "If the document was deleted from the source, then TRUE",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake",
      "document": "The object containing details about the document. This is NULL for bulk updates",
      "metadata": "If the document was verified by Camber (automated service), this is the details of the verfication"
    }
  },
  "app_agent_primary_qualification": {
    "description": "",
    "columns": {}
  },
  "utilization_metrics": {
    "description": "",
    "columns": {}
  },
  "fct_tns_incident_general_tickets": {
    "description": "This model contains Trust & Safety tickets from the 'T&S General' and 'T&S Incident Reports' Zendesk forms. It includes custom fields related to HCPs, facilities, categorization, ticket type, incident cause, and more.\n",
    "columns": {
      "ticket_id": "Unique identifier for the Zendesk ticket",
      "subject": "Subject of the ticket",
      "requester_id": "ID of the user who submitted the ticket",
      "assignee_id": "ID of the user assigned to the ticket",
      "organization_id": "ID of the organization",
      "brand_id": "ID of the Zendesk brand",
      "requester_name": "Name of the ticket requester",
      "requester_email": "Email of the ticket requester",
      "assignee_name": "Name of the ticket assignee",
      "assignee_email": "Email of the ticket assignee",
      "assignee_supervisor": "Supervisor of the ticket assignee",
      "assignee_agent_role": "Agent role of the ticket assignee",
      "group_name": "Zendesk group the ticket was assigned to",
      "ticket_form_name": "Zendesk ticket form name",
      "channel": "Channel the ticket was submitted through",
      "status": "Ticket status",
      "priority": "Ticket priority",
      "recipient": "Email recipient (if applicable)",
      "description": "Ticket description",
      "ticket_type": "Ticket type",
      "ticket_tags": "Tags applied to the ticket",
      "t_s_reporter": "Who reported the incident (custom field)",
      "t_s_hcp_id": "HCP ID from the Incident form",
      "t_s_hcp_id_general": "HCP ID from the General form",
      "t_s_facility_id": "Facility ID from the Incident form",
      "t_s_facility_id_general": "Facility ID from the General form",
      "t_s_ticket_source": "Source of the ticket submission",
      "t_s_incident_cause": "Cause of the incident",
      "t_s_final_categorization": "Final categorization of the incident",
      "t_s_action_taken": "Action taken in response to the ticket",
      "t_s_should_this_count": "Whether the incident should count (Yes/No)",
      "t_s_reporter_internal": "Reporter internal designation (if applicable)",
      "t_s_related_incident": "Related incident link or reference",
      "t_s_ticket_type": "Type of T&S ticket",
      "request_urgency": "Urgency of the request",
      "t_s_report_type": "Type of report submitted",
      "total_time_spent_sec": "Total time spent on ticket (raw seconds)",
      "time_spent_last_update_sec": "Time spent on last update (raw seconds)",
      "handle_time": "Total time spent on ticket in minutes",
      "last_touch_handle_time": "Time spent on last update in minutes",
      "reopens": "Number of times the ticket was reopened",
      "replies": "Number of replies",
      "reply_time_in_minutes": "Time to first reply in minutes",
      "first_resolution_time_in_minutes": "Time to first resolution in minutes",
      "full_resolution_time_in_minutes": "Time to full resolution in minutes",
      "created_at": "Time the ticket was created",
      "initially_assigned_at": "Time the ticket was first assigned",
      "assigned_at": "Time the ticket was assigned to an agent",
      "solved_at": "Time the ticket was solved",
      "generated_timestamp": "Timestamp when the ticket was generated",
      "updated_at": "Timestamp when the ticket was last updated"
    }
  },
  "qualified_facilities_agents_ad_hoc": {
    "description": "",
    "columns": {}
  },
  "fct_worker_license_logs": {
    "description": "Fact table containing expanded items from the stg_licenses_service__worker_license_logs. There is one record per item changed within a worker liscense log.",
    "columns": {
      "worker_license_log_value_id": "Unique identifier to the expanded worker liscense log. This is a surrogate key created from a combination of the worker_liscense_log and the index of the item within the original license_update field.",
      "worker_license_log_id": "Unique identifer to the original worker license log",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "license_id": "The identifier to the worker's license ID",
      "license_action": "The action type of the change that was made and logged",
      "updated_value": "The item within the liscensing service that was actioned on",
      "new_value": "The new value of the item that was actioned on",
      "old_value": "The old/previous value of the item that was actioned on, if applicable",
      "created_by_id": "The ID of the user that created the action",
      "created_by_type": "Type of user who performed the action",
      "created_by_email": "Email of user who performed the action",
      "created_at": "Time at which action on license was recorded"
    }
  },
  "stg_google_sheets__mqr_schedule_adherence": {
    "description": "This table contains the schedule adherence data of MQR agents. loaded from Tymeshift through a Google Sheet\n",
    "columns": {
      "schedule_id": "surrogate key created from an agent's email and their scheduled day\n",
      "agent_name": "agent's full name\n",
      "agent_email": "agent's internal email\n",
      "solved_points": "number of solved tickets during the scheduled day\n",
      "adherence_rate": "adherence rate of the agent\n",
      "assigned_points": "number of assigned tickets during the scheduled day\n",
      "attended_points": "'To Be Added'\n",
      "reopened_points": "number of reopened tickets during the scheduled day\n",
      "escalated_points": "number of escalated tickets during the scheduled day\n",
      "scheduled_time": "scheduled time for the agent, in HH:MM:SS format\n",
      "total_time": "total time spent by the agent during the scheduled day, in HH:MM:SS format\n",
      "paid_time": "paid time spent by the agent during the scheduled day, in HH:MM:SS format\n",
      "paid_general_task_time": "paid time spent by the agent on general tasks during the scheduled day, in HH:MM:SS format\n",
      "unpaid_general_task_time": "unpaid time spent by the agent on general tasks during the scheduled day, in HH:MM:SS format\n",
      "time_breakdown": "scheduled day of the agent\n",
      "airbyte_extracted_at": "'Timestamp at which airbyte extracted the record from the source system'"
    }
  },
  "msa_activation_date": {
    "description": "",
    "columns": {}
  },
  "stg_kops_airtable__sop_freshness_list": {
    "description": "A staging model for SOP Freshness List data from Airtable.",
    "columns": {
      "article_id": "The unique identifier for the article.",
      "article_name": "Name of the article.",
      "created_by_email": "Email of the user who created the article.",
      "days_since_last_edit": "Number of days since the article was last edited.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "airbyte_extracted_at": "Timestamp of when the data was extracted by Airbyte."
    }
  },
  "stg_app__agent_profiles": {
    "description": "Staging model for data coming from the application's agentprofiles",
    "columns": {
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "salesforce_id": "Related Salesforce ID for the worker",
      "referrer_id": "If the worker was referred by another worker, this is the id of that worker",
      "referral_bonus_type": "Type of Referral Bonus",
      "referral_code_used": "The referral code used",
      "referral_amount_applied": "Amount applied towards referral bonus",
      "amount_paid": "Amount paid towards referral amount",
      "referral_created_at": "When referral code is applied",
      "ota_build_id": "The id for OTA builds to the worker's app",
      "first_name": "First name of the worker",
      "last_name": "Last name of the worker",
      "full_name": "Full name of the worker",
      "phone_number": "Phone number of the worker",
      "email": "Email of the worker",
      "timezone": "Timezone of the worker",
      "referral_code": "Unique referral code associated to the worker",
      "signed_contractor_agreements": "Information about the contractor agreements that were signed",
      "is_test_account": "Always false as test accounts are filtered out in this staging models",
      "ssn_encrypted": "The encrypted social security number of the worker",
      "country": "Country of the worker",
      "state": "State of the worker",
      "state_code": "Corresponding state code of the worker",
      "csa": "Combined statistical area (CSA) of the employee based on their location",
      "msa": "Metropolitan statistical area (MSA) of the employee based on their location",
      "city": "City of the worker",
      "postal_code": "Postal code of the worker",
      "region": "Region/county of the worker",
      "formatted_address": "Formatted address of the worker",
      "distance_preference": "Distance preference of the worker for shifts, in miles",
      "location_1": "No additional info found about this field",
      "location_2": "No additional info found about this field",
      "qualification": "The qualification of the worker (i.e. CNA, LVN, etc.)",
      "other_qualification": "Any additional qualifications of the worker",
      "account_stage": "The current stage of the worker's account (i.e. onboarding, deactivated etc.)",
      "is_activated": "If the worker's account is activated then TRUE",
      "longitude": "The longitude of the worker",
      "latitude": "The latitude of the worker",
      "profile_image_url": "if the worker has a profile image, this is the URL. Potentially deprecated field",
      "profile_image_file_storage_file_key": "Directory/location/name of the profile image in its storage location within S3 bucket",
      "profile_image_file_storage_root_folder": "The storage root folder where the worker's profile image is stored (S3 bucket)",
      "app_version": "The current app version of the user/worker",
      "app_platform": "The current app platform of the user/worker",
      "os_push_notification_permission": "The OS push notification permission status of the user/worker",
      "license_state": "State where the worker is currently licensed",
      "signup_stage": "The stage of signup that the worker is currently on within the app",
      "is_manual_msa": "If the MSA of the worker is manually set, then TRUE",
      "is_approximate_msa": "If the MSA of the worker is approximate, then TRUE",
      "has_show_referral_alert_enabled": "No additional info about this field",
      "has_push_notifications_enabled": "If the worker has push notifications enabled on the app, then TRUE",
      "has_sms_notifications_enabled": "If the worker has sms notifications enabled on the app, then TRUE",
      "has_notifications_off": "If the worker has notifications turned off, then TRUE",
      "has_urgent_shift_notifications_enabled": "If the worker has notifications for available urgent shifts enabled, then TRUE",
      "urgent_shift_notification_snoozed_days": "The number of days that the urgent shift notification is snoozed for, if applicable",
      "has_priority_access_notifications_enabled": "If the worker has notifications priority access shifts enabled, then TRUE",
      "has_a_team_push_notifications_enabled": "If the worker has A Team push notifications enabled, then TRUE. These notifications are also called Priority Plus notifications for workplaces",
      "has_marketing_push_enabled": "If the worker has marketing push notifications enabled, then TRUE",
      "has_marketing_email_enabled": "If the worker has marketing email notifications enabled, then TRUE",
      "has_marketing_sms_enabled": "If the worker has marketing sms notifications enabled, then TRUE",
      "has_profile_image": "If the worker has a profile image uploaded to the app, then TRUE",
      "has_hide_as_colleague_on_shifts_enabled": "No additional info about this field",
      "has_location_enabled": "If the worker has location enabled on the app, then TRUE",
      "is_precise_location_enabled": "If the worker has precise location enabled on the app, then TRUE",
      "location_permission": "The location permissions for the worker (i.e. location always, when the app is in use, etc.)",
      "is_signup_initiated": "If the worker has initiated signup stage on the app, then TRUE",
      "is_signup_completed": "If the worker has completed signup, then TRUE",
      "is_higher_rate_enabled": "Whether or not the agent is enabled for a higher rate",
      "rate": "Rate in agentprofile mongo document",
      "number_of_future_shifts_staffed": "The number of upcoming shifts for the worker, if applicable",
      "attendance_pct": "Percentage of attendance (i.e. completed_shifts/all shifts)",
      "completed_shifts": "Number of shifts completed",
      "cancelled_shifts": "Number of shifts cancelled",
      "instant_pay_rate": "No additional info about this field",
      "num_no_call_no_show": "Number of shifts where the worker was a no call no show (excused + unexcused)",
      "num_excused_no_call_no_show": "Number of shifts where the worker had an excused no call no show (NCNS)",
      "num_unexcused_no_call_no_show": "Number of shifts where the worker had an unexcused no call no show (NCNS)",
      "cancel_credit_count": "No additional info about this field",
      "verified_shift_streak_count": "If the worker has an active streak of verified shifts, this is that count",
      "created_at": "Timestamp of when the record was created",
      "created_week": "The date of the week that the shift was created, with the week starting on Mondays",
      "last_logged_in_at": "Timestamp of the worker's last login to the app",
      "next_shift_at": "Timestamp of the worker's next shift, if applicable",
      "future_shifts_staffed_last_updated_at": "Timestamp of the last update to the 'Number of future shifts staffed' field",
      "last_worked_at": "Timestamp of the last shift worked",
      "updated_at": "timestamp of when the record was last updated",
      "signup_completed_at": "Timestamp of when signup was completed, if applicable",
      "urgent_shift_notification_snoozed_at": "If the worker snoozed urgent shift notifications, this is the timestamp when they did so",
      "home_health_enabled": "If the worker has home health enabled, then TRUE",
      "is_deleted": "If the worker has been deleted, then TRUE",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "app_instantpayshifts_stg": {
    "description": "DEPRECATED - use stg_app__instant_pay_shifts for analysis/definitions. Note: fct_shifts has instant pay metrics integrated into this table and can also be used instead.",
    "columns": {
      "id": "Primary key."
    }
  },
  "fct_zendesk_wops__tickets": {
    "description": "Fact model for all Worker Ops customer-facing tickets, includes the following policies: General Policy, Payments, Account Status Requests, General Assistance, Shift Attendance, and Urgent Shift Triage.\n",
    "columns": {
      "ticket_id": "Unique identifier for each ticket",
      "requester_id": "Zendesk ID for the user who requested the ticket",
      "assignee_id": "Zendesk ID for the user assigned to the ticket",
      "requester_external_id": "External ID for the requester, usually maps to their CBH ID",
      "assignee_external_id": "External ID for the assignee, usually maps to their CBH ID",
      "shift_id": "CBH ID for the shift for which the ticket was created",
      "group_id": "Zendesk ID for the group handling the ticket",
      "ticket_form_id": "Zendesk ID for the form used to create the ticket",
      "requester_name": "Name of the requester",
      "requester_email": "Email address of the requester",
      "assignee_name": "Name of the agent assigned to the ticket",
      "assignee_email": "Email address of the agent assigned to the ticket",
      "assignee_supervisor": "Supervisor of the agent assigned to the ticket",
      "assignee_role": "Role of the agent assigned to the ticket",
      "group_name": "Name of the group handling the ticket",
      "ticket_form_name": "Name of the form used to create the ticket",
      "channel": "Channel through which the ticket was submitted",
      "status": "Current status of the ticket",
      "general_policy_reason_for_contact": "Reason for contact related to General Policy",
      "payments_reason_for_contact": "Reason for contact related to Payments Policy",
      "account_status_requests_reason_for_contact": "Reason for contact related to Account Status Requests Policy",
      "general_assistance_reason_for_contact": "Reason for contact related to General Assistance Policy",
      "shift_attendance_reason_for_contact": "Reason for contact related to Shift Attendance Policy",
      "urgent_shift_triage_reasons_for_contact": "Urgent reasons for contact related to Shift Triage Policy",
      "team_reporting_issue__tech_support": "Which team reported the tech support issue",
      "hcp_servicesfeatures_impacted__tech_support": "Healthcare provider services/features impacted by tech support issue",
      "ticket_outcome__tech_support": "Outcome of the ticket related to tech support",
      "ticket_tags": "Zendesk tags associated with the ticket",
      "escalated_ticket": "Indicates if the ticket was escalated",
      "escalation_team": "Which team the ticket was escalated to",
      "number_of_reopens": "Number of times the ticket was reopened",
      "number_of_replies": "Number of replies to the ticket",
      "handle_time": "Total time spent handling the ticket in minutes",
      "last_touch_handle_time": "Time spent on the last touch of the ticket in minutes",
      "calendar_reply_time_in_minutes": "Time in minutes for the first reply to the ticket",
      "calendar_on_hold_time_in_minutes": "Time in minutes the ticket was on hold",
      "calendar_agent_wait_time_in_minutes": "Time in minutes the agent waited for a response",
      "calendar_requester_wait_time_in_minutes": "Time in minutes the requester waited for a response",
      "calendar_first_resolution_time_in_minutes": "Time in minutes to the first resolution of the ticket",
      "calendar_full_resolution_time_in_minutes": "Time in minutes to the full resolution of the ticket",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "created_at_pst": "Timestamp of when the record was created. Converted to Pacific Standard Time",
      "updated_at_pst": "timestamp of when the record was last updated. Converted to Pacific Standard Time",
      "solved_at_pst": "Timestamp when the ticket was solved in PST",
      "initially_assigned_at_pst": "Timestamp when the ticket was initially assigned in PST",
      "assigned_at_pst": "Timestamp when the ticket was assigned in PST",
      "assignee_updated_at_pst": "Timestamp when the assignee was last updated in PST",
      "status_updated_at_pst": "Timestamp when the status was last updated in PST",
      "latest_comment_added_at_pst": "Timestamp when the latest comment was added in PST",
      "requester_updated_at_pst": "Timestamp when the requester was last updated in PST"
    }
  },
  "app_attendancelogs_stg": {
    "description": "Logs that detail attendance-related violations concerning HCPs.",
    "columns": {
      "id": "Primary key.",
      "shift_id": "The id of the shift that was effected by the violation.",
      "agent_id": "The id of the agent that conducted the violation.",
      "salesforce_case_id": "The Salesforce case triggered by the violation.",
      "sub_action": "The agent subaction that led to the attendance log entry.",
      "action": "Main action by HCP that led to the attendance log entry.",
      "num_events": "Number of events associated with the attendance log entry.",
      "event_1": "The first event associated with the entry.",
      "event_2": "The second event associated with the entry.",
      "updated_at": "The last time the record was updated.",
      "resolved_by": "Id of the admin who resolved the attendance log event.",
      "resolution": "The resolution of the attendance log event.",
      "created_at": "Time at which the log was created."
    }
  },
  "fct_zendesk__mqr_appeals_tickets": {
    "description": "fact model for WOPS' MQR appeals tickets which uses the QA form WOPS QA form v1, focusing specifically on appeals. these tickets represent appeals to QA evaluations initiated by agents.\n",
    "columns": {
      "ticket_id": "unique identifier for the zendesk ticket\n",
      "requester_id": "unique identifier for the requesterm representing the agent appealing the ticket\n",
      "submitter_id": "unique identifier for the agent who submitted the ticket, representing the agent being evaluated\n",
      "assignee_id": "unique identifier for the agent assigned to the ticket, representing the auditor\n",
      "organization_id": "unique identifier for the organization the ticket belongs to\n",
      "group_id": "unique identifier for the group the ticket belongs to\n",
      "ticket_form_id": "unique identifier for the ticket form, in this case WOPS QA form v1\n",
      "via_channel": "channel through which the ticket was created\n",
      "requester_name": "name of the requester, representing the agent or team lead appealing the ticket\n",
      "requester_email": "email of the requester, representing the agent or team lead appealing the ticket\n",
      "requester_role": "role of the requester, representing the agent or team lead appealing the ticket\n",
      "assignee_name": "name of the auditor assigned to the ticket, representing the QA auditor\n",
      "assignee_email": "email of the auditor assigned to the ticket, representing the QA auditor\n",
      "assignee_role": "role of the auditor assigned to the ticket, representing the QA auditor\n",
      "ticket_type": "type of the ticket\n",
      "subject": "subject of the ticket\n",
      "description": "description of the ticket\n",
      "status": "status of the ticket\n",
      "tags": "tags associated with the ticket\n",
      "priority": "priority of the ticket\n",
      "ticket_form": "form of the ticket\n",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "due_at": "ticket's due date",
      "created_at_pst": "Timestamp of when the record was created. Converted to Pacific Standard Time",
      "updated_at_pst": "timestamp of when the record was last updated. Converted to Pacific Standard Time",
      "due_at_pst": "ticket's due date in pst",
      "ticket_being_evaluated": "original QA ticket being evaluated",
      "evaluation_type": "type of evaluation, an appeal in this case",
      "sop_business_resource_opportunity": "whether there was an opportunity to provide the customer a relevant business resource",
      "sop_opportunity_type": "the type of business resource opportunity identified, if any",
      "appeal_outcome_qaqam_only": "the outcome of the quality audit appeal, from the perspective of the QA/QAM team only",
      "wops_qa_critical_attributes": "whether the agent addressed all critical ticket attributes per policy",
      "wops_qa_contact_driver": "the main driver for the customer's contact, from a compliance perspective",
      "auditors_email": "the email address of the auditor who reviewed the ticket",
      "auditors_email_address": "the email address of the auditor who reviewed the ticket",
      "time_spent_last_update_sec": "the time in seconds between the last agent update and the previous update",
      "total_time_spent_sec": "the total time in seconds between the first and last agent updates",
      "wops_qa_ticket_channel": "the channel through which the ticket was submitted",
      "coc_process_adherence": "the agent's adherence to the company's internal processes and procedures",
      "cx_geo_appropriate_macro": "whether the agent used the appropriate macros in their communication",
      "wops_qa_evaluation_type": "the type of quality evaluation performed (e.g. audit, appeal)",
      "coc_geo_investigative_notes_form_fields_improvement_areas": "identified opportunities to improve completion of the geo investigative notes form fields",
      "cx_geo_appropriate_macro_improvement_areas": "identified opportunities to improve the agent's use of macros",
      "wops_qa_ticket_id": "the id of the ticket being evaluated",
      "wops_qa_customer_experience_markdowns_webchat": "identified opportunities to improve the customer experience in webchat tickets",
      "audit_score": "the audit score given to the ticket by the auditors",
      "qat1_agent_email_address": "the email address of the qat1 agent who reviewed the ticket",
      "final_qa_score": "the final quality audit score given to the ticket after any appeals"
    }
  },
  "fct_stripe_worker_transfers": {
    "description": "Fact table of Stripe worker transfers and reversals, representing net payouts and adjustments for healthcare shift payments. Combines available Stripe balance transactions with transfer metadata at the worker and shift level.",
    "columns": {
      "worker_transfer_sk": "Surrogate key for the worker transfer or reversal, generated from the Stripe transfer ID, reporting category, and available timestamp.",
      "stripe_transfer_id": "Unique Stripe transfer identifier for the payout or reversal.",
      "shift_id": "Unique identifier for the shift",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "destination_id": "Stripe account ID of the payout destination (worker's connected account).",
      "reporting_category": "Stripe reporting category for the transaction, either 'transfer' for payouts or 'transfer_reversal' for reversals.",
      "description": "Freeform description from Stripe, typically including shift details or payment context.",
      "amount": "Net amount of the transfer or reversal, in USD. Positive for payouts, negative for reversals.",
      "available_at": "Timestamp when the transfer or reversal became available in the Stripe account.",
      "worker_timezone": "IANA timezone of the worker, derived from dim_workers.",
      "available_at_local": "Timestamp when the transfer or reversal became available, converted to the worker\u2019s local timezone."
    }
  },
  "stg_wops_google_analytics__pages": {
    "description": "Model for extracting article views and search details from Google Analytics pages data.",
    "columns": {
      "article_view_id": "Unique id for article views data",
      "property_id": "Google Analytics property ID.",
      "page_path": "Complete path of the article or search page, including query string.",
      "article_id": "Unique identifier for the article, extracted from the page path.",
      "category_id": "Unique identifier for the category, extracted from the page path.",
      "search_query_term": "Search query term extracted from the page path, with \"+\" replaced by spaces.",
      "category_name": "Name of the category based on category_id.",
      "host_name": "Hostname from which the page was accessed.",
      "bounce_rate": "Bounce rate percentage for the page.",
      "page_views": "Total screen page views for the article or search page.",
      "view_date": "Date of the last recorded view of the page.",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system"
    }
  },
  "int_zendesk__external_id_to_cbh_internal_id_mapping": {
    "description": "This model maps Zendesk external IDs to CBH internal IDs.\n",
    "columns": {
      "user_id": "The ID of the user in Zendesk.",
      "user_email": "The email of the user in Zendesk.",
      "user_name": "The name of the user in Zendesk.",
      "user_class": "The class of the user",
      "external_id": "The external ID of the user in Zendesk.",
      "worker_external_id": "Worker_id as it shows in Zendesk's external id fields",
      "workplace_user_external_id": "Workplace user id as it shows in Zendesk's external id fields",
      "worker_id": "The ID of the worker in the PII agent profiles.",
      "workplace_user_id": "The ID of the workplace user in the PII facility users."
    }
  },
  "pa_dashboard_Worker_Cancels_to_Claimed_Shifts_PA_vs_NonPA_Created_At": {
    "description": "",
    "columns": {}
  },
  "fct_worker_documents": {
    "description": "Fact table containing a single row for a worker's documents",
    "columns": {
      "document_id": "Primary key, unique identifier to the worker's documents",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "req_id": "Unique identifier for the requirement",
      "reviewed_by_id": "The id of the person that reviewed the document",
      "uploaded_by_id": "The id of the person that uploaded the document, typically the worker themselves",
      "uploaded_for_id": "The id of the requirement that the document was uploaded for. More information about the requirement can be found by joining to dim_docs_requirements",
      "checkr_report_id": "Specific to the Checkr requirement, this is used to identify id on Checkr dashboard.",
      "name": "Internal name of the document",
      "app_display_name": "Display name of the document, what is shown on the app",
      "req_name": "Name of the requirement. Note: that this can change over time, use req_id when possible",
      "subtype": "Additional information about the document",
      "status": "Verfication status of the document",
      "state": "State that the document is associated to",
      "uploaded_for_name": "The name of the requirement that the document was uploaded for.",
      "verification_process": "The type of verfication process (i.e. manual verification, auto-verify, auto-attempted)",
      "automation_service": "The service where the verification process was conducted (i.e. checkr, stripe, CBH document verification service, etc.)",
      "notification": "Notifications that the worker recieved on the app, if any",
      "is_multistate": "If the document is applicable across multiple states, then TRUE",
      "is_archived": "If the document has been archived, then TRUE",
      "is_visible": "If the document is visable to the worker on the app, then TRUE",
      "is_algo_reviewed": "If the document was reviewed by an automated process, then TRUE",
      "is_worker_uploaded": "If the worker uploaded the document, then TRUE",
      "is_deleted": "Flag indicating whether the record has been marked as deleted",
      "time_to_review": "Time to review is calculated as the time between when the document was uploaded to the time that the document was first marked as approved/rejected. Note: for automated verification services this is typically 0",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "issued_at": "The issue datetime of the document",
      "expires_at": "The expiration datetime of the document",
      "reviewed_at": "The datetime of when the document was reviewed",
      "covid_test_at": "The datetime of the COVID test conducted, if applicable",
      "rejection_notified_at": "If the document was rejected, then this is when the worker was notified at",
      "uploaded_for_created_at": "For the requirement that the document was uploaded for, this is when that requirement was created at",
      "uploaded_for_updated_at": "For the requirement that the document was uploaded for, this is when that requirement was updated at",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake",
      "file_url": "The URL where the file is stored internally",
      "file_storage_root_folder": "The root folder that contains the actual file within S3"
    }
  },
  "blocked_by_charge_fill_l30d": {
    "description": "",
    "columns": {}
  },
  "stg_pricing_parameters__automated_policy_runs": {
    "description": "This model unpacks the raw automated policy runs data",
    "columns": {
      "automated_policy_run_id": "The id of the stored automated policy run",
      "policy_name": "The name of the policy being executed by this run (i.e. LowFillHighTake). This is used to discriminate between the different types of policy runs which can contain different additional data.",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "qualification": "Qualification title of an HCP",
      "segment": "Name of the metro-statistical area of this pricing market",
      "run_at": "The time at which this automated policy run was executed",
      "output_workplace_override_id": "The id of the stored output workplace override version. If null, the result from the run wasn't stored",
      "statistics_last_activation_at": "When was this workplace market last activated. An activation is the first facility shift's start or the first shift's start after a period of inactivity greater than 1 month.",
      "statistics_shifts_started": "The number of shifts started in the past week.",
      "statistics_filled_shifts_started": "The number of shifts filled in the past week.",
      "statistics_total_potential_charge": "The total potential charge for shifts started during the past week",
      "statistics_total_potential_revenue": "The total potential revenue for shifts started during the past week",
      "statistics_booked_shifts": "The number of shifts booked at the facility in the past week",
      "statistics_open_shifts": "The number of open shifts available at the facility in the past week",
      "statistics_total_booked_charge": "The total charge for shifts booked during the past week",
      "statistics_total_booked_revenue": "The total revenue for shifts booked during the past week",
      "statistics_total_filled_charge": "The total charge for filled shifts started during the past week",
      "statistics_total_filled_revenue": "The total revenue for filled shifts started booked during the past week",
      "low_fill_high_take_policy_phase": "For the Low Fill High Take policy, the current phase of the run",
      "low_fill_high_take_initial_adjustment_min_fill_margin_cap": "For the Low Fill High Take policy, the initial min fill margin cap adjustment",
      "low_fill_high_take_initial_adjustment_market_base": "For the Low Fill High Take policy, the initial market base adjustment",
      "low_fill_high_take_initial_adjustment_weekday_base": "For the Low Fill High Take policy, the initial weekday base adjustment",
      "low_fill_high_take_initial_adjustment_weekend_base": "For the Low Fill High Take policy, the initial weekend base adjustment",
      "intervention_start_at": "Date of the start of this intervention. (Currently only filled in for First Impressions Matter runs)",
      "iteration_number": "How many iterations have now been run for this intervention. Starts from 1. (Currently only filled in for First Impressions Matter runs)",
      "phase": "Integer corresponding to a phase enum describing which phase of the intervention this run is executing",
      "first_impressions_matter_adjustment_weekday_base_multiplier": "For the First Impressions Matter policy, the multiplier (relative to market) applied to weekday base by this run.",
      "first_impressions_matter_adjustment_weekend_base_multiplier": "For the First Impressions Matter policy, the multiplier (relative to market) applied to weekend base by this run.",
      "first_impressions_matter_adjustment_margin_cap": "For the First Impressions Matter policy, the final margin cap that this run set.",
      "statistics_shifts_started_week_1": "The number of shifts started in the past week.",
      "statistics_filled_shifts_started_week_1": "The number of shifts filled in the past week.",
      "statistics_workplace_cancelled_filled_shifts_week_1": "The number of workplace cancelled filled shifts.",
      "statistics_total_filled_charge_week_1": "The total amount of charge for filled shifts during the week.",
      "statistics_total_filled_revenue_week_1": "The total amount of revenue for filled shifts during the week.",
      "statistics_interval_start_week_1": "The start of the interval for the fill statistics.",
      "statistics_interval_end_week_1": "The end of the interval for the fill statistics.",
      "statistics_shifts_started_week_2": "The number of shifts started in the week before the past week.",
      "statistics_filled_shifts_started_week_2": "The number of shifts filled in the week before the past week.",
      "statistics_workplace_cancelled_filled_shifts_week_2": "The number of workplace cancelled filled shifts.",
      "statistics_interval_start_week_2": "The start of the interval for the fill statistics.",
      "statistics_interval_end_week_2": "The end of the interval for the fill statistics.",
      "statistics_shifts_started_week_3": "The number of shifts started in the week 2 weeks before the past week.",
      "statistics_filled_shifts_started_week_3": "The number of shifts filled in the week 2 weeks before the past week.",
      "statistics_workplace_cancelled_filled_shifts_week_3": "The number of workplace cancelled filled shifts.",
      "statistics_interval_start_week_3": "The start of the interval for the fill statistics.",
      "statistics_interval_end_week_3": "The end of the interval for the fill statistics."
    }
  },
  "stg_app__account_logs": {
    "description": "Staging model for data coming from the application's account logs table\n",
    "columns": {
      "account_log_id": "Primary key, unique indentifier for the account log event\n",
      "account_id": "",
      "worker_id": "",
      "workplace_id": "",
      "admin_id": "",
      "meta_shift_id": "",
      "log_text": "",
      "account_type": "",
      "note": "",
      "new_status": "",
      "previous_status": "",
      "reason": "",
      "suspension_length": "",
      "is_suspension_lifted": "",
      "created_at": "",
      "updated_at": "",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "app_facilityusers_stg": {
    "description": "",
    "columns": {}
  },
  "hcp_churn_resurruction_daily_fin": {
    "description": "",
    "columns": {}
  },
  "monthly_active_agents": {
    "description": "",
    "columns": {}
  },
  "fct_worker_open_shift_views": {
    "description": "Fact table containing shift view app event data from IOS, Android, and Web.",
    "columns": {
      "worker_open_shift_viewed_id": "Unique identifier to the shift view event",
      "shift_id": "Unique identifier for the shift",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "shift_offer_display_id": "Display id of the shift offer viewed with this shift view",
      "source": "Schema where the data was derived from for audit purposes",
      "workplace_msa": "Metropolitan statistical area (MSA) for the workplace",
      "worker_msa": "Metropolitan statistical area (MSA) for the worker",
      "worker_requirement": "The type/level of worker that is required for the shift (i.e. nurse, EMT, etc.)",
      "shift_type": "The working time set by the facility (i.e. PM, AM, etc.)",
      "streaks_bonus": "Additional bonus paid if the shift is a streak",
      "streaks_payment_method": "Payment method for the streaks, if applicable",
      "streak_alert_message": "Alert message shown that is associated with the streak, if applicable",
      "has_work_with_friends_feature_flag_on": "If the worker has the work with friends feature flag turned on then TRUE",
      "is_holiday_shift": "If the shift is a holiday shift then TRUE",
      "is_priority_access_shift": "If the shift is a priority access shift then TRUE",
      "is_instant_pay": "If the shift is an instant pay shift then TRUE",
      "is_covid_hazard_pay_active": "If the shift has COVID hazard pay active then TRUE. Not: potentially deprecated field",
      "is_worker_hidden_as_colleague_on_shifts": "If the worker is hidden as a colleague on shifts then true",
      "has_profile_picture_uploaded": "If the worker has a profile picture uploaded then true",
      "has_missing_documents": "If the worker has missing documents then true",
      "has_extra_time_pay": "If the shift has extra time pay then true",
      "is_instant_review": "True if the shifts missing documents can be reviewed instantly",
      "missing_documents": "A comma separated list of the missing documents",
      "hourly_pay": "The hourly pay rate of the shift at the time of viewing",
      "facility_distance": "The distance to the facility in miles",
      "num_colleagues_shown": "Number of colleagues shown to the worker when the shift was viewed",
      "num_familiar_colleagues_shown": "Number of familiar colleagues shown to the worker when the shift was viewed",
      "num_friends_shown": "Number of friends shown to the worker when the shift was viewed",
      "num_open_shifts_in_slot": "Number of open shifts in the slot",
      "priority_access_time_remaining": "Amount of priority access time remaining when the shift was viewed",
      "event_time": "Timestamp of when the shift was viewed",
      "received_at": "Timestamp of when Segment received the event"
    }
  },
  "app_creditlimits_stg": {
    "description": "",
    "columns": {}
  },
  "worker_mobile_friend_list_viewed_stg": {
    "description": "",
    "columns": {}
  },
  "rpt_tickets_per_verified_shift": {
    "description": "Pre-aggregated weekly reporting model showing verified shift count, ticket count, and ticket-per-verified-shift ratio.\n",
    "columns": {
      "week_start": "The week start date (Monday) based on shift_start_at.",
      "verified_shift_count": "Distinct count of verified shifts for the week.",
      "ticket_count": "Distinct count of Zendesk tickets meeting criteria for the week.",
      "ticket_per_verified_shift": "Ratio of tickets per verified shift (floating point number)."
    }
  },
  "sf_task_stg": {
    "description": "",
    "columns": {}
  },
  "worker_mobile_friend_request_sent_stg": {
    "description": "",
    "columns": {}
  },
  "sf_contact_stg": {
    "description": "",
    "columns": {}
  },
  "fasp_dashboard_facility_regulars": {
    "description": "This contains information on regular workers in a facility, has worked >= 8 shifts at the facility in the last 30 days.",
    "columns": {
      "agent_id": "ID of the worker",
      "facility_id": "facility ID of the shift poster",
      "worked_shifts_count": "total shifts count that worker works in the facility in the last 30 days",
      "is_highly_rated": "is the worker highly rated by the facility. A worker with a rating >= 4",
      "is_regular": "has the worker works >= 8 shifts at the facility in the last 30 days. This is based on shift verified."
    }
  },
  "minutes_to_book_mod": {
    "description": "",
    "columns": {}
  },
  "time_to_fill_verified_shifts": {
    "description": "",
    "columns": {}
  },
  "invoiced_invoice_summary_stg": {
    "description": "",
    "columns": {}
  },
  "stg_wfm_airtable__departments": {
    "description": "Model to fetch the departments data from WFM Airtable source.",
    "columns": {
      "department_id": "Unique identifier for the department in Airtable.",
      "department_name": "Name of the department.",
      "team_members": "Comma-separated varchar of team member IDs.",
      "imported_table": "Name of the imported table associated with the department.",
      "count_of_members": "Total count of members in the department.",
      "airtable_table_name": "Name of the Airtable table.",
      "airtable_created_time": "Timestamp of when the record was created in Airtable."
    }
  },
  "app_shiftverificationlogs_stg": {
    "description": "",
    "columns": {}
  },
  "fct_interviews": {
    "description": "Fact table containing interview data, including details about the placement, workplace, and worker. This table joins interview data with related placement applications, placements, and candidates.\n",
    "columns": {
      "interview_id": "Primary key, unique identifier for the interview",
      "placement_application_id": "Identifier for the placement application associated with the interview",
      "placement_id": "Identifier for the placement associated with the interview",
      "placement_candidate_id": "Identifier for the placement candidate being interviewed",
      "workplace_id": "Identifier for the workplace conducting the interview",
      "worker_id": "Identifier for the worker being interviewed",
      "is_prospect": "Flag indicating if the workplace is a prospect",
      "open_house_id": "Identifier for the open house event associated with the interview",
      "hiring_event_id": "Identifier for the hiring event associated with the interview",
      "status": "Status of the interview (e.g., Booked, Cancelled, Rescheduled)",
      "interview_start_at": "Scheduled start time of the interview",
      "interview_end_at": "Scheduled end time of the interview",
      "booked_by_user_type": "Type of user who booked the interview",
      "booked_by_user_id": "ID of the user who booked the interview",
      "cancelled_by_user_type": "Type of user who cancelled the interview",
      "cancelled_by_user_id": "ID of the user who cancelled the interview",
      "cancelled_at": "Date and time when the interview was cancelled",
      "rescheduled_interview_id": "ID of the rescheduled interview",
      "attendance_intention_confirmed_at": "Date and time when attendance intention was confirmed",
      "provider_trip_id": "ID of the trip from the provider associated with this interview",
      "attendance_confirmed_at": "Date and time when attendance was confirmed",
      "attendance_confirmed_by": "ID of the user who confirmed the attendance",
      "attendance_method": "Method used to confirm attendance (Geofence or Manual)",
      "attendance_bonus_id": "Unique identifier for the attendance bonus",
      "attendance_bonus_amount_in_minor_units": "Amount of the attendance bonus in minor units (e.g. cents)",
      "attendance_bonus_currency_code": "Currency code for the attendance bonus amount",
      "attendance_bonus_created_at": "Date and time when the attendance bonus was created",
      "attendance_bonus_created_by": "ID of the user who created the attendance bonus",
      "attendance_bonus_created_by_user_type": "Type of user who created the attendance bonus",
      "created_at": "Timestamp when the interview record was created",
      "updated_at": "Timestamp when the interview record was last updated",
      "ingested_at": "Timestamp when the interview data was ingested into the system",
      "loaded_at": "Timestamp when the interview data was loaded into the data warehouse"
    }
  },
  "stg_docs__hcp_documents": {
    "description": "Staging table from the main app containing the worker's documents",
    "columns": {
      "document_id": "Primary key, unique identifier to the worker's documents",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "req_id": "Unique identifier for the requirement",
      "reviewed_by_id": "The id of the person that reviewed the document",
      "uploaded_by_id": "The id of the person that uploaded the document, typically the worker themselves",
      "uploaded_for_id": "The id of the requirement that the document was uploaded for. More information about the requirement can be found by joining to dim_docs_requirements",
      "checkr_report_id": "Specific to the Checkr requirement, this is used to identify id on Checkr dashboard.",
      "name": "Internal name of the document",
      "app_display_name": "Display name of the document, what is shown on the app",
      "req_name": "Name of the requirement. Note: that this can change over time, use req_id when possible",
      "subtype": "Additional information about the document",
      "status": "Verfication status of the document",
      "state": "State that the document is associated to",
      "uploaded_for_name": "The name of the requirement that the document was uploaded for.",
      "verification_process": "The type of verfication process (i.e. manual verification, auto-verify, auto-attempted)",
      "automation_service": "The service where the verification process was conducted (i.e. checkr, stripe, CBH document verification service, etc.)",
      "notification": "Notifications that the worker recieved on the app, if any",
      "is_multistate": "If the document is applicable across multiple states, then TRUE",
      "is_archived": "If the document has been archived, then TRUE",
      "is_visible": "If the document is visable to the worker on the app, then TRUE",
      "is_algo_reviewed": "If the document was reviewed by an automated process, then TRUE",
      "is_worker_uploaded": "If the worker uploaded the document, then TRUE",
      "is_deleted": "Flag indicating whether the record has been marked as deleted",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "issued_at": "The issue datetime of the document",
      "expires_at": "The expiration datetime of the document",
      "reviewed_at": "The datetime of when the document was reviewed",
      "covid_test_at": "The datetime of the COVID test conducted, if applicable",
      "rejection_notified_at": "If the document was rejected, then this is when the worker was notified at",
      "uploaded_for_created_at": "For the requirement that the document was uploaded for, this is when that requirement was created at",
      "uploaded_for_updated_at": "For the requirement that the document was uploaded for, this is when that requirement was updated at",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake",
      "file_url": "The URL where the file is stored internally",
      "file_storage_root_folder": "The root folder that contains the actual file within S3"
    }
  },
  "time_between_hcp_account_creation_and_activation": {
    "description": "",
    "columns": {}
  },
  "fct_contacts": {
    "description": "Fact table containing all the contacts for the customers within Invoiced.com. Contains PII. Due to ingestion size, this data is updated 1x a day.",
    "columns": {
      "contact_id": "Primary key, unique identifer to the contact",
      "customer_id": "The customer in Invoiced.com that the contact is associated to",
      "customer_name": "Customer name that the contact is associated to",
      "contact_name": "Contact name",
      "title": "Contact's title",
      "department": "Contact's department",
      "address": "Contact's address (Address line 1)",
      "city": "Contact's city",
      "state": "Contact's state",
      "postal_code": "Contact's postal code",
      "country": "Contact's country",
      "email_address": "Contact's email address",
      "phone": "Contact's phone number",
      "is_primary": "When true the contact will be copied on any account communications",
      "is_sms_enabled": "When true the contact can be contacted via text message",
      "has_send_new_invoices_enabled": "When true the contact is sent new invoices on behalf of the customer that they are associated to",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated"
    }
  },
  "future_shifts_per_hcp": {
    "description": "",
    "columns": {}
  },
  "stg_zendesk__ticket_metrics": {
    "description": "Staging model for zendesk ticket metrics data",
    "columns": {
      "ticket_metric_id": "Unique identifier for the ticket metric",
      "ticket_id": "Unique identifier for the zendesk ticket",
      "ticket_metric_url": "Url of the ticket metric",
      "group_stations": "Number of groups the ticket passed through",
      "assignee_stations": "Number of assignees the ticket had",
      "reopens": "Number of times the ticket was reopened",
      "replies": "Count of replies on the ticket",
      "business_agent_wait_time_in_minutes": "Number of minutes the agent spent waiting during business hours",
      "calendar_agent_wait_time_in_minutes": "Number of minutes the agent spent waiting during calendar hours",
      "business_first_resolution_time_in_minutes": "Number of minutes to the first resolution time during business hours",
      "calendar_first_resolution_time_in_minutes": "Number of minutes to the first resolution time during calendar hours",
      "business_full_resolution_time_in_minutes": "Number of minutes to the full resolution during business hours",
      "calendar_full_resolution_time_in_minutes": "Number of minutes to the full resolution during calendar hours",
      "business_on_hold_time_in_minutes": "Number of minutes the ticket was on hold during business hours",
      "calendar_on_hold_time_in_minutes": "Number of minutes the ticket was on hold during calendar hours",
      "calendar_reply_time_in_seconds": "Number of seconds to the first reply during calendar hours",
      "business_reply_time_in_minutes": "Number of minutes to the first reply during business hours",
      "calendar_reply_time_in_minutes": "Number of minutes to the first reply during calendar hours",
      "business_requester_wait_time_in_minutes": "Number of minutes the requester spent waiting during business hours",
      "calendar_requester_wait_time_in_minutes": "Number of minutes the requester spent waiting during calendar hours",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "assigned_at": "Timestamp of when the ticket was assigned",
      "initially_assigned_at": "Timestamp of when the ticket was initially assigned to the first agent that worked on it",
      "assignee_updated_at": "Timestamp of when the assignee updated the ticket",
      "requester_updated_at": "Timestamp of when the requester updated the ticket",
      "latest_comment_added_at": "Timestamp of when the latest comment was added to the ticket",
      "status_updated_at": "Timestamp of when the status was updated",
      "solved_at": "Timestamp of when the ticket was solved",
      "airbyte_extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "stg_360_learning__users": {
    "description": "Staging model for users from 360 Learning.",
    "columns": {
      "learning_360_user_id": "Unique identifier for the user in 360 Learning",
      "email": "Email address of the user.",
      "first_name": "First name of the user.",
      "last_name": "Last name of the user.",
      "custom_attributes": "Custom attributes associated with the user.",
      "external_ids": "List of external platform IDs associated with the user.",
      "extracted_at": "Timestamp of when the data was extracted from the source."
    }
  },
  "app_wwf_phase_1_profile_photo_updated_stg": {
    "description": "",
    "columns": {}
  },
  "marketplace_hazard_rate": {
    "description": "",
    "columns": {}
  },
  "investor_hcp_created_at_mom_ltv_by_msa": {
    "description": "",
    "columns": {}
  },
  "stg_app__shift_adjustments": {
    "description": "Staging model for data coming from the application's shift adjustments table\n",
    "columns": {
      "shift_adjustment_id": "Primary key, unique identifier for the shift adjustment events\n",
      "shift_id": "Id of the shift",
      "external_id": "external id of the shift",
      "adjusted_by_id": "Id of the user who adjusted the shift",
      "reason": "Reason due to which shift was adjusted",
      "other_reason": "Other reason specified by user due to which shift was adjusted",
      "mark_as": "User marked the shift as NCNS, WC or FCF",
      "time": "Total duration for the shift",
      "pay": "Pay for the shift",
      "charge": "Charge for the shift",
      "time_logs_changed": "Whether the time value was changed for the shift",
      "time_logs_previous_value": "Previous time value for the shift",
      "time_logs_clock_in": "ClockIn value for the shift",
      "time_logs_clock_out": "ClockOut value for the shift",
      "time_logs_lunch_in": "LunchIn value for the shift",
      "time_logs_lunch_out": "LunchOut value for the shift",
      "time_logs_skipped_lunch": "Whether lunch was skipped for the shift",
      "time_logs_clock_in_based_adjustment": "Whether shift length was adjusted using clockInOut and lunchInOut values",
      "time_logs_reason": "Why time was changed for the shift",
      "pay_logs_changed": "Whether the pay value was changed for the shift",
      "pay_logs_previous_value": "Previous pay value for the shift",
      "pay_logs_reason": "Why pay was changed for the shift",
      "charge_logs_changed": "Whether the charge value was changed for the shift",
      "charge_logs_previous_value`": "Previous charge value for the shift",
      "charge_logs_reason": "Why charge was changed for the shift",
      "adjusted_by_name": "Name of the user who adjusted the shift",
      "created_at": "Shift adjustment Created At",
      "updated_at": "Shift adjustment Updated At",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "orientation_shifts": {
    "description": "Orientation shifts report detailing all shifts that were orientation shifts\n",
    "columns": {
      "shift_id": "Unique identifier for the shift",
      "worker_id": "Identifier for the worker",
      "workplace_id": "Identifier for the workplace",
      "workplace_worker_combination_id": "Unique identifier for the workplace worker combination",
      "timecard_id": "Unique identifier for the timecard",
      "verified_by_id": "Identifier for the user who verified the timecard",
      "assigned_by_id": "Identifier for the internal agent who assigned the timecard",
      "worker_name": "Name of the worker",
      "workplace_name": "Name of the workplace",
      "shift_type": "Type of shift. Can be AM, PM, NOC or Custom",
      "worker_requirement": "Requirement of the worker",
      "invoice_number": "Invoice number for the shift",
      "verification_comments": "Comments added by the internal agent who verified the timecard",
      "timecard_status": "Status of the timecard",
      "digital_signature": "Digital signature on the timecard",
      "verification_method": "Method used to verify the timecard",
      "verification_notes_contain_orientation_keyword": "Whether the verification notes mention the keyword \"orientation\"",
      "is_deleted": "Whether the shift is deleted",
      "is_verified": "Whether the shift is verified",
      "is_signed": "Whether the timecard is signed by the facility",
      "is_billable": "Whether the shift is billable",
      "is_self_claimed": "Whether the shift is self claimed",
      "is_by_facility": "Whether the shift is posted by facility",
      "is_verified_same_day": "Whether the shift is verified on the same day",
      "shift_length": "Length of the shift",
      "net_pay": "Net pay for the shift",
      "net_charge": "Net charge for the shift",
      "net_revenue": "Net revenue for the shift",
      "shift_start_at": "Start time of the shift",
      "shift_end_at": "End time of the shift",
      "updated_at": "Time when the shift was last updated",
      "created_at": "Timestamp of when the record was created",
      "created_week": "Week when the shift was created",
      "verified_at": "Timestamp when the shift was verified",
      "workplace_salesforce_id": "Salesforce ID of the workplace",
      "workplace_type": "Type of the workplace",
      "workplace_msa": "MSA of the workplace",
      "workplace_zendesk_account_id": "Zendesk account ID of the workplace",
      "worker_account_stage": "Account stage of the worker"
    }
  },
  "fct_disputes": {
    "description": "Fact table of disputes\n",
    "columns": {
      "invoice_item_dispute_id": "Primary key, unique identifier for the invoice item dispute events\n",
      "shift_id": "Unique identifier for the shift",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "invoice_item_id": "ID of the associated invoice item",
      "created_by_id": "ID of the user who created the dispute",
      "actioned_by_id": "ID of the user who took action on the dispute",
      "original_hours": "The original length of the shift before the dispute",
      "original_rate": "The original rate of the shift before the dispute",
      "original_amount": "The original total amount of the shift before the dispute",
      "dispute_hours": "Number of disputed hours",
      "dispute_rate": "Disputed charge rate",
      "dispute_amount": "Disputed total amount",
      "dispute_should_not_exist": "Flag indicating if the \u2018This professional did not work\u2019, was marked",
      "dispute_comment": "Comment related to the dispute",
      "result_hours": "Resulting hours after dispute resolution",
      "result_rate": "Resulting charge after dispute resolution",
      "result_amount": "Resulting total amount after dispute resolution",
      "result_comment": "Comment related to the result",
      "status": "Status of the dispute (DRAFT, IN_PROGRESS, ACCEPTED, REJECTED)",
      "invoice_type": "Type of the associated invoice (INVOICE, UPCOMING_CHARGE)",
      "invoice_item_type": "Type of the associated invoice item (SHIFT, NON_SHIFT)",
      "description": "Description of the dispute",
      "created_by_type": "Type of the user who created the dispute (WORKPLACE_USER, EMPLOYEE)",
      "actioned_by_type": "Type of the user who took action on the dispute (WORKPLACE_USER, EMPLOYEE)",
      "actioned_by": "Name of the user who took action on the dispute",
      "actioned_at": "Timestamp when the dispute was actioned",
      "created_at": "Timestamp when the dispute was created",
      "updated_at": "Timestamp when the dispute was last updated",
      "invoice_period_start": "Start date of the invoice period",
      "invoice_period_end": "End date of the invoice period",
      "clock_in_at_local_time": "Timestamp of when a worker clocked into the shift in facility's timezone, if applicable\n",
      "clock_out_at_local_time": "Timestamp of when a worker clocked out of the shift in facility's timezone, if applicable\n",
      "lunch_in_at_local_time": "Timestamp of when a worker clocked in from lunch in facility's timezone, if applicable\n",
      "lunch_out_at_local_time": "Timestamp of when a worker clocked out to lunch in facility's timezone, if applicable"
    }
  },
  "stg_docs__docs_requirements": {
    "description": "Staging table containg all of the document requirements needed by a worker to work at a designated facility",
    "columns": {
      "req_id": "Unique identifier for the requirement",
      "name": "Requirement name",
      "description": "Description about the requirement",
      "instructions": "Legacy instructions for requirements. For HelloSign and composite requirements, these instructions will appear for users with app version 2.182.0 or lower and do need to contain the HelloSign Link. The \"upload document\" button will be enabled for these users.",
      "is_checklist_enabled": "If TRUE, checklist is enabled for this requirement",
      "checklist_description": "Description text for the checklist",
      "checklist_items": "Array of checklist items",
      "expiry_type": "Expiry type for the requirement",
      "is_visible_to_worker": "If the requirement is visible to the worker, then TRUE",
      "is_visible_to_workplace": "If the requirement is visible to the workplace, the TRUE",
      "is_state_specific": "If the requirement is specific to the state, then TRUE",
      "is_worker_upload_disabled": "If the worker upload button is disabled on the app, the TRUE",
      "is_archived": "If the requirement is archived, the TRUE",
      "is_deleted": "If the requirement record was deleted from the source, the TRUE",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake",
      "modified_at": "Timestamp of when the record was last modified in the source system",
      "requirement_workflow_type": "Type of workflow for the requirement (e.g., DOCUMENT_UPLOAD)",
      "is_automated_verification_decision": "If TRUE, the verification decision is automated",
      "is_hello_sign_embedded_flow": "If TRUE, HelloSign embedded flow is enabled",
      "hello_sign_template_id": "HelloSign template ID for the requirement",
      "hello_sign_fallback_static_url": "Fallback static URL for HelloSign",
      "hello_sign_instructions": "Instructions related to HelloSign requirement. These instructions will be shown to all users with the updated app version and do not need to contain the HelloSign Link.",
      "validity_days_from_issue_date": "Number of days the requirement is valid from its issue date",
      "composite_config": "Composite configuration for the requirement",
      "composite_config_instructions": "Instructions related to the composite requirement. These instructions will be shown to all users with the updated app version and do not need to contain the HelloSign Link."
    }
  },
  "pa_dashboard_Undeleted_Claimed_Shifts_Booked_Unworked_Monthly": {
    "description": "",
    "columns": {}
  },
  "hcps_in_shifts": {
    "description": "",
    "columns": {}
  },
  "stg_app__shifts": {
    "description": "Staging model for data coming from the application's shifts table\n",
    "columns": {
      "shift_id": "Unique identifier for the shift",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "invoice_id": "Invoice associated to the shift. Note: potentially deprecated field.",
      "workplace_worker_combination_id": "Concat of the workplace and worker id, respectively",
      "group_id": "No additional info found. Note: potentially deprecated field",
      "verification_task_id": "Potentially used in table verification joins. Note: potentially deprecated field.",
      "timecard_id": "Timecard associated with the shift, if applicable",
      "verified_by_id": "No additional info found about this field",
      "previously_assigned_worker_id": "No additional info found about this field",
      "external_id": "No additional info found about this field",
      "request_replacement_by_id": "No additional info found about this field",
      "assigned_by_id": "No additional info found about this field",
      "shift_block_id": "Shift block which the shift is a part of",
      "shift_poster_id": "User who posted the shift",
      "worker_name": "Name of the worker, if applicable",
      "workplace_name": "Name of the workplace",
      "shift_type": "The working time set by the facility (i.e. PM, AM, etc.)",
      "worker_requirement": "The type/level of worker that is required for the shift (i.e. nurse, EMT, etc.)",
      "original_requirement": "The type/level of worker when the shift was created, but only set when booked. This may be empty before booking, and after booking it will be the original requirement when posted, which in most cases is the same as worker_requirement, but with exceptions for shifts posted as NURSE and CAREGIVER, for which the worker_requirement may be changed according to the worker that books the shift.",
      "cancellation_reason": "Reason why the shift was cancelled, if applicable",
      "invoice_number": "Invoice number associated to the shift, if applicable",
      "urgent_shift_type": "If a shift is defined as an urgent shift, this field denotes the type/urgency of the shift:\n\n| type           | description                                                      |\n|----------------|------------------------------------------------------------------|\n| 1              | No Call No Show (NCNS)                                           |\n| 2              | Late/Last Minute Cancellation (<= 8 hours before shift start)    |\n| 3              | Last minute shifts (posted within 24 hours of start)             |\n| 4              | DEPRECATED - part of instant fill feature                        |\n| NULL           | Not an urgent shift                                              |",
      "urgent_shift_reason": "The reason for the urgency of the shift. This field is only populated if the shift is an urgent shift. The reason can be one of the following:\n\n| enum value                          | description                                      |\n|-------------------------------------|--------------------------------------------------|\n| WORKER_REPLACEMENT_REQUESTED        | Worker replacement is requested                  |\n| ATTENDANCE_TRACKING_ALGO            | Urgency by attendance tracking algo              |\n| LATE_CANCELLATION                   | Urgency due to late shift cancellation           |\n| MAGIC_SHIFT                         | The shift is urgent because it's a magic shift   |",
      "urgent_shift_updated_at": "The date and time when the urgency of the shift was last updated. This field is only populated if the shift is an urgent shift.",
      "extend_bookability_to": "The date and time to which a shift's bookability was extended past it's start if the worker cancelled late or was a no show.",
      "clock_in_method": "Deprecated field, all values are NULL",
      "nfc_status_converted_by": "No additional info about this field",
      "nfc_status_converted_reason": "No additional info about this field",
      "verification_comments": "Notes regarding the verification of the shift",
      "clock_in_connectivity_mode": "Indicates whether the worker was connected to the internet (i.e. online) when they clocked in, if applicable. Potentially deprecated",
      "clock_out_connectivity_mode": "Indicates whether the worker was connected to the internet (i.e. online) when they clocked out, if applicable. Potentially deprecated",
      "lunch_in_connectivity_mode": "Indicates whether the worker was connected to the internet (i.e. online) when they punched in from lunch, if applicable. Potentially deprecated",
      "lunch_out_connectivity_mode": "Indicates whether the worker was connected to the internet (i.e. online) when they punched out for lunch, if applicable. Potentially deprecated",
      "previously_assigned_worker_name": "No additional info about this field",
      "request_replacement_note": "If a facility requested a replacement worker, these are the notes added by the facility",
      "timecard_status": "Status of the worker's timecard for this shift, if applicable",
      "digital_signature": "The digital signature used to verify the shift, if applicable",
      "verification_method": "Method as to how the shift was verified, if applicable",
      "is_booked_same_shift": "No additional info about this field, potentially deprecated",
      "is_invoiced": "If shift is applicable to have an invoice, then TRUE",
      "is_deleted": "If shift is deleted/cancelled, then TRUE",
      "is_confirmed": "No additional info about this field, potentially deprecated",
      "is_verified": "If the worker's shift is verified by the workplace. This means the HCP should get paid and the facility charged. NOTE: This field may not be correct as it differs from the one found in fct_shift_logs",
      "is_signed": "No additional info about this field, potentially deprecated",
      "is_billable": "Related to \"Late Cancel\" and \"Sent Home\" fees, set to TRUE if toggled on from the manual bonus UI",
      "is_auto_assign_shift": "If the shift was created via Shift Invites and the worker accepted the shift, then TRUE. This shift is not released to the marketplace nor can a worker book this shift that was not the invited worker. Priority access and urgent shifts creation will be completely ignored if the provided shift has this value set to TRUE",
      "is_instant_pay": "If the shift is an instant pay shift, then TRUE",
      "is_hot_shift": "If the shift is a hot shift (subsidized shift due to being in GTM), then TRUE",
      "is_urgently_booked": "If the shift is an urgent shift and booked, then TRUE",
      "is_hcppaid_cancellation": "If the worker was paid for the shift after it was cancelled, then TRUE",
      "is_self_claimed": "If the worker booked the shift in the app, then TRUE",
      "is_auto_clocked_out": "If the worker was auto-clocked out, then TRUE\"",
      "is_changed_to_non_instant_pay": "If the shift was changed from 'Instant Pay' to 'Non-Instant Pay', then TRUE",
      "is_hazard_shift": "If the shift is designated as a hazard shift, then TRUE",
      "has_hazard_pay": "If hazard pay is offered by facility, then TRUE",
      "is_by_facility": "No additional info about this field",
      "is_holiday_shift": "If the shift is on a holiday, the TRUE",
      "is_verified_same_day": "If the shift is verified the same day it was worked, then TRUE",
      "has_nfc_tag": "If the facility has NFC tags enabled, then TRUE",
      "has_left_facility_geofence": "If the worker left the facility geofence during the shift, then TRUE",
      "has_sedation_experience": "If the shift requires sedation experience, then TRUE",
      "has_tray_assembly_experience": "If the shift requires tray assembly experience, then TRUE",
      "pay_inheritance_level": "The pay level that the shift inherited parameters from (the MSA level are market pricing parameters, the facility level are from HCF-pricing parameters, etc)",
      "hazard_charge": "If hazard pay is offered by facility, then this is the harzard charge for the facility",
      "max_charge_credit": "This is set when we apply max charge caps to the shift",
      "base_charge_rate": "Charge rate before any differentials are applied",
      "api_charge_rate": "Charge and pay breakdown when pay is configured",
      "time_differential": "Charge and pay breakdown when pay is configured",
      "holiday_differential": "Charge and pay breakdown when pay is configured",
      "manual_override": "Charge and pay breakdown when pay is configured",
      "hazard_pay": "If hazard pay is offered by facility, then this is that additional pay",
      "configured_pay": "Charge and pay breakdown when pay is configured",
      "holiday_pay": "Additonal pay for when shift is holiday shift",
      "rush_fee": "Charge and pay breakdown when pay is configured",
      "workplace_rating": "Rating of the facility/workplace (1-5 stars) that posted the shift, if available",
      "worker_rating": "Rating of the worker (1-5 starts) that worked the shift, if applicable",
      "api_pay": "Charge and pay breakdown when pay is configured",
      "base_pay": "Charge and pay breakdown when pay is configured",
      "boost_pay": "Additional amount to pay if the worker is eligible for boost pay related to streak rewards",
      "urgent_pay": "Additional amount to pay if the shift is an urgent shift",
      "nurse_pay_breakdown": "pay breakdown for shifts for HCPs with NURSE (LVN+RN) qualification",
      "nurse_charge_breakdown": "charge breakdown for shifts for HCPs with NURSE (LVN+RN) qualification",
      "pay": "Hourly pay of the shift for the worker",
      "charge": "Hourly charge of the shift for the facility",
      "shift_length": "Length of the shift, in hours",
      "net_pay": "Total net pay of the shift (i.e. pay * shift_length) for the worker",
      "net_charge": "Total net charge of the shift (i.e. charge * shift_length) for the facility",
      "net_revenue": "Total net revenue of the shift (i.e. net_charge - net_pay)",
      "clock_in_longitude": "Longitude of the worker when they clocked into the shift",
      "clock_in_latitude": "Latitude of the worker when they clocked into the shift",
      "clock_out_longitude": "Longitude of the worker when they clocked out of the shift",
      "clock_out_latitude": "Latitude of the worker when they clocked out of the shift",
      "lunch_out_longitude": "Longitude of the worker when they punched out to lunch",
      "lunch_out_latitude": "Latitude of the worker when they punched out to lunch",
      "lunch_in_longitude": "Longitude of the worker when they punched back in from lunch",
      "lunch_in_latitude": "Latitude of the worker when they punched back in from lunch",
      "lunch_skip_longitude": "If the worker skipped lunch, indicated their longitude at that point in time",
      "lunch_skip_latitude": "If the worker skipped lunch, indicated their latitude at that point in time",
      "shift_poster_name": "Name of the user who posted the shift",
      "shift_poster_type": "Type of the user who posted the shift, either can be EMPLOYEE or WORKPLACE_USER",
      "shift_start_at": "Start timestamp of the shift in UTC",
      "shift_end_at": "End timestamp of the shift in UTC",
      "updated_at": "timestamp of when the record was last updated",
      "created_from": "Can be used to determine source of shift creation. With Maple Integration we allow syncing of shift created on Maple to CBH",
      "created_at": "Timestamp of when the record was created",
      "created_week": "The date of the week that the shift was created, with the week starting on Mondays",
      "cancelled_at": "Timestamp of when the shift was cancelled, if applicable",
      "request_replacement_at": "Timestamp of when a replacement worker was requested by facility",
      "left_facility_geofence_at": "Timestamp of when a worker left the facility based on the geofence coordinates of the facility",
      "arrived_facility_geofence_at": "Timestamp of when a worker arrived at the facility based on the geofence coordinates of the facility",
      "timecard_created_at": "Timestamp that a corresponding timecard was created, if applicable",
      "verified_at": "Timestamp of when the shift was verified, if applicable",
      "clock_in_at": "Timestamp of when a worker clocked into the shift, if applicable",
      "clock_out_at": "Timestamp of when a worker clocked out of the shift, if applicable",
      "lunch_in_at": "Timestamp of when a worker clocked in from lunch, if applicable",
      "lunch_out_at": "Timestamp of when a worker clocked out to lunch, if applicable",
      "lunch_skip_created_at": "No additional info about this field",
      "priority_till_at": "No additional info about this field",
      "maple_integration_id": "If the shift was created via Maple, this is the ID of the shift in the Maple platform",
      "ingested_at": "{ doc(\"ingested_at\") }",
      "loaded_at": "{ doc(\"loaded_at\") }"
    }
  },
  "app_employeeprofiles_stg": {
    "description": "",
    "columns": {}
  },
  "rpt_automate_pending_suspension_decisions": {
    "description": "Report that automates the pending / suspension decision",
    "columns": {
      "salesforce_account_id": "Primary key, unique indentifier for the salesforce account",
      "customer_name": "Customer Name (i.e. HCF name)",
      "parent_name": "The name of the Salesforce parent account",
      "account_stage": "The current stage of the customer's account (i.e. onboarding, deactivated etc.)",
      "net_terms": "Net invoicing terms for the facility",
      "date_of_last_payment": "Date when the customer last made a payment",
      "amount_of_last_payment": "Dollar amount of the last payment made by the customer",
      "last_payment_percent_of_overdue_balance": "the amount of the customer's last payment divided by their total overdue balance",
      "overdue_balance": "sum of invoice balances for past due invoices",
      "total_balance": "sum of invoice balances for all unpaid invoices",
      "cnt_past_due_invoices": "number of invoices that are past due",
      "cnt_outstanding_invoices": "number of  unpaid invoices",
      "cnt_10_or_more_days_past_due_invoices": "number of invoices that are 10 or more days past due",
      "cnt_3_or_more_days_past_due_invoices": "number of invoices that are 3 or more days past due",
      "cnt_invoices_with_7_or_less_days_til_past_due": "number of invoices that are 7 or less days to past due. can also be interpreted as the number of invoices that will be past due in 7 days",
      "age_of_oldest_invoice": "number of days since the oldest unpaid invoice was sent",
      "days_since_last_payment": "number of days since the last payment was made",
      "last_30_day_verified_revenue": "dollar value of verfied revenue in the last 30 days",
      "revenue_of_future_booked_shifts": "dollar value of future booked revenue for the next 180 days",
      "cnt_short_paid_invoices": "number of outstanding invoices that have not been fully paid",
      "has_low_balance_invoice": "whether the customer has one or more low balance invoice. Where a low balance invoice is one that has a balance that is 20% or less than the customer's weekly verified revenue over the last 30 days",
      "credit_balance": "total credit balance for open invoices",
      "open_balance": "balance of invoices with a p2p_status of open",
      "workstream_handling": "Based on the Salesforce boolean columns, if is_with_legal is true, then the value is 'Legal', else if the is_handled_by_corp_pod is true then the value is 'Parent Account Pod', else if is is_handled_by_mini_corp_pod is true then the value is 'Mini Corp Pod', else if is_handled_by_weekly_workstream is true then the value is 'Weekly Workstream', else if has_insurance_claim_raised_for_facility is true then the value is 'Insurance', else if is_endorsed_to_third_party_debt_collector then the value is '3rd Party' else 'Not Handled'",
      "has_payment_plan": "If the account has a payment plan",
      "is_one_off_billing_handling": "true if the one-off handling has implications to pending/suspend execution, or if the one-off account handling diverges from the current pending/suspend guidance. Accounts with Legal or on Payment Plans should not have this box checked. Accounts on informal payment plans should have this boxed checked (ie. Accounts agreed to $xx payment each week, but did not sign a PA).",
      "billing_specialist_name": "the name of the billing specialist assigned to this customer",
      "workplace_type": "the workplace type of the customer",
      "has_pending_notice_enabled": "Signifies if the admin has enabled the pending notice alert for the facility",
      "pending_notice_date": "Time at which the facility will move from enrolled status to Pending status, if facility donot clear their invoice dues",
      "recommendation_status": "automatically generated recommendation for customer's account status",
      "adjusted_ineligible": "This column represents the adjusted ineligible amount for a customer. It is calculated based on the customer's balance and the sum of ineligible invoices. This value is used to determine the customer's eligibility for certain financial operations or services.",
      "adjusted_near_ineligible": "This column represents the adjusted near ineligible amount. It is calculated based on the balance of invoices that are close to becoming ineligible for payment. This is a key metric for understanding the potential risk associated with a customer's account. The adjustment is made to ensure that the near ineligible amount does not exceed 50% of the total balance of the account."
    }
  },
  "pa_dashboard_Median_shifts_worked_by_PA_worker_last_30_days": {
    "description": "",
    "columns": {}
  },
  "shift_id_fill_rate": {
    "description": "",
    "columns": {}
  },
  "fct_placement_candidate_logs": {
    "description": "Fact table for placement candidate log events with unbundled status changes from the updated_fields JSON",
    "columns": {
      "placement_candidate_log_id": "Unique identifier for the placement candidate log",
      "placement_candidate_id": "Identifier for the placement candidate",
      "worker_id": "Identifier for the worker associated with this placement candidate",
      "created_by_user_id": "Identifier for the user who created the log",
      "created_by_email": "Email of the user who created the log",
      "field_key": "The key of the field that was updated",
      "new_value": "The new value of the field after the change",
      "previous_value": "The previous value of the field before the change",
      "created_at": "Timestamp when the log was created",
      "updated_at": "Timestamp when the log was last updated",
      "ingested_at": "Timestamp when the record was ingested into the data warehouse",
      "loaded_at": "Timestamp when the record was loaded into the data warehouse"
    }
  },
  "pa_dashboard_MSA_HCFs_w_grater_than_60_percent_Booked_During_Priority_Next_6_weeks": {
    "description": "",
    "columns": {}
  },
  "fct_shifts": {
    "description": "fact table for shifts, where each records represents a single shift",
    "columns": {
      "shift_id": "Unique identifier for the shift",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "invoice_id": "Invoice associated to the shift. Note: this field is from the shifts table directly (i.e. from the app) so it does not tie to the invoice id in Invoiced, but rather to app_invoices_stg",
      "workplace_worker_combination_id": "Concat of the workplace and worker id, respectively",
      "group_id": "No additional info found. Note: potentially deprecated field",
      "verification_task_id": "Potentially used in table verification joins. Note: potentially deprecated field.",
      "timecard_id": "Timecard associated with the shift, if applicable",
      "verified_by_id": "No additional info found about this field",
      "previously_assigned_worker_id": "No additional info found about this field",
      "external_id": "No additional info found about this field",
      "request_replacement_by_id": "No additional info found about this field",
      "assigned_by_id": "No additional info found about this field",
      "shift_block_id": "Shift block which the shift is a part of",
      "shift_poster_id": "User who posted the shift",
      "shift_poster_name": "Name of the user who posted the shift",
      "shift_poster_type": "Type of the user who posted the shift, either can be EMPLOYEE or WORKPLACE_USER",
      "worker_name": "Name of the worker, if applicable",
      "shift_type": "The working time set by the facility (i.e. PM, AM, etc.)",
      "worker_requirement": "The type/level of worker that is required for the shift (i.e. nurse, EMT, etc.)",
      "original_requirement": "The type/level of worker when the shift was created, for unfilled shifts it will be the same as worker_requirement (we coaleasce original_requirement with worker_requirement) In most cases is the same as worker_requirement, but with exceptions for shifts posted as NURSE and CAREGIVER, for which the worker_requirement may be changed according to the worker that books the shift.\n",
      "cancellation_reason": "Reason why the shift was cancelled, if applicable",
      "invoice_number": "Invoice number from Invoiced.com (previously the invoice number from the shifts table which was inconsistent with the invoice number from invoiced.com)",
      "urgent_shift_type": "If a shift is defined as an urgent shift, this field denotes the type/urgency of the shift:\n\n| type           | description                                                      |\n|----------------|------------------------------------------------------------------|\n| 1              | No Call No Show (NCNS)                                           |\n| 2              | Late/Last Minute Cancellation (<= 8 hours before shift start)    |\n| 3              | Last minute shifts (posted within 24 hours of start)             |\n| 4              | DEPRECATED - part of instant fill feature                        |\n| NULL           | Not an urgent shift                                              |",
      "urgent_shift_reason": "The reason for the urgency of the shift. This field is only populated if the shift is an urgent shift. The reason can be one of the following:\n\n| enum value                          | description                                      |\n|-------------------------------------|--------------------------------------------------|\n| WORKER_REPLACEMENT_REQUESTED        | Worker replacement is requested                  |\n| ATTENDANCE_TRACKING_ALGO            | Urgency by attendance tracking algo              |\n| LATE_CANCELLATION                   | Urgency due to late shift cancellation           |\n| MAGIC_SHIFT                         | The shift is urgent because it's a magic shift   |",
      "urgent_shift_updated_at": "The date and time when the urgency of the shift was last updated. This field is only populated if the shift is an urgent shift.",
      "extend_bookability_to": "The date and time to which a shift's bookability was extended past it's start if the worker cancelled late or was a no show.",
      "clock_in_method": "Deprecated field, all values are NULL",
      "nfc_status_converted_by": "No additional info about this field",
      "nfc_status_converted_reason": "No additional info about this field",
      "verification_comments": "Notes regarding the verification of the shift",
      "market": "The market that the shift is in, msa, worker requirement tuple",
      "pricing_market": "The pricing market that the shift is in, msa, worker requirement tuple",
      "clock_in_connectivity_mode": "Indicates whether the worker was connected to the internet (i.e. online) when they clocked in, if applicable. Potentially deprecated",
      "clock_out_connectivity_mode": "Indicates whether the worker was connected to the internet (i.e. online) when they clocked out, if applicable. Potentially deprecated",
      "lunch_in_connectivity_mode": "Indicates whether the worker was connected to the internet (i.e. online) when they punched in from lunch, if applicable. Potentially deprecated",
      "lunch_out_connectivity_mode": "Indicates whether the worker was connected to the internet (i.e. online) when they punched out for lunch, if applicable. Potentially deprecated",
      "previously_assigned_worker_name": "No additional info about this field",
      "request_replacement_note": "If a facility requested a replacement worker, these are the notes added by the facility",
      "timecard_status": "Status of the worker's timecard for this shift, if applicable",
      "digital_signature": "The digital signature used to verify the shift, if applicable",
      "verification_method": "Method as to how the shift was verified, if applicable",
      "is_booked_same_shift": "No additional info about this field, potentially deprecated",
      "is_invoiced": "If shift is applicable to have an invoice, then TRUE",
      "is_deleted": "If shift is deleted/cancelled, then TRUE",
      "is_confirmed": "No additional info about this field, potentially deprecated",
      "is_verified": "If the worker's shift is verified by the workplace. This means the HCP should get paid and the facility charged. NOTE: This field may not be correct as it differs from the one found in fct_shift_logs",
      "is_signed": "No additional info about this field, potentially deprecated",
      "is_billable": "Related to \"Late Cancel\" and \"Sent Home\" fees, set to TRUE if toggled on from the manual bonus UI",
      "is_instant_pay": "If the shift is an instant pay shift, then TRUE",
      "is_urgently_booked": "If the shift is an urgent shift and booked, then TRUE",
      "is_hot_shift": "These shifts have the HotShift marker displayed in the HCP app.\n\n  These are subsidized shifts in GTM markets.",
      "is_hcppaid_cancellation": "If the worker was paid for the shift after it was cancelled, then TRUE",
      "is_self_claimed": "If the worker booked the shift in the app, then TRUE",
      "is_auto_clocked_out": "If the worker was auto-clocked out, then TRUE\"",
      "is_changed_to_non_instant_pay": "If the shift was changed from 'Instant Pay' to 'Non-Instant Pay', then TRUE",
      "is_hazard_shift": "If the shift is designated as a hazard shift, then TRUE",
      "has_hazard_pay": "If hazard pay is offered by facility, then TRUE",
      "is_by_facility": "No additional info about this field",
      "is_holiday_shift": "If the shift is on a holiday, the TRUE",
      "is_verified_same_day": "If the shift is verified the same day it was worked, then TRUE",
      "is_created_for_misc_payment": "If the shift is potentially created for any payment other than a shift (i.e. reimbursement, fees, etc.), then TRUE. Note: this field is based on a keyword search and is not exact. Keywords include: reimburse/reimbursement, milage, uber, lyft, hotel, bonus, overtime, extra time pay, sent home, cancellation, fee",
      "has_nfc_tag": "If the facility has NFC tags enabled, then TRUE",
      "has_left_facility_geofence": "If the worker left the facility geofence during the shift, then TRUE",
      "has_sedation_experience": "If the shift requires sedation experience, then TRUE",
      "has_tray_assembly_experience": "If the shift requires tray assembly experience, then TRUE",
      "pay_inheritance_level": "The pay level that the shift inherited parameters from (the MSA level are market pricing parameters, the facility level are from HCF-pricing parameters, etc)",
      "hazard_charge": "If hazard pay is offered by facility, then this is the harzard charge for the facility",
      "base_charge_rate": "Charge rate before any differentials are applied",
      "api_charge_rate": "Charge and pay breakdown when pay is configured",
      "time_differential": "Charge and pay breakdown when pay is configured",
      "holiday_differential": "Charge and pay breakdown when pay is configured",
      "manual_override": "Charge and pay breakdown when pay is configured",
      "hazard_pay": "If hazard pay is offered by facility, then this is that additional pay",
      "configured_pay": "Charge and pay breakdown when pay is configured",
      "holiday_pay": "Additonal pay for when shift is holiday shift",
      "rush_fee": "Charge and pay breakdown when pay is configured",
      "workplace_rating": "Rating of the facility/workplace (1-5 stars) that posted the shift, if available",
      "worker_rating": "Rating of the worker (1-5 starts) that worked the shift, if applicable",
      "api_pay": "Charge and pay breakdown when pay is configured",
      "base_pay": "Charge and pay breakdown when pay is configured",
      "boost_pay": "Additional amount to pay if the worker is eligible for boost pay related to streak rewards",
      "urgent_pay": "Additional amount to pay if the shift is an urgent shift",
      "pay": "Hourly pay of the shift for the worker, is null for shifts that are unclaimed",
      "estimated_pay": "Hourly estiamted pay of the shift for the worker for shifts that are unclaimed, is equal to pay for claimed shifts",
      "charge": "Hourly charge of the shift for the facility",
      "shift_length": "Length of the shift, in hours. This does not include any extra time worked (i.e. workers that worked through a break)",
      "extra_time_worked_length": "Length any extra time worked, of the shift, in hours. Note that this will pending on its approval status.",
      "net_pay": "Total net pay of the shift (i.e. pay * shift_length) for the worker. Note that this does not include any extra time worked.",
      "net_charge": "Total net charge of the shift (i.e. charge * shift_length) for the facility. Note that this does not include any extra time worked.",
      "net_revenue": "Total net revenue of the shift (i.e. net_charge - net_pay). Note that this does not include any extra time worked.",
      "total_shift_charge": "Total shift charge (shift_length * charge). Note that this does not include any extra time worked.",
      "total_shift_hazard_charge": "Total shift hazard charge (shift_length * hazard_charge). Note that this does not include any extra time worked.",
      "total_shift_base_charge_rate": "Total shift base charge rate (shift_length * base_charge_rate). Note that this does not include any extra time worked.",
      "total_shift_holiday_differential": "Total shift holiday differential (shift_length * holiday_differential). Note that this does not include any extra time worked.",
      "total_shift_manual_override": "Total shift manual override (shift_length * manual_override). Note that this does not include any extra time worked.",
      "total_shift_rush_fee": "Total shift rush fee (shift_length * rush_fee). Note that this does not include any extra time worked.",
      "total_shift_api_charge_rate": "Total shift API charge rate (shift_length * api_charge_rate). Note that this does not include any extra time worked.",
      "hours_between_shift_created_and_shift_start": "The number of hours between when the shift was created and when the shift is/was scheduled to start",
      "extra_time_worked_status": "If the shift has any extra time worked, this is the status of that extra time worked",
      "extra_time_worked_billed_to": "If the shift has any extra time worked, this is who paid for the extra time worked (i.e. HCF or CBH)",
      "extra_time_worked_reason": "If the shift has any extra time worked, this is the reason of that extra time worked",
      "clock_in_longitude": "Longitude of the worker when they clocked into the shift",
      "clock_in_latitude": "Latitude of the worker when they clocked into the shift",
      "clock_out_longitude": "Longitude of the worker when they clocked out of the shift",
      "clock_out_latitude": "Latitude of the worker when they clocked out of the shift",
      "lunch_out_longitude": "Longitude of the worker when they punched out to lunch",
      "lunch_out_latitude": "Latitude of the worker when they punched out to lunch",
      "lunch_in_longitude": "Longitude of the worker when they punched back in from lunch",
      "lunch_in_latitude": "Latitude of the worker when they punched back in from lunch",
      "lunch_skip_longitude": "If the worker skipped lunch, indicated their longitude at that point in time",
      "lunch_skip_latitude": "If the worker skipped lunch, indicated their latitude at that point in time",
      "shift_start_at": "Start timestamp of the shift in UTC",
      "shift_starts_at_local_time": "Start timestamp of the shift in the facility's timezone",
      "shift_end_at": "End timestamp of the shift in UTC",
      "shift_ends_at_local_time": "End timestamp of the shift in the facility's timezone",
      "updated_at": "timestamp of when the record was last updated",
      "created_at": "Timestamp of when the record was created",
      "created_week": "The date of the week that the shift was created, with the week starting on Mondays",
      "cancelled_at": "Timestamp of when the shift was cancelled, if applicable",
      "request_replacement_at": "Timestamp of when a replacement worker was requested by facility",
      "left_facility_geofence_at": "Timestamp of when a worker left the facility based on the geofence coordinates of the facility",
      "arrived_facility_geofence_at": "Timestamp of when a worker arrived at the facility based on the geofence coordinates of the facility",
      "timecard_created_at": "Timestamp that a corresponding timecard was created, if applicable",
      "verified_at": "Timestamp of when the shift was verified, if applicable",
      "clock_in_at": "Timestamp of when a worker clocked into the shift, if applicable",
      "clock_in_at_local_time": "Timestamp of when a worker clocked into the shift in facility's timezone, if applicable",
      "clock_out_at": "Timestamp of when a worker clocked out of the shift, if applicable",
      "clock_out_at_local_time": "Timestamp of when a worker clocked out of the shift in facility's timezone, if applicable",
      "lunch_in_at": "Timestamp of when a worker clocked in from lunch, if applicable",
      "lunch_in_at_local_time": "Timestamp of when a worker clocked in from lunch in facility's timezone, if applicable",
      "lunch_out_at": "Timestamp of when a worker clocked out to lunch, if applicable",
      "lunch_out_at_local_time": "Timestamp of when a worker clocked out to lunch in facility's timezone, if applicable",
      "lunch_skip_created_at": "No additional info about this field",
      "priority_till_at": "No additional info about this field",
      "workplace_salesforce_id": "workplace_salesforce_id\"",
      "workplace_type": "workplace_type",
      "workplace_name": "workplace_name",
      "workplace_email": "workplace_email",
      "workplace_account_stage": "workplace_account_stage",
      "workplace_timezone": "workplace_timezone",
      "workplace_state_code": "workplace_state_code",
      "workplace_csa": "workplace_csa",
      "workplace_msa": "workplace_msa",
      "workplace_pricing_msa": "workplace_pricing_msa",
      "workplace_longitude": "workplace_longitude",
      "workplace_latitude": "workplace_latitude",
      "workplace_zendesk_account_id": "workplace_zendesk_account_id",
      "workplace_salesforce_parent_id": "workplace_salesforce_parent_id",
      "worker_salesforce_id": "worker_salesforce_id",
      "worker_referrer_id": "worker_referrer_id",
      "worker_ota_build_id": "worker_ota_build_id",
      "worker_first_name": "worker_first_name",
      "worker_last_name": "worker_last_name",
      "worker_full_name": "worker_full_name",
      "worker_state_code": "worker_state_code",
      "worker_csa": "worker_csa",
      "worker_msa": "worker_msa",
      "worker_postal_code": "worker_postal_code",
      "worker_distance_preference": "worker_distance_preference",
      "worker_qualification": "worker_qualification",
      "worker_other_qualification": "worker_other_qualification",
      "worker_account_stage": "worker_account_stage",
      "worker_is_activated": "worker_is_activated",
      "worker_longitude": "worker_longitude",
      "worker_latitude": "worker_latitude",
      "deleted_reason": "deleted_reason",
      "is_100_instant_pay_enabled": "is_100_instant_pay_enabled",
      "is_stripe_payment": "is_stripe_payment",
      "instant_pay_rate": "instant_pay_rate",
      "total_amount": "total_amount",
      "paid_amount": "paid_amount",
      "remaining_amount": "remaining_amount",
      "instant_pay_status": "instant_pay_status",
      "instant_pay_shift_length": "instant_pay_shift_length",
      "hcp_clock_in_at": "hcp_clock_in_at",
      "hcp_lunch_out_at": "hcp_lunch_out_at",
      "hcp_lunch_in_at": "hcp_lunch_in_at",
      "hcp_clock_out_at": "hcp_clock_out_at",
      "submit_clock_in_at": "submit_clock_in_at",
      "submit_lunch_out_at": "submit_lunch_out_at",
      "submit_lunch_in_at": "submit_lunch_in_at",
      "submit_clock_out_at": "submit_clock_out_at",
      "admin_clock_in_at": "admin_clock_in_at",
      "admin_lunch_out_at": "admin_lunch_out_at",
      "admin_lunch_in_at": "admin_lunch_in_at",
      "admin_clock_out_at": "admin_clock_out_at",
      "completed_at": "completed_at",
      "instant_pay_shifts_updated_at": "Timestamp that the instant pay information for the shifts was last updated",
      "ncns_notes": "ncns_notes",
      "is_ncns": "is_ncns",
      "magic_points": "The number of 'Magic Points' that were used on the shift to give it Urgent Shift status and boost it's pay",
      "magic_shift_updated_at": "The date and time when the magic attributes were last updated.",
      "shift_deleted_at": "This column represents the timestamp of when a shift was deleted. It is useful for tracking the lifecycle of a shift and understanding when shifts are typically removed from the schedule.",
      "shift_open_at": "This column represents the timestamp of when a shift was first opened or made available. It can be used to analyze how far in advance shifts are typically posted and to track the lifecycle of a shift.",
      "first_shift_claim_at": "This column represents the timestamp of when a shift was first claimed by a worker. It can be used to understand how quickly shifts are typically claimed after they are posted.",
      "last_shift_claim_at": "This column represents the timestamp of when a shift was last claimed by a worker.",
      "first_shift_booked_at": "This column represents the timestamp of when a shift was first either booked by a worker. The first booking is defined as the first 'SHIFT_ASSIGN' or 'SHIFT_CLAIM' action.",
      "last_shift_booked_at": "This column represents the timestamp of when a shift was last booked by a worker. The last booking is defined as the last 'SHIFT_ASSIGN' or 'SHIFT_CLAIM' action.",
      "hours_from_shift_delete_to_start": "This column represents the number of hours between the time a shift was deleted and the time it was scheduled to start. This can be useful for understanding how much notice was given before a shift was cancelled.",
      "hours_from_shift_open_to_first_claim": "This column represents the number of hours between the time a shift was made available (opened) and the time it was first claimed by a worker. This can provide insights into how quickly shifts are being filled after they are posted.",
      "hours_from_shift_open_to_first_booked": "This column represents the number of hours between the time a shift was made available (opened) and the time it was first booked by a worker. This can provide insights into how quickly shifts are being filled after they are posted."
    }
  },
  "humangood_data": {
    "description": "",
    "columns": {}
  },
  "stg_kops_airtable__feq_build_status": {
    "description": "A staging model for the FEQ Build Status data sourced from Airtable.",
    "columns": {
      "module_id": "The module associated with the FEQ build.",
      "project_ids": "IDs of projects associated with the FEQ build.",
      "tasks": "List of tasks related to the FEQ build.",
      "department": "Department associated with the FEQ build.",
      "sprint": "Sprint associated with the FEQ build.",
      "flow_name": "The name of the FEQ flow.",
      "status": "Current status of the FEQ build.",
      "feq_builds_status": "The status of the FEQ build process.",
      "completion_track": "Indicates the completion track of the FEQ build.",
      "builder_id": "The ID of the builder associated with the FEQ build.",
      "builder_email": "The email of the builder associated with the FEQ build.",
      "builder_name": "The name of the builder associated with the FEQ build.",
      "modified_by_id": "The ID of the user who last modified the FEQ build.",
      "modified_by_email": "The email of the user who last modified the FEQ build.",
      "modified_by_name": "The name of the user who last modified the FEQ build.",
      "notes": "Notes associated with the FEQ build.",
      "created_at": "Timestamp of when the record was created",
      "airbyte_extracted_at": "Timestamp of when the data was extracted by Airbyte."
    }
  },
  "stg_salesforce__accounts": {
    "description": "Staging model for data coming from the Salesforce's accounts object",
    "columns": {
      "salesforce_account_id": "Primary key, unique indentifier for the salesforce account",
      "record_type_id": "This column represents the unique identifier for the type of record in the Salesforce system. It helps in distinguishing between different types of accounts, such as customer, partner, or internal accounts. This ID is automatically generated by Salesforce and is crucial for data management and reporting purposes.",
      "created_by_id": "This column represents the unique identifier of the user who created the account. It is useful for tracking the origin of the account and can be used for auditing purposes.",
      "last_modified_by_id": "This column represents the unique identifier of the user who last modified the account. It is useful for tracking changes to the account and can be used for auditing and accountability purposes.",
      "activity_metric_id": "This column represents the unique identifier of the activity metric associated with the account. It is useful for tracking and analyzing the activity and engagement level of the account.",
      "owner_id": "This column represents the unique identifier of the owner of the Salesforce account. It is used to link the account to the specific owner within the organization.",
      "zendesk_account_id": "This column represents the unique identifier of the associated Zendesk account. It is used to link the Salesforce account to the corresponding Zendesk account for customer support and service tracking.",
      "parent_id": "This column represents the unique identifier of the parent account in Salesforce. It is used to establish hierarchical relationships between accounts, allowing for the grouping and organization of related accounts.",
      "cbh_app_account_id": "This is the unique identifier for the account in the CBH application. It is used to link the account data in Salesforce with the corresponding account in the CBH application.",
      "invoiced_invoiced_customer_id": "This is the unique identifier for the customer in the invoicing system. It is used to link the account data in Salesforce with the corresponding customer in the invoicing system.",
      "atradius_id": "This is the unique identifier for the account in the Atradius system. Atradius is a credit insurance company that provides trade credit insurance, surety and collections services. This ID is used to link the account data in Salesforce with the corresponding account in the Atradius system.",
      "is_deleted": "This is a boolean field that indicates whether the account has been deleted. If the value is 'true', the account has been deleted. If the value is 'false', the account is active.",
      "name": "This is a string field that represents the name of the account. It is a unique identifier for each account in the Salesforce system.",
      "type": "This is a string field that represents the type of the account. It provides information about the category or segment the account belongs to, such as 'Customer', 'Partner', etc.",
      "billing_state": "This column represents the state where the account is billed. It is a string data type and can be used to understand the geographical distribution of the accounts.",
      "billing_country": "This column represents the country where the account is billed. It is a string data type and can be used to understand the geographical distribution of the accounts on a country level.",
      "shipping_postal_code": "This column represents the postal code of the shipping address for the account. It is a string data type and can be used to understand the geographical distribution of the accounts on a more granular level.",
      "is_add_to_do_not_contact_list": "This is a boolean field that indicates whether the account has been added to the 'Do Not Contact' list. If the value is true, it means the account should not be contacted for marketing or sales purposes.",
      "cms_certification_number": "This is a string field that holds the CMS (Centers for Medicare & Medicaid Services) certification number for the account. This number is used to identify healthcare providers that are certified to provide Medicare and/or Medicaid services.",
      "main_email_address": "This is a string field that holds the main email address associated with the account. This email address is typically used for primary communication with the account.",
      "invoiced_account_balance": "This field represents the current balance of the account in the invoicing system. It is a floating point number that can be positive (indicating the customer owes money) or negative (indicating the customer has a credit).",
      "is_salesloft_active_account": "This field is a boolean value indicating whether the account is active in SalesLoft. If the value is true, it means the account is currently active in SalesLoft. If the value is false, it means the account is not active in SalesLoft.",
      "salesloft_salesloft_domain": "This field represents the domain of the account in SalesLoft. It is a string value that provides the unique identifier for the account in the SalesLoft system.",
      "soft_credit_limit": "This field represents the soft credit limit for the account. It is the maximum amount of credit that the account can utilize without facing any penalties or additional charges. It is a floating point number.",
      "opportunity_count": "This field represents the total number of opportunities associated with the account. Opportunities are potential sales or deals that can turn into revenue for the company. It is an integer.",
      "billing_city": "This field represents the city where the account is billed. It is a string that contains the name of the city.",
      "shipping_address": "This field contains the full shipping address of the account. It is a combination of the street, city, state, and postal code where the account's goods are shipped to.",
      "facility_type": "This field indicates the type of facility associated with the account. It could be a hospital, clinic, nursing home, etc. This information is crucial for understanding the nature of the account's business and tailoring services accordingly.",
      "unqualified_reason": "This field provides the reason why an account is marked as unqualified. It helps in understanding the challenges or issues that prevent the account from being a qualified prospect. This information can be used to improve sales strategies and customer engagement.",
      "metro": "This field represents the metropolitan area where the account is located. It is useful for geographical analysis and segmentation of accounts.",
      "description": "This field contains a brief description of the account. It provides additional context about the account, which can be useful for understanding the account's business, industry, or specific characteristics.",
      "net_dispute_terms": "This field represents the terms of dispute resolution between the account and the company. It provides information about the agreed-upon process for resolving any disputes that may arise in the course of business.",
      "net_pay_terms": "This field represents the terms of payment agreed upon by the company and its clients. It indicates the period within which the client is expected to pay for the services or goods provided.",
      "lead_source": "DEPRECATED",
      "hard_credit_limit": "This field represents the maximum amount of credit that a company is willing to extend to a client. It is a fixed limit beyond which the client cannot borrow.",
      "staffing_preference": "DEPRECATED",
      "past_customer_reason": "DEPRECATED",
      "contract_type": "This field represents the type of contract that the company has with its clients. It could be a long-term contract, short-term contract, or any other type of agreement that the company has established with its clients.",
      "community_number": "This field represents the unique identifier for the community associated with the account. It is used to track and manage accounts within specific communities.",
      "payments_stem_from": "This field indicates the source or reason for the payments associated with the account. It provides insights into the financial transactions and can be used for financial analysis and forecasting.",
      "last_month_cancels": "DEPRECATED",
      "last_month_call_offs": "DEPRECATED",
      "all_time_net_revenue": "This field represents the total net revenue generated by the account over its entire lifetime. It is a key financial metric that provides insights into the account's profitability and financial performance.",
      "invoiced_attention_to": "This field represents the name of the individual or department to whom the invoice should be addressed. It is important for ensuring that invoices are directed to the correct party for payment.",
      "legal_entity_name": "This field represents the official legal name of the account. This is typically the name registered with government bodies for legal purposes and may differ from the business name or trading name.",
      "delightedinc_nps": "This field represents the Net Promoter Score (NPS) for the account as calculated by Delighted Inc. NPS is a measure of customer loyalty and ranges from -100 to 100. A higher score indicates greater customer satisfaction and loyalty.",
      "total_number_of_beds": "This field represents the total number of beds available in the facility. It is an important metric to understand the capacity of the facility.",
      "website": "This field contains the URL of the facility's official website. It can be used to gather more information about the facility.",
      "phone": "This field contains the primary contact phone number for the facility. It can be used for direct communication with the facility.",
      "is_blacklisted": "This field indicates whether the account has been blacklisted. If the value is 'true', the account is blacklisted. If the value is 'false', the account is not blacklisted.",
      "is_sdr_hcf_so_transition": "DEPRECATED",
      "has_onboarding_plus_email_sent": "DEPRECATED",
      "has_added_work_instructions": "DEPRECATED",
      "has_added_covid_information": "DEPRECATED",
      "has_added_payment_info": "DEPRECATED",
      "has_added_financial_statement": "DEPRECATED",
      "has_aster_staffing_agreement": "This field indicates whether the account has an Aster Staffing Agreement. If the value is 'true', the account has an Aster Staffing Agreement. If the value is 'false', the account does not have an Aster Staffing Agreement.",
      "has_exclusive_agreement": "DEPRECATED",
      "activation_type": "DEPRECATED",
      "is_raymart_verified_parent_accounts": "DEPRECATED",
      "is_create_on_invoiced": "This field indicates whether the account was created on invoiced. If the value is 'true', the account was created on invoiced. If the value is 'false', the account was not created on invoiced.",
      "time_region": "This field represents the time zone in which the account is located. It is important for scheduling and coordinating activities across different regions.",
      "number_of_contacts": "This field indicates the total number of contacts associated with the account. It provides a measure of the account's size and complexity.",
      "is_onboarding_call_completed": "DEPRECATED",
      "how_facility_was_activated": "DEPRECATED",
      "believed_number_of_child_accounts": "This field represents the estimated number of child accounts associated with a parent account. It is used for hierarchical account management and planning.",
      "is_endorsed_to_third_party_debt_collector": "This field indicates whether the account has been endorsed to a third-party debt collector. If the value is true, it means the account's debt has been handed over to a third-party debt collector for recovery.",
      "has_insurance_claim_raised_for_facility": "This field indicates whether an insurance claim has been raised for the facility associated with the account. If the value is true, it means an insurance claim has been filed for the facility.",
      "total_number_of_unenrolled_children": "This field represents the total number of children who are not currently enrolled in the facility associated with the account. This could be used to understand the potential capacity of the facility.",
      "is_reactivations_account": "DEPRECATED",
      "is_parent": "This field indicates whether the account is a parent account. If the value is true, it means the account is a parent account. If the value is false, it means the account is not a parent account.",
      "onboarding_call_conducted_by": "DEPRECATED",
      "days_since_last_shift_created": "This field represents the number of days since the last shift was created for the account. It helps in understanding the activity level of the account.",
      "is_receiving_ag": "This field indicates whether the account is currently receiving agency services. If the value is true, it means the account is receiving agency services. If the value is false, it means the account is not receiving agency services.",
      "is_receiving_ag_lvn": "This field indicates whether the account is currently receiving services from a Licensed Vocational Nurse (LVN). The value is a boolean, where 'true' means the account is receiving LVN services and 'false' means it is not.",
      "is_receiving_ag_rn": "This field indicates whether the account is currently receiving services from a Registered Nurse (RN). The value is a boolean, where 'true' means the account is receiving RN services and 'false' means it is not.",
      "receiving_ag_start_date": "This field represents the date when the account started receiving services from the agency. The date is in the format 'YYYY-MM-DD'.",
      "pbj_agency_hours_2022q4": "This field represents the total number of hours worked by the agency for the account in the fourth quarter of 2022. It is a measure of the agency's activity and engagement with the account during this period.",
      "is_pbj_top_40th_percentile": "DEPRECATED",
      "activations_owner": "DEPRECATED",
      "billing_address": "This field contains the complete billing address for the account. It includes the street, city, state, and postal code. This is the address where all billing-related communications and invoices are sent.",
      "is_contest_account": "DEPRECATED",
      "parent_contract_type": "This field indicates the type of contract that the parent account holds. It provides information about the terms and conditions agreed upon between the parent account and the company. This could include details about the services provided, payment terms, duration of the contract, etc.",
      "is_top_50_msa": "This is a boolean field that indicates whether the account is located in one of the top 50 Metropolitan Statistical Areas (MSAs) in the United States. An MSA is a geographical region with a relatively high population density at its core and close economic ties throughout the area.",
      "billing_latitude": "This field represents the latitude of the billing address for the account. Latitude is a geographic coordinate that specifies the north-south position of a point on the Earth's surface. It is used in combination with the longitude to precisely locate the billing address on a map.",
      "billing_longitude": "This field represents the longitude of the billing address for the account. Longitude is a geographic coordinate that specifies the east-west position of a point on the Earth's surface. It is used in combination with the latitude to precisely locate the billing address on a map.",
      "billing_rep": "The billing rep assigned to this account",
      "is_with_legal": "Whether the account is with the legal team or not",
      "is_handled_by_corp_pod": "If the account is being handled by the corp pod",
      "is_handled_by_mini_corp_pod": "If the account is being handled by the mini corp pod",
      "has_payment_plan": "If the account has a payment plan",
      "stage_of_legal_process": "The stage of the legal process the account is in",
      "a_r_covered_in_payment_plan": "A/R covered in the account's payment plan",
      "am_relationship_status": "The relationship the AM has with this account",
      "is_handled_by_weekly_workstream": "Whether the account is handled by weekly workstream",
      "rsc_sprint_owner": "User who is owning this account for the winter 2023 RSC sprint",
      "is_23_cw_no_fsp_sprint": "DEPRECATED",
      "is_core_call_list": "DEPRECATED",
      "core_call_list_reason": "DEPRECATED",
      "uses_agency": "Indicates the likelihood that an account uses agency, based on lead gen calls",
      "is_dec_reactivations": "DEPRECATED",
      "reactivation_tranche": "Reactivations category/tranche",
      "is_do_not_distribute": "Set to true for any account that is deliberately held out of sales distributions",
      "revenue_potential": "The level of potential revenue for this account, possible values are:\n            - High Potential\n            - Mid Potential   \n            - Low Potential\n            - CUT",
      "is_handled_by_internal_bad_debt_collection": "Whether the account is being handled by internal bad debt collection or not.",
      "salesforce_net_terms": "The Salesforce account's invoicing net terms\n",
      "is_one_off_billing_handling": "true if the one-off handling has implications to pending/suspend execution,\n          or if the one-off account handling diverges from the current pending/suspend guidance.\n          Accounts with Legal or on Payment Plans should not have this box checked.\n          Accounts on informal payment plans should have this boxed checked\n          (ie. Accounts agreed to $xx payment each week, but did not sign a PA).",
      "description_of_one_off_billing_handling": "Brief description of the billing handling process entered by Billing Rep\n          when marking the one_off_billing_handling field as true.",
      "status": "Current customer status of the account, possible values are:\n            - Active\n            - Inactive   \n            - Never Activated\n            - Prospect",
      "is_bad_payer": "This is used for accounts that were previously escalated to Internal Bad Debt Team and they were either able to fully collect on the account after a difficult process that included threats of legal action or those that we were able to collect partially following settlement to write off part of the amount. This tag is also used for accounts that our Internal Bad Debt Team were unable to collect but the value of AR deemed insufficient to escalate to legal.",
      "rationale_for_blacklist_or_bad_payer_tag": "Description of why the facility is either blacklisted or has a bad payer tag.",
      "coverage_status_narrative_from_insurance": "This field contains a narrative or description of the coverage status from the insurance company. It provides detailed information about the current status of the insurance coverage for the account.",
      "underwriter_entity_for_the_claim": "This field identifies the underwriting entity or insurance company that is responsible for the claim. It is the name of the insurance company that underwrote the policy and is handling any claims.",
      "gtm_day_owner": "Owner for most recent GTM day sprint",
      "am_billing_process_doc": "Account manager's billing process document",
      "is_high_risk_account": "Custom field that indicates if an account is considered high risk by the billing team.\n          We decide if an account is high risk based on history of delinquent payment,\n          difficulty in collecting outstanding payments,\n          and CBH managers are delaying re-enrollment until further payments.",
      "third_party_collection_agency": "The third-party collection agency for this account",
      "third_party_collector_status": "The third party debt collectors vendor working on this.",
      "has_churned_due_to_no_needs": "If the account has churned due to not having staffing needs",
      "attended_job_fair": "If the account attended the job fair",
      "pbj_agency_hours_2024q2": "Total agency hours worked in 2024Q2 per PBJ",
      "alf_reactivation_tier": "Prioritization tier for assisted living reactivations accounts",
      "snf_reactivation_tier": "Prioritization tier for skilled nursing reactivations accounts",
      "promo_eligible": "True if the account is eligible for 25% reactivation discount promo",
      "mto_contacts": "DEPRECATED",
      "mto_event_locations": "List of event locations that the account has expressed interest in",
      "mto_level_of_commitment": "Level of commitment the account has in attending the market events",
      "mto_notes_other_details": "Notes and other details relating to this account and the market events",
      "is_mto_rsvp_received": "DEPRECATED",
      "mto_stage": "Stage of engagement the account is at in the market event recruitment process",
      "competitors": "List of competitors the account is known to use",
      "limit_1_first_insurance_amount": "This field represents the first insurance limit amount for the account. It is the maximum amount that the insurance company will pay for a single claim or for an entire policy term.",
      "limit_2": "This field represents the second limit set for the insurance coverage of the account. It is a floating point number that indicates the maximum amount that can be claimed from the insurance.",
      "current_limit_latest_insurance_amount": "This field represents the current limit set for the latest insurance coverage of the account. It is a floating point number that indicates the maximum amount that can be claimed from the insurance at present.",
      "total_amount_reported": "This field represents the total amount that has been reported for the account. It is a floating point number that indicates the total revenue or cost associated with the account.",
      "total_amount_received": "This column represents the total amount that has been received by the account. It is a measure of the total revenue generated by the account and is useful for financial analysis and revenue tracking.",
      "ar_insured_amount": "This column represents the amount of accounts receivable that is insured. This is the amount that is covered by insurance in case of non-payment by the account. This is important for risk management and financial planning.",
      "amount_sent_to_3p": "The amount that was ent to third party debt collectors to chase",
      "amount_collected_by_3p": "Amount that third party debt collectors have managed to collect",
      "balance_remaining_on_3p": "This is the difference between Amount sent to 3p and Amount collected by 3p.",
      "created_at": "This column represents the date and time when the account was created. It provides information about the account's lifecycle and can be used for tracking account age, analyzing customer retention, and other time-based analyses.",
      "last_modified_at": "This column represents the date and time when the last modification was made to the account record. It is automatically updated by the system whenever any changes are made to the account. This field is useful for tracking changes and updates to the account over time.",
      "added_to_dnc_date": "This column represents the date when the account was added to the 'Do Not Contact' list. If an account is added to this list, it means that the account holder has requested not to be contacted for marketing or sales purposes. This field is important for ensuring compliance with customer preferences and legal regulations.",
      "latest_dnc_date": "This column represents the most recent date when the account was confirmed to be on the 'Do Not Contact' list. This could be the same as the 'added_to_dnc_date' if the account has not been removed and re-added to the list. This field helps to ensure that the account's 'Do Not Contact' status is up-to-date.",
      "last_activity_date": "This column represents the date of the last activity associated with the account. It helps in understanding the recent interactions or transactions related to the account.",
      "churn_reason_last_updated_date": "DEPRECATED",
      "onboarding_call_complete_date": "DEPRECATED",
      "onboarding_email_complete_date": "DEPRECATED",
      "self_onboarding_start_date": "DEPRECATED",
      "self_onboarding_finished_date": "DEPRECATED",
      "hcfso_welcome_email_sent_date": "DEPRECATED",
      "first_shift_request_date": "This column indicates the date when the first shift was requested by the account. It provides insights into when the account started requesting shifts, which can be useful for understanding the account's operational timeline.",
      "first_shift_assigned_date": "This column represents the date when the first shift was assigned to the account. It helps in understanding when the account started its operations after the shift request.",
      "first_shift_verified_date": "This column represents the date when the first shift was verified. It is important for tracking the start of operations for a particular account.",
      "ltc_last_call_attempted_at": "This column indicates the timestamp of the last attempted call to the Long Term Care (LTC) facility. This is useful for tracking communication efforts with the LTC facility.",
      "ltc_last_spoke_with_dm_at": "This column represents the timestamp of the last successful communication with the Decision Maker (DM) at the LTC facility. It helps in understanding the frequency and recency of our interactions with the decision makers at the facilities.",
      "onboarding_call_completed_date": "This column represents the last time that an onboarding call was completed for the account.",
      "resurrected_date": "This column represents the date when the account was resurrected or revived after being inactive or dormant. It is useful for tracking the lifecycle of an account and understanding the patterns of account activity.",
      "reactivated_date": "This column represents the date when the account was reactivated after being deactivated. This is important for understanding the account's history and the frequency of its activity.",
      "system_mod_at": "This column represents the timestamp of the last modification made to the account in the system. It helps in tracking the updates and changes made to the account over time.",
      "last_shift_assigned_date": "This column represents the date when the last shift was assigned to the account. It is useful for tracking the most recent activity related to shift assignments for the account.",
      "last_shift_requested_date": "This column represents the date when the last shift was requested by the account. It helps in understanding the most recent demand for shifts from the account.",
      "last_shift_verified_date": "This column represents the date when the last shift was verified for the account. It provides information about the most recent shift that has been verified and approved for the account.",
      "first_shift_created_date": "This column represents the date when the first shift was created for the account. It is useful for understanding when the account started operations.",
      "last_shift_created_date": "This column represents the date when the last shift was created for the account. It is useful for understanding the most recent activity in the account.",
      "payment_plan_start_date": "start date of the payment plan",
      "payment_plan_end_date": "end date of the payment plan",
      "uses_agency_last_updated": "Date the uses_agency field was last updated",
      "last_sister_activation_date": "Most recent date a sister account activated",
      "last_sister_contract_adjustment_date": "Most recent date a sister account adjusted their contract",
      "last_sister_contract_adjustment_field": "Most recent field changed for a contract by a sister account",
      "last_sister_cw_date": "Most recent date a sister account was closed",
      "last_corp_zd_ticket_date": "Most recent date a zendesk ticket was submitted by a corp",
      "warmly_last_seen_date": "Most recent date an account was seen through warmly",
      "last_cw_sister": "Last closed sister account id",
      "sister_shifts_since_cw": "Number of shifts since closed win",
      "last_activated_sister": "Last activated sister account id",
      "sister_shifts_since_activation": "Number of shifts since sister account activation",
      "sister_shifts_since_contract_adjustment": "Number of shifts since sister account contract adjustment",
      "last_contract_adjusted_sister": "Last sister with an adjusted contract account id",
      "motion_timer": "Date a rep has till to reach out and activate sister accounts",
      "motion_bucket": "The bucket for the motion",
      "education_guarantee": "Whether or not a school signs on with a guarantee",
      "first_date_insurance_coverage": "This column represents the date when the insurance coverage for the account started. It is useful for understanding the insurance history of the account.",
      "second_date_insurance_coverage": "This field represents the second date when the insurance coverage was active for the account. It is important for tracking the insurance coverage history of the account.",
      "current_date_insurance_coverage": "This field represents the current date of the insurance coverage for the account. It helps in understanding the current insurance status of the account.",
      "end_date_insurance_coverage": "This field represents the end date of the insurance coverage for the account. It is used to determine when the insurance coverage for the account ended or is expected to end.",
      "date_of_claim_submission": "This column represents the date when the insurance claim was submitted. It is important for tracking the timeline of insurance claims and understanding the duration of the claim process.",
      "date_of_compensation": "This column indicates the date when the compensation for the insurance claim was received. It helps in understanding the time taken for the claim to be processed and the compensation to be disbursed.",
      "bottom_up_campaign_type": "Bottom Up Campaign Type",
      "bottom_up_campaign_date": "Date of Bottom Up Campaign",
      "gtm_account_date": "Date of last inclusion in GTM day sprint",
      "sent_to_3p_date": "Date facility was endorsed to third party debt collectors.",
      "job_fair_date": "Date of job fair the account was scheduled to attend",
      "job_fair_lead_date": "Date of job fair where account was identified as a lead via HCP interview",
      "last_contact_gathering_date": "Last date contacts were gathered on this account",
      "net_terms": "The Salesforce account's invoicing net terms",
      "expected_recovery": "This column represents the expected amount to be recovered from the account. It is calculated based on the account's payment history, current balance, and other factors.",
      "principle_amount": "This column represents the original amount of the debt or loan, before interest or other charges. It is the amount upon which the debtor and creditor agreed.",
      "recurring_payment_amount": "This column represents the amount that the account is expected to pay on a recurring basis. This could be a monthly, quarterly, or annual payment, depending on the terms of the agreement.",
      "payment_cadence": "This column represents the frequency at which payments are expected to be made by the account. It could be weekly, monthly, quarterly, etc. This information is crucial for financial planning and cash flow management.",
      "date_payment_plan_offered": "This column indicates the date when a payment plan was offered to the account. This is important for tracking the timeline of financial negotiations and agreements with the account.",
      "date_payment_plan_signed": "This column represents the date when the payment plan was accepted and signed by the account. This marks the official start of the agreed payment plan and is essential for tracking compliance with the plan and managing financial expectations.",
      "expected_date_of_resolution": "This column represents the expected date when the resolution of a particular issue or task is anticipated to be completed. It is useful for tracking the progress and efficiency of problem-solving within the business.",
      "expected_week_of_resolution": "This column indicates the expected week when a resolution is anticipated to be achieved. This provides a broader timeframe for resolution completion, allowing for more flexibility in task management and planning.",
      "date_promise_was_broken": "This column records the date when a promise or commitment made to a client or within the business was not fulfilled. It is crucial for tracking accountability and understanding areas where the business may need to improve its reliability or communication.",
      "mto_sales_introduced_date": "DEPRECATED",
      "has_usage_cap": "This field indicates whether there is a usage cap on the account. It is a boolean field where 'true' means there is a cap and 'false' means there is no cap.",
      "usage_cap_amount": "This field represents the amount of the usage cap if there is one. It is a floating point number that represents the maximum amount that can be used.",
      "date_removed_from_blacklist": "This field represents the date when the account was removed from the blacklist. It is a date field in the format 'YYYY-MM-DD'. If the account has never been de-blacklisted, this field will be null.",
      "churn_identified": "This column indicates whether churn has been identified for the account. Churn refers to the process where customers stop doing business with an entity, in this case, the account. A value of 'Yes' means churn has been identified, while 'No' means it has not.",
      "churn_notes": "This column contains any additional notes or comments related to the churn status of the account. These notes may provide more context or details about the reasons for the churn, actions taken, or any other relevant information.",
      "latest_churn_outcome": "This column records the most recent outcome of the churn process for the account. It provides information on the latest status or result of churn-related actions or interventions.",
      "churn_outcome_last_updated_date": "This column represents the date when the last update was made to the churn outcome of the account. Churn outcome refers to the result or final status of an account after it has churned or stopped doing business with the company. This information is crucial for business users as it helps in understanding the churn patterns and reasons, which can be used to improve customer retention strategies.",
      "mto_sourced_by": "This column contains the ID of the person credited for inviting the account to one of our market takeover events.",
      "county": "This column represents the county in which the account is located.",
      "corporate_account_manager_id": "This column represents the salesforce user id of the corporate account manager assigned to this account.",
      "reason_for_write_off": "This field represents the reason why a particular account was written off. It provides insights into the circumstances or issues that led to the decision to write off the account.",
      "written_off_amount": "This field represents the total amount that was written off for a particular account. It is the amount that was deemed uncollectible and removed from the books.",
      "bad_debt_collected": "This field represents the amount of bad debt that was eventually collected. It is the amount that was previously written off but was later recovered.",
      "write_of_date": "This field represents the date when the account was written off. A write-off is an action that companies take when they determine that an account is uncollectible and remove it from their balance sheet. This typically happens when the debtor is unable to pay the outstanding amount. The date is in the format YYYY-MM-DD.",
      "last_competitor_identified": "This field contains the name of the most recent competitor we have evidence of an account working with.",
      "competitor_notes": "This field contains any notes that the sales or account management teams have captured pertaining to an accounts usage of and/or experience with competitors.",
      "competitors_last_updated_date": "This field represents the date that the Competitors field was last updated. This lets us know how recently we found evidence of an account using a competitor.",
      "usage_cap_frequency": "How often the usage cap resets",
      "usage_cap_status": "The current status of the usage cap",
      "usage_cap_comments": "Any additional comments on the usage cap",
      "is_usage_cap_reporting_only": "Indicates if the usage cap is reporting only",
      "usage_cap_start_date": "This field represents the date when the usage cap was implemented for the account. The usage cap is a limit set on the usage of a particular service or product. This information is important for tracking the account's usage and understanding when limitations were put in place.",
      "competitor_sprint_stage": "The stage this account is in for the competitor sales sprint.",
      "competitor_rates": "Details around charge rates that competitors are offering this account.",
      "billing_coordinates": "This field represents the geographical coordinates (latitude and longitude) of the billing address for the account. This information is useful for mapping and location-based analysis.",
      "is_manually_reenroll": "This field indicates whether the account has been manually re-enrolled. If the value is 'true', it means that the account was manually re-enrolled by an administrator or a user. If 'false', the account was not manually re-enrolled.",
      "bankruptcy_date": "This field represents the date when the account was declared bankrupt. It is important for financial and risk assessment purposes as it provides insights into the financial stability of the account. The date is in the format 'YYYY-MM-DD'.",
      "usage_cap_expiry_date": "This field represents the date when the usage cap on the account expires. The usage cap is a limit set on the usage of services or products. Once the cap is reached, the account may not be able to use the services or products until the cap is lifted or renewed. This date is important for business users to monitor as it can impact the account's ability to use the services or products, and may require action such as renewing the cap or contacting the account to discuss their usage.",
      "insurance_buyer_rating": "A buyer rating, also known as a risk rating, is an assessment by a credit insurer of a customer's financial health and their potential to default on payments.",
      "email_lead_stage": "Stage for accounts attributed to automated emails.",
      "nursa_shifts_by_hcp_l30d": "Shifts an HCF has posted on Nursa over the last 30 days, broken down by HCP type.",
      "nursa_shifts_l30d": "Total number of shifts an HCF has posted on Nursa over the last 30 days.",
      "last_nursa_shift": "Date of the last shift an HCF posted on Nursa.",
      "email_lead_stage_date": "Date the account became an email lead.",
      "mto_account_priority": "Priority bucket that each account falls into for MTO recruitment purposes.",
      "mto_rsvp_date": "Date the account submitted its RSVP for an MTO event.",
      "last_unassigned_date": "Date the account was last unassigned from sales distribution.",
      "last_unassigned_reason": "Reason the account was last removed from sales distribution.",
      "pbj_agency_hours_2024q3": "Total agency hours worked in 2024Q3 per PBJ.",
      "number_of_children_in_hierarchy": "Total number of children accounts in the account hierarchy.",
      "number_of_active_children_in_hierarchy": "Total number of active children accounts in the account hierarchy."
    }
  },
  "app_pii_agentprofiles_stg": {
    "description": "",
    "columns": {}
  },
  "monthly_hcf_shift_churn": {
    "description": "",
    "columns": {}
  },
  "stg_licenses_service__worker_license_logs": {
    "description": "Staging model for data coming from the licenses service's worker licenses logs table\n",
    "columns": {
      "worker_license_log_id": "Primary key, unique identifier for the worker license log\n",
      "worker_user_id": "user id of worker for whom license logs are for",
      "license_id": "id of worker license this log belongs to",
      "action": "Action taken on license",
      "update": "JSON value for keys changed in license",
      "created_by_id": "user id who performed the action",
      "created_by_type": "type of user who performed the action",
      "created_by_email": "email of user who performed the action",
      "created_at": "time at which action on license was recorded"
    }
  },
  "fct_zendesk_wops__qa_tickets": {
    "description": "Fact model for Worker Ops QA tickets in the WOPS Zendesk instance. These tickets represent Quality Audits conducted by auditors and leads on agents' handling of customer issues in Zendesk.\n",
    "columns": {
      "ticket_id": "Unique identifier for the Zendesk ticket.\n",
      "requester_id": "Unique ID of the requester.\n",
      "assignee_id": "Unique ID of the agent assigned to the ticket.\n",
      "ticket_form_id": "The ID of the ticket form used to submit the ticket.\n",
      "requester_name": "Name of the auditor who created the ticket.\n",
      "requester_email": "Email of the auditor who created the ticket.\n",
      "requester_role": "Role of the requester, representing the auditor.\n",
      "requester_supervisor": "Name of the supervisor of the auditor.\n",
      "assignee_name": "Name of the agent who was audited.\n",
      "assignee_email": "Email of the agent who was audited.\n",
      "assignee_role": "Role of the agent who was audited.\n",
      "assignee_supervisor": "Name of the supervisor of the assignee, being the agent who was audited.\n",
      "subject": "The subject of the ticket.\n",
      "description": "The description of the issue provided in the ticket.\n",
      "status": "The status of the ticket.\n",
      "ticket_form": "The name of the ticket form used to submit the ticket.\n",
      "cf_quality_assurance_reasons_for_contact": "Custom field indicating the reasons for contact in the QA ticket.\n",
      "handle_time": "The total time spent handling the ticket, in minutes.\n",
      "last_touch_handle_time": "The time spent on the last touch of the ticket, in minutes.\n",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "created_at_pst": "Timestamp of when the record was created. Converted to Pacific Standard Time",
      "updated_at_pst": "timestamp of when the record was last updated. Converted to Pacific Standard Time"
    }
  },
  "sf_farming_tasks_mod": {
    "description": "",
    "columns": {}
  },
  "fct_home_health_visit_occurrences": {
    "description": "Fact table for visit ocurrences from the home health service\n",
    "columns": {
      "visit_occurrence_id": "Visit occurrence ID",
      "actioned_at": "Actioned at",
      "actioned_by": "Actioned by",
      "agent_req": "Agent req",
      "charge_rate_in_minor_units": "Charge rate in minor units",
      "created_at": "Created at",
      "display_id": "Display id",
      "visit_occurrence_start": "Time when the worker started the visit",
      "visit_occurrence_end": "Time when the worker ended the visit",
      "duration_in_hours": "Duration of the visit in hours",
      "paid": "Worker was paid",
      "instant_pay": "Worker was paid instantly",
      "pay_rate_in_minor_units": "Pay rate in minor units",
      "pricing_type": "Pricing type can be PER_VISIT or PER_HOUR",
      "rejection_reason": "Rejection reason",
      "status": "Visit Occurrence status",
      "type_of_care": "Type of care can be HOME_HEALTH or HOSPICE",
      "visit_type": "Visit type",
      "worker_id": "Worker ID",
      "visit_id": "Visit ID",
      "workplace_id": "Workplace ID is the same facility ID",
      "case_id": "Case ID",
      "patient_id": "Patient ID"
    }
  },
  "sales_tasks_accounts_contacts_users": {
    "description": "",
    "columns": {}
  },
  "stg_amazon_connect__agent_metrics": {
    "description": "Staging model for Amazon Connect agent metrics data.",
    "columns": {
      "agent_metric_id": "The unique identifier for the agent metrics.",
      "agent_id": "Unique identifier for the agent.",
      "start_time": "The time when the agent's metrics tracking started.",
      "end_time": "The time when the agent's metrics tracking ended.",
      "abandonment_rate": "Percentage of abandoned contacts.",
      "agent_adherent_time": "Total time the agent was adherent to their schedule.",
      "agent_answer_rate": "Percentage of answered contacts by the agent.",
      "agent_non_adherent_time": "Total time the agent was not adherent to their schedule.",
      "agent_non_response": "Total count of non-responses by the agent.",
      "agent_non_response_without_customer_abandons": "Total count of non-responses without customer abandoning.",
      "agent_occupancy": "Percentage of time the agent was occupied with contacts.",
      "agent_schedule_adherence": "Percentage of adherence to the agent's schedule.",
      "agent_scheduled_time": "Total scheduled time for the agent.",
      "avg_abandon_time": "Average time before a contact was abandoned.",
      "avg_active_time": "Average active time per contact.",
      "avg_after_contact_work_time": "Average time spent in after-contact work.",
      "avg_agent_connecting_time": "Average time for an agent to connect with a customer.",
      "avg_agent_pause_time": "Average pause time by the agent.",
      "avg_contact_duration": "Average duration of the contact.",
      "avg_conversation_duration": "Average duration of the conversation.",
      "avg_dials_per_minute": "Average number of dials made per minute.",
      "avg_flow_time": "Average flow time of the contact.",
      "avg_greeting_time_agent": "Average time spent by the agent on greetings.",
      "avg_handle_time": "Average time spent handling a contact.",
      "avg_hold_time": "Average hold time during contacts.",
      "avg_hold_time_all_contacts": "Average hold time across all contacts.",
      "avg_holds": "Average number of holds per contact.",
      "avg_interaction_and_hold_time": "Average interaction and hold time per contact.",
      "avg_interaction_time": "Average interaction time per contact.",
      "avg_interruptions_agent": "Average number of interruptions by the agent.",
      "avg_interruption_time_agent": "Average time per interruption by the agent.",
      "avg_non_talk_time": "Average time spent not talking during a contact.",
      "avg_queue_answer_time": "Average time taken to answer contacts in the queue.",
      "avg_resolution_time": "Average time taken to resolve contacts.",
      "avg_talk_time": "Average talk time across all contacts.",
      "avg_talk_time_agent": "Average talk time by the agent during a contact.",
      "avg_talk_time_customer": "Average talk time by the customer during a contact.",
      "avg_wait_time_after_customer_connection": "Average wait time after customer connection.",
      "contacts_created": "Total number of contacts created.",
      "contacts_handled": "Total number of contacts handled by the agent.",
      "contacts_handled_by_connected_to_agent": "Total number of contacts handled after being connected to the agent.",
      "contacts_hold_abandons": "Total number of contacts abandoned while on hold.",
      "contacts_on_hold_agent_disconnect": "Total number of contacts disconnected by the agent while on hold.",
      "contacts_on_hold_customer_disconnect": "Total number of contacts disconnected by the customer while on hold.",
      "contacts_put_on_hold": "Total number of contacts put on hold.",
      "contacts_transferred_out_external": "Total number of contacts transferred out externally.",
      "contacts_transferred_out_internal": "Total number of contacts transferred out internally.",
      "contacts_queued": "Total number of contacts queued.",
      "contacts_queued_by_enqueue": "Total number of contacts queued by enqueue.",
      "contacts_transferred_out": "Total number of contacts transferred out.",
      "contacts_transferred_out_by_agent": "Total number of contacts transferred out by the agent.",
      "contacts_transferred_out_from_queue": "Total number of contacts transferred out from the queue.",
      "flows_outcome": "Total number of flows with an outcome.",
      "flows_started": "Total number of flows started.",
      "human_answered_calls": "Total number of calls answered by a human.",
      "max_flow_time": "Maximum flow time of the contacts.",
      "max_queued_time": "Maximum time a contact spent in the queue.",
      "min_flow_time": "Minimum flow time of the contacts.",
      "percent_contacts_step_expired": "Percentage of contacts that expired in a step.",
      "percent_contacts_step_joined": "Percentage of contacts that joined a step.",
      "percent_non_talk_time": "Percentage of non-talk time during a contact.",
      "percent_talk_time": "Percentage of talk time during a contact.",
      "percent_talk_time_agent": "Percentage of talk time by the agent during a contact.",
      "percent_talk_time_customer": "Percentage of talk time by the customer during a contact.",
      "service_level": "Service level percentage achieved.",
      "step_contacts_queued": "Total number of contacts queued in steps.",
      "sum_after_contact_work_time": "Total after-contact work time.",
      "sum_connecting_time_agent": "Total time agents spent connecting with contacts.",
      "contacts_abandoned": "Total number of contacts abandoned.",
      "sum_contacts_abandoned_in_x": "Total number of contacts abandoned within X seconds.",
      "sum_contacts_answered_in_x": "Total number of contacts answered within X seconds.",
      "sum_contact_flow_time": "Total flow time of all contacts.",
      "sum_contact_time_agent": "Total contact time of the agent.",
      "sum_contacts_disconnected": "Total number of contacts disconnected.",
      "sum_error_status_time_agent": "Total time spent in error status by the agent.",
      "sum_handle_time": "Total time spent handling contacts.",
      "sum_hold_time": "Total hold time of all contacts.",
      "sum_idle_time_agent": "Total idle time of the agent.",
      "sum_interaction_and_hold_time": "Total interaction and hold time of the agent.",
      "sum_interaction_time": "Total interaction time of the agent.",
      "sum_non_productive_time_agent": "Total non-productive time of the agent.",
      "sum_online_time_agent": "Total online time of the agent.",
      "sum_retry_callback_attempts": "Total number of retry callback attempts."
    }
  },
  "app_agentprofiles_stg": {
    "description": "DEPRECATED - Use dim_workers for any analyses/column definitions",
    "columns": {
      "id": "Unique ID of the agent. (This is normally the user id in our main app DB.)",
      "created_at": "Time at which the agent profile was created.",
      "higher_rate": "Whether or not the agent is enabled for a higher rate.",
      "show_referral_alert": "Whether or not the agent",
      "referral_code": "Unique referral code for each agent.",
      "name": "The name of the agent.",
      "tmz": "The timezone that the agent is in.",
      "country": "The country the agent is in.",
      "state": "The geographic state the agent is in.",
      "state_code": "Two letter code for the state the agent is in.",
      "msa": "The metropolitan statistical area of the agent.",
      "city": "City of the agent",
      "distance_preference": "How far the agent is willing to travel from their home location to find work.",
      "qualification": "Nursing qualification of the agent. I.e., CNA, LVN, etc.",
      "stage": "Agent stage in terms of whether they are onboarding, enrolled, etc.",
      "longitude": "Longiute of agent's home address.",
      "latitude": "Latitude of agent's home address.",
      "last_minute_notifications": "Whether or not the agent has enabled last minute notifications."
    }
  },
  "fasp_dashboard_workers_page_view_count": {
    "description": "This table contain workers page view count with the location in the last 6 months.",
    "columns": {
      "viewed_week": "date of last day of the week when the page is viewed.",
      "workplace_id": "facility ID of the facility user who viewed the page",
      "facility_name": "facility name of the shift owner",
      "location_count": "all the count of click on the workers page from a location.",
      "location": "this is the page name from where the user navigate to the workers page."
    }
  },
  "facility_num_posted_next_14_mod": {
    "description": "",
    "columns": {}
  },
  "pa_dashboard_percent_windowed_shifts_booked_with_PA_Next_30_days": {
    "description": "",
    "columns": {}
  },
  "stg_app__invoice_item_disputes": {
    "description": "Staging model for data coming from the application's invoice item dispute table\n",
    "columns": {
      "invoice_item_dispute_id": "Primary key, unique identifier for the invoice item dispute events\n",
      "shift_id": "Unique identifier for the shift",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "invoiced_hours": "Number of invoiced hours",
      "invoiced_rate": "Invoiced charge rate",
      "invoiced_amount": "Total amount invoiced",
      "dispute_hours": "Number of disputed hours",
      "dispute_charge": "Disputed charge rate",
      "dispute_amount": "Disputed total amount",
      "dispute_should_not_exist": "Flag indicating if the \u2018This professional did not work\u2019, was marked'",
      "dispute_comment": "Comment related to the dispute",
      "result_hours": "Resulting hours after dispute resolution",
      "result_charge": "Resulting charge after dispute resolution",
      "result_amount": "Resulting total amount after dispute resolution",
      "result_should_not_exist": "Flag indicating if the result should not exist",
      "result_comment": "Comment related to the result",
      "status": "Status of the dispute (DRAFT, IN_PROGRESS, ACCEPTED, REJECTED)",
      "invoice_id": "Id of the associated invoice",
      "invoice_type": "Type of the associated invoice (INVOICE, UPCOMING_CHARGE)",
      "invoice_item_id": "Id of the associated invoice item",
      "invoice_item_type": "Type of the associated invoice item (SHIFT, NON_SHIFT)",
      "description": "Description of the dispute",
      "created_by_id": "Id of the user who created the dispute",
      "created_by_type": "Type of the user who created the dispute (WORKPLACE_USER, EMPLOYEE)",
      "actioned_by_id": "Id of the user who took action on the dispute",
      "actioned_at": "Timestamp when the dispute was actioned",
      "actioned_by_type": "Type of the user who took action on the dispute (WORKPLACE_USER, EMPLOYEE)",
      "is_archived": "Flag indicating if the dispute is archived",
      "created_at": "Invoice item dispute Created At",
      "updated_at": "Invoice item dispute Updated At",
      "invoice_period_start": "Start date of the invoice period",
      "invoice_period_end": "End date of the invoice period",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "pa_dashboard_FCF_to_Claimed_Shifts_PA_vs_Non_PA_Weekly": {
    "description": "",
    "columns": {}
  },
  "facility_experience_v2": {
    "description": "",
    "columns": {}
  },
  "report_pii_braze_sms_optin": {
    "description": "Reporting table containg all the workers who had an in-app message regarding opting in to marketing SMS. Accepting or declining the message can be found using the button_id. Because there can be instances where a worker clicks a button multiple times, we are only showing the result of the latest button click.",
    "columns": {
      "inapp_message_click_id": "unique ID of this in-app message click event",
      "braze_user_id": "Braze user ID of the user",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "canvas_id": "ID of the Canvas if from a Canvas",
      "canvas_variation_id": "ID of the Canvas variation the user is in if from a Canvas",
      "button_id": "Index of the button clicked if it was a button that was clicked, tracking ID of the click if the event came from an appboyBridge.logClick or brazeBridge.logClick invocation, or choice_id if the in app-message type is a simple survey,",
      "canvas_name": "Name of the Canvas",
      "canvas_variation_name": "Name of the Canvas variation the user is in if from a Canvas",
      "worker_name": "Name of the worker",
      "worker_phone": "Phone number of the worker. PII",
      "event_at": "Timestamp when the user clicked the in-app message"
    }
  },
  "subsidy_analysis": {
    "description": "Subsidized shifts report detailing all shifts that were subsidized, by market, subsidy_type and margin\n",
    "columns": {
      "subsidized_shift_id": "Surrogate key created from shift_id/worker_id pair that denotes an id for a given subsidized shift",
      "shift_id": "TBD",
      "worker_id": "TBD",
      "workplace_pricing_msa": "TBD",
      "workplace_state_code": "TBD",
      "worker_type": "TBD",
      "market": "TBD",
      "workplace_id": "TBD",
      "shift_start_at": "TBD",
      "start_month": "TBD",
      "weekday_base": "TBD",
      "weekend_base": "TBD",
      "shift_pay": "TBD",
      "shift_charge": "TBD",
      "shift_net_revenue": "TBD",
      "shift_net_pay": "TBD",
      "shift_net_charge": "TBD",
      "shift_margin": "TBD",
      "subsidy_amount": "TBD",
      "shift_start_time_local_timezone": "TBD",
      "urgent_shift_type": "TBD",
      "is_manual_override": "TBD",
      "latest_cancellation_lead_time": "TBD",
      "is_restricted_related": "TBD",
      "is_weekend": "TBD",
      "target_charge": "TBD",
      "subsidy_type": "TBD",
      "reliability_subsidy_type": "TBD",
      "is_subsidized": "TBD",
      "is_verified": "Indicates if the shift has been verified\n",
      "gtm_start": "TBD",
      "last_claimed": "TBD",
      "claim_count": "TBD"
    }
  },
  "weekly_msa_type_hcp_churn": {
    "description": "",
    "columns": {}
  },
  "int_shift_block_workers": {
    "description": "Table of the shift blocks agents have worked.\n",
    "columns": {
      "shift_block_worker_id": "Unique identifier for the table\n",
      "shift_block_id": "Shift block Id associated with the agent's work.\n",
      "worker_id": "Worker Id associated with the worked shift block.\n",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "home_health_monthly_workplace_churn": {
    "description": "Table that reports on workplace churn at the monthly workplace grain for Home Healthcare and Hospice\n",
    "columns": {
      "monthly_workplace_id": "Surrogate that is a combination of the workplace id and month\n",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "date_month": "The calendar month\n",
      "msa": "MSA of the workplace\n",
      "type": "The type of workplace\n",
      "csa": "CSA of the workplace\n",
      "state": "State where the workplace is located\n",
      "salesforce_id": "Salesforce account ID for the workplace\n",
      "salesforce_parent_id": "Salesforce account ID of the workplace's parent\n",
      "num_visits": "The number of visits for the workplace with start dates in the month\n",
      "cohort": "The month that the workplace first posted a visit\n",
      "is_first_visit_month": "If the date_month is also the month that the workplace first posted a visit\n",
      "initial_churn": "1 if the workplace is churned / churning for the first time, 0 otherwise\n",
      "is_activate_never_churned": "1 if the workplace posted at least one visits in the month and has never churned previously, 0 otherwise\n",
      "is_activate_reactivated": "1 if the workplace posted at least one visits in the month but has churned in a previous month, 0 otherwise\n",
      "reactivation_churn": "1 if the workplace is churned / churning for the second time or greater, 0 otherwise"
    }
  },
  "hcp_churn_resurrection_weekly_fin": {
    "description": "",
    "columns": {}
  },
  "first_six_months_and_annual_nurse_take_home_msa": {
    "description": "",
    "columns": {}
  },
  "facility_actions_mod": {
    "description": "",
    "columns": {}
  },
  "timesheets_instant_pay_shifts": {
    "description": "",
    "columns": {}
  },
  "ncns_churn": {
    "description": "",
    "columns": {}
  },
  "investor_monthly_new_hcf_revenue": {
    "description": "",
    "columns": {}
  },
  "int_transactions__latest_distinct": {
    "description": "Intermediate table containing the latest, distinct transactions based on Invoiced logger data",
    "columns": {
      "transaction_id": "Transaction identifier",
      "customer_id": "Customer identifer",
      "invoice_id": "Invoice identifier",
      "payment_id": "Payment identifer",
      "transaction_type": "Transaction type (i.e. payment, charge, etc.)",
      "payment_method": "Payment method (i.e. check, ach, etc.)",
      "status": "Transaction status",
      "currency_code": "3-letter ISO currency code",
      "amount": "Total transaction amount",
      "transaction_date": "Transaction date",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "_airbyte_meta": "Airbyte metadata",
      "pdf_url": "URL where receipt PDF can be downloaded"
    }
  },
  "rpt_monthly_crawl_charts_by_vertical": {
    "description": "This model calculates cumulative and partitioned metrics for shifts and revenue. It builds on the `logs_and_shifts_int` and `dim_workplaces` models to produce daily and cumulative aggregates such as shifts gain, revenue gain, and posting ratios.\n",
    "columns": {
      "monthly_vertical_crawl_sk": "surrogate key created from the vertical_type, created_day and start_month",
      "vertical_type": "Type of vertical, derived from the `dim_workplaces` table.",
      "created_day": "The day the log record was created.",
      "start_month": "The starting day of the month for the shift logs.",
      "shifts_gain": "Net shift gain computed as num_more - num_less.",
      "revenue_gain": "Net revenue gain computed as added_rev - lost_rev.",
      "days_to_month_start": "The difference between the start_month and the created_day.",
      "cum_shifts_added": "Cumulative number of shifts added over the month.",
      "cum_shifts_posted": "Cumulative number of shifts posted over the month.",
      "cum_shifts_removed": "Cumulative number of shifts removed over the month.",
      "cum_shifts_lost": "Cumulative number of shifts lost over the month.",
      "cum_rev_added": "Cumulative revenue added over the month.",
      "cum_rev_lost": "Cumulative revenue lost over the month.",
      "cum_shifts": "Net cumulative shifts calculated as cum_shifts_added - cum_shifts_lost.",
      "cum_rev": "Net cumulative revenue calculated as cum_rev_added - cum_rev_lost.",
      "cum_posting": "Cumulative posting computed as cum_shifts_posted - cum_shifts_removed.",
      "cum_shifts_lost_to_added_ratio": "The ratio of cumulative shifts lost to cumulative shifts added. This is calculated only when cum_shifts_added > 0.\n",
      "cum_rev_lost_to_added_ratio": "The ratio of cumulative revenue lost to cumulative revenue added. This is calculated only when cum_rev_added > 0."
    }
  },
  "dim_zendesk_wops__users": {
    "description": "Dimension model representing Zendesk WOPS users, namely agents and workers and their attributes.",
    "columns": {
      "user_id": "The unique identifier for the user.",
      "external_id": "An external ID for the user, used for integration with other systems, namely CBH app.",
      "salesforce_id": "Related Salesforce ID for the user.",
      "organization_id": "The ID of the organization the user belongs to.",
      "user_name": "The full name of the user.",
      "user_email": "The email address of the user.",
      "user_phone": "The phone number of the user.",
      "user_role": "The role of the user, such as 'end-user', 'agent', or 'admin'.",
      "tags": "The tags associated with the user.",
      "referral_code": "Referral code associated with the worker for tracking referrals, coming from CBH app.",
      "formatted_address": "Formatted address of the user.",
      "qualification": "The qualification of the user (e.g., CNA, LVN), coming from CBH app.",
      "state": "State of the user, coming from CBH app.",
      "app_version": "The current app version of the user, coming from CBH app.",
      "number_of_future_shifts_staffed": "The number of upcoming shifts for the user, if applicable, coming from CBH app.",
      "active_license": "Information about the active license of the user, coming from CBH app.",
      "attendance_score": "Attendance score based on attendance policy, coming from CBH app.",
      "num_no_call_no_show": "Number of shifts where the user was a no call no show (excused + unexcused), coming from CBH app.",
      "num_excused_no_call_no_show": "Number of shifts where the user had an excused no call no show (NCNS), coming from CBH app.",
      "num_unexcused_no_call_no_show": "Number of shifts where the user had an unexcused no call no show (NCNS), coming from CBH app.",
      "is_agent": "Indicates if the user is an agent.",
      "agent_supervisor": "The supervisor or team lead of the agent.",
      "agent_role": "The specific role of the agent within the organization.",
      "agent_status": "The current status of the agent.",
      "agent_company": "The company the agent is associated with.",
      "agent_line_of_business": "The line of business the agent is part of.",
      "is_active": "Whether the user is active.",
      "is_verified": "Whether the user's email is verified.",
      "is_suspended": "Whether the user is suspended.",
      "is_permanently_deleted": "Whether the user is permanently deleted.",
      "worker_has_notifications_off": "Indicates if the worker has notifications turned off.",
      "is_agent_chat_only": "Whether the user is a chat-only agent.",
      "is_agent_moderator": "Whether the user is a forum moderator.",
      "time_zone": "The user's time zone.",
      "last_worked_at": "Timestamp of the last shift worked by the user.",
      "app_last_logged_in_at": "Timestamp of the user's last login to the app.",
      "zendesk_last_login_at": "The time the user last logged in to Zendesk.",
      "created_at": "Timestamp of when the user was created.",
      "updated_at": "Timestamp of the last update to the user's record.",
      "ingested_at": "Timestamp of when the user's data was ingested."
    }
  },
  "rpt_payments_base": {
    "description": "Reporting model for WOPs Payment Base combining Stripe Transfers, Bonuses, Shifts, Invoices, and Agent details.",
    "columns": {
      "payments_base_id": "Payments Base Id",
      "stripe_transfer_id": "Stripe transfer ID.",
      "balance_transaction_id": "Stripe balance transaction ID.",
      "shift_id": "Shift ID associated with the payment.",
      "worker_id": "Worker ID associated with the shift.",
      "agent_user_id": "Processing agent User ID (from employee_id, shift_logs, bonus admin, or verifier).",
      "transfer_description": "Description of the Stripe transfer.",
      "stripe_transfer_amount": "Original Stripe transfer amount in cents.",
      "stripe_reversed_amount": "Amount reversed from Stripe transfer in cents.",
      "worker_pay": "Final worker payment amount (stripe_transfer_amount - reversed amount) / 100.",
      "bonus_reason": "Reason for bonus payout.",
      "bonus_charge": "Bonus charge amount.",
      "bonus_amount": "Bonus payout amount.",
      "bonus_facility_id": "Facility ID associated with the bonus.",
      "created_by": "Admin ID who created the bonus.",
      "shift_invoice_id": "Invoice ID associated with the shift.",
      "shift_net_pay": "Net pay of the shift.",
      "shift_net_charge": "Net charge of the shift.",
      "verified_by_id": "ID of the user who verified the shift.",
      "mapping_invoice_id": "Invoice ID from invoice mappings.",
      "mapping_item_id": "Item ID from invoice mappings.",
      "mapping_item_type": "Item type from invoice mappings.",
      "mapping_description": "Description from invoice mappings.",
      "mapping_total_charge": "Total charge from invoice mappings.",
      "mapping_total_pay": "Total pay from invoice mappings.",
      "mapping_dispute_solved": "Whether invoice item dispute is resolved.",
      "mapping_disputed": "Whether invoice item was disputed.",
      "invoice_status": "Status of the mapped invoice.",
      "invoice_closed": "Whether mapped invoice was closed.",
      "group_name": "Standardized team group name based on agent roster or Stripe transfer description.",
      "consolidated_shift_id": "Consolidated Shift ID from either Stripe or Bonus record.",
      "shift_log_id": "ID of the related shift log (used to identify special cases like sent-home pay).",
      "billing_category": "Derived billing categorization based on status, charges, and invoice mapping.",
      "ticket_type": "Derived ticket type based on bonus reason and tranfer descriptions.",
      "shift_start_at": "Shift start timestamp.",
      "shift_end_at": "Shift end timestamp.",
      "bonus_created_at": "Timestamp when the bonus was created.",
      "transfer_created_at": "Transfer created timestamp."
    }
  },
  "report_zendesk__qtf_tickets": {
    "description": "report model containing custom fields and custom metrics for QTF\n",
    "columns": {
      "ticket_id": "unique identifier for zendesk tickets",
      "requester_id": "unique identifier for zendesk requesters\n",
      "assignee_id": "unique identifier for zendesk assignees\n",
      "organization_id": "unique identifier for zendesk organizations\n",
      "workplace_id": "unique identifier for zendesk organizations to link to app profiles\n",
      "brand_id": "unique identifier for zendesk brands\n",
      "subject": "subject of the ticket\n",
      "requester_name": "name of the ticket requester\n",
      "requester_email": "email of the ticket requester\n",
      "assignee_name": "name of the ticket assignee",
      "organization_name": "name of the facility\n",
      "facility_type": "type of the facility\n",
      "channel": "channel the ticket was created from\n",
      "ticket_status": "status of the ticket\n",
      "priority": "priority of the ticket\n",
      "recipient": "address that received of the ticket\n",
      "description": "description of the ticket\n",
      "ticket_tags": "tags on the ticket\n",
      "ticket_type": "type of the ticket\n",
      "qtf_actions_taken": "list of all actions taken\n",
      "legalpr_risk": "is there a legal or pr risk\n",
      "qtf_primary_facility_issue": "what was the primary issue\n",
      "qtf_nps_score": "what is the nps score\n",
      "t_s_first_reply_time": "first reply time recorded for t and s\n",
      "on_hold_hours_offset": "hours on hold\n",
      "total_time_spent_sec": "total time spetn\n",
      "escalation_reason": "reason for escalation if exists\n",
      "time_spent_last_update_sec": "time spent last update in seconds\n",
      "escalation_review": "result of escalation review\n",
      "t_s_facility_id": "facility id input by agent\n",
      "escalation_team": "team handling escalation\n",
      "qtf_outreach_success": "was there a qtf intervention\n",
      "escalated_ticket": "escalated ticket if exists\n",
      "qtf_churned_account": "is the account churned\n",
      "did_qtf_action_dummy_doc": "was a dummy doc action taken\n",
      "did_qtf_action_none": "was no action taken\n",
      "did_qtf_action_braze": "was a braze action taken\n",
      "did_qtf_action_unassign": "was an unassign action taken\n",
      "did_qtf_action_fees": "was a fees action taken\n",
      "did_qtf_action_boost_rates": "was a boost rates action taken\n",
      "did_qtf_action_quiz": "was a quiz action taken\n",
      "shifts_per_day_45_days_prior": "shifts per day prior to ticket\n",
      "shifts_per_day_45_days_after": "shifts per day after ticket\n",
      "revenue_per_day_45_days_prior": "revenue per day prior to ticket\n",
      "revenue_per_day_45_days_after": "revenue per day after ticket\n",
      "avg_worker_rating_prior": "rating 3 months prior to ticket\n",
      "avg_worker_rating_after": "rating 2 weeks after ticket\n",
      "count_worker_rating_prior": "ratings 3 months prior to ticket\n",
      "count_worker_rating_after": "ratings 2 weeks after ticket\n",
      "dnrs_before_ticket": "# of dnrs before ticket\n",
      "dnrs_after_ticket": "# of dnrs after ticket\n",
      "churned_current_date": "is hcf currently churned\n",
      "churned_at_ticket_creation": "was hcf churned at time of ticket\n",
      "churned_30_days_after_ticket_creation": "was hcf churned 30 days after ticket.\n",
      "reopens": "number of reopens on the ticket\n",
      "replies": "number of replies on the ticket\n",
      "reply_time_in_minutes": "time taken to reply to the ticket in minutes\n",
      "first_resolution_time_in_minutes": "time taken to resolve the ticket for the first time in minutes\n",
      "full_resolution_time_in_minutes": "time taken to resolve the ticket in minutes\n",
      "handle_time": "time taken to handle the ticket in seconds\n",
      "created_at": "\"Timestamp of when the record was created\"",
      "initially_assigned_at": "timestamp of when the ticket was initially assigned\n",
      "assigned_at": "timestamp of when the ticket was assigned\n",
      "solved_at": "timestamp of when the ticket was solved\n",
      "generated_timestamp": "timestamp of when the ticket was generated\n",
      "updated_at": "\"timestamp of when the record was last updated\""
    }
  },
  "hcp_first_booked_mod": {
    "description": "",
    "columns": {}
  },
  "fct_zendesk__qtf_tickets": {
    "description": "fact model for qtf zendesk tickets\n",
    "columns": {
      "ticket_id": "unique identifier for zendesk tickets",
      "subject": "unique subject of the ticket\n",
      "requester_id": "unique identifier for zendesk requesters\n",
      "assignee_id": "unique identifier for zendesk assignee\n",
      "ticket_form_id": "unique identifier for ticket forms\n",
      "organization_id": "unique identifier for zendesk organizations\n",
      "brand_id": "unique identifier for zendesk brands\n",
      "requester_name": "name of the ticket requester\n",
      "requester_email": "email of the ticket requester\n",
      "assignee_name": "name of the ticket assignee\n",
      "assignee_email": "email of the ticket assignee\n",
      "assignee_supervisor": "supervisor of the ticket assignee\n",
      "assignee_agent_role": "role of the ticket assignee agent in their team/roster\n",
      "group_name": "name of the zendesk group the ticket is assigned to\n",
      "ticket_form_name": "name of the zendesk ticket form the ticket was created with\n",
      "channel": "channel the ticket was created from\n",
      "status": "status of the ticket\n",
      "priority": "priority of the ticket\n",
      "recipient": "address that received of the ticket\n",
      "description": "description of the ticket\n",
      "ticket_type": "type of the ticket\n",
      "ticket_tags": "tags on the ticket\n",
      "t_s_facility_id": "value of custom field for facility id\n",
      "legalpr_risk": "value of custom field for legal pr risk\n",
      "t_s_first_reply_time": "value of custom field for t and s first reply time\n",
      "reopens": "number of times the ticket was reopened\n",
      "replies": "number of replies on the ticket\n",
      "reply_time_in_minutes": "time taken to reply to the ticket in minutes\n",
      "first_resolution_time_in_minutes": "time taken to resolve the ticket for the first time in minutes\n",
      "full_resolution_time_in_minutes": "time taken to resolve the ticket in minutes\n",
      "handle_time": "time taken to handle the ticket in minutes\n",
      "created_at": "\"Timestamp of when the record was created\"",
      "initially_assigned_at": "timestamp of when the ticket was initially assigned\n",
      "assigned_at": "timestamp of when the ticket was assigned\n",
      "solved_at": "timestamp of when the ticket was solved\n",
      "generated_timestamp": "timestamp of when the ticket was generated\n",
      "updated_at": "\"timestamp of when the record was last updated\""
    }
  },
  "fct_zendesk__mqr_audit_the_auditor_tickets": {
    "description": "Fact model for MQR Audit the Auditor tickets. These tickets are created by MQR QA Auditors to evaluate regular Quality Assurance tickets initiated by TLs for agents. This model can be used as a central table for MQR's Audit the Auditor performance.\n",
    "columns": {
      "ticket_id": "unique identifier for the zendesk QA ticket\n",
      "audit_id": "unique identifier for the audit ticket\n",
      "requester_id": "unique id of the ticket requester\n",
      "assignee_id": "unique id of the ticket assignee\n",
      "external_id": "external id from the main app of the customer/agent who is related to the ticket\n",
      "organization_id": "unique id of the organization to which the ticket belongs\n",
      "group_id": "unique id of the group to which the ticket belongs\n",
      "assignee_name": "name of the ticket assignee\n",
      "assignee_email": "email of the ticket assignee\n",
      "requester_name": "name of the ticket requester\n",
      "requester_email": "email of the ticket requester\n",
      "ticket_channel": "channel through which the ticket was created\n",
      "qa_ticket_channel": "Custom field indicating the channel through which the QA ticket was created\n",
      "coaching_notes": "coaching notes for the ticket\n",
      "data_creation_alignment_score_10": "alignment score for the data creation sop, out of 10\n",
      "data_creation_alignment_score_20": "alignment score for the data creation sop, out of 20\n",
      "feedback_alignment_score_10": "alignment score for the feedback sop, out of 10\n",
      "customer_experience_alignment_score_30": "custom field indicating the customer experience alignment score\n",
      "compliance_alignment_score_50": "custom field indicating the compliance alignment score\n",
      "ata_auto_fail": "custom field indicating if the ticket was auto failed by the auditor\n",
      "technical_alignment_markdowns_v1": "markdowns for technical alignment in handling the ticket\n",
      "ticket_form": "name of the form that was used to create a ticket\n",
      "alignment_outcome": "outcome of the audit alignment\n",
      "final_alignment_score": "score of the audit's final alignment\n",
      "compliance_alignment_score": "score of the audit's compliance alignment\n",
      "customer_experience_alignment_score": "score of the audit's customer experience alignment\n",
      "adherence_markdowns": "markdowns for adherence\n",
      "handle_time": "time taken to handle the ticket\n",
      "created_at": "\"Timestamp of when the record was created\"",
      "updated_at": "\"timestamp of when the record was last updated\"",
      "created_at_pst": "timestamp of when the ticket was created in PST\n",
      "initially_assigned_at_pst": "timestamp of when the ticket was initially assigned in PST"
    }
  },
  "dim_docs_requirements": {
    "description": "Dimension table containing all (active, archived, and deleted) document requirements. Each row corresponds to a single requirement that exists in our app and details about the requirement such as a description, visibility on the app, instructions, etc.",
    "columns": {
      "req_id": "Primary key, unique identifier to the requirement",
      "name": "Requirement name",
      "description": "Description about the requirement",
      "instructions": "Legacy instructions for requirements. For HelloSign and composite requirements, these instructions will appear for users with app version 2.182.0 or lower and do not need to contain the HelloSign Link. The \"upload document\" button will be enabled for these users.",
      "is_checklist_enabled": "If TRUE, checklist is enabled for this requirement",
      "checklist_description": "Description text for the checklist",
      "checklist_items": "Array of checklist items",
      "expiry_type": "Expiry type for the requirement",
      "is_visible_to_worker": "If the requirement is visible to the worker, then TRUE",
      "is_visible_to_workplace": "If the requirement is visible to the workplace, the TRUE",
      "is_state_specific": "If the requirement is specific to the state, then TRUE",
      "is_worker_upload_disabled": "If the worker upload button is disabled on the app, the TRUE",
      "is_archived": "If the requirement is archived, the TRUE",
      "is_deleted": "Flag indicating whether the record has been marked as deleted",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "requirement_workflow_type": "Type of workflow for the requirement (e.g., DOCUMENT_UPLOAD)",
      "is_automated_verification_decision": "If TRUE, the verification decision is automated",
      "is_hello_sign_embedded_flow": "If TRUE, HelloSign embedded flow is enabled",
      "hello_sign_template_id": "HelloSign template ID for the requirement",
      "hello_sign_fallback_static_url": "Fallback static URL for HelloSign",
      "hello_sign_instructions": "Instructions related to HelloSign requirement. These instructions will be shown to all users with the updated app version and do not need to contain the HelloSign Link.",
      "validity_days_from_issue_date": "Number of days the requirement is valid from its issue date",
      "composite_config": "Composite configuration for the requirement",
      "composite_config_instructions": "Instructions related to the composite requirement. These instructions will be shown to all users with the updated app version and do not need to contain the HelloSign Link."
    }
  },
  "first_shift_cancels": {
    "description": "",
    "columns": {}
  },
  "stg_worker_ops__agent_availabilities": {
    "description": "Staging model for agent real-time availability from Zendesk. This model keeps the work items as JSON strings instead of flattening them.",
    "columns": {
      "availability_id": "Unique identifier for agent availability.",
      "agent_id": "Unique identifier for the agent.",
      "status_id": "ID representing the agent's current status.",
      "status_name": "Name of the agent's current status.",
      "status_reason": "Reason for the agent's current status change.",
      "status_updated_at": "Timestamp when the agent's status was last updated.",
      "chat_max_capacity": "Maximum number of concurrent chats an agent can handle.",
      "chat_status": "Status of the agent's chat availability.",
      "chat_work_item_count": "Number of chat work items currently assigned to the agent.",
      "chat_work_items": "JSON array of chat work items assigned to the agent.",
      "chat_latest_assigned_at": "Timestamp of the most recent chat assignment.",
      "web_max_capacity": "Maximum number of concurrent web interactions an agent can handle.",
      "web_status": "Status of the agent's web availability.",
      "web_work_item_count": "Number of web work items currently assigned to the agent.",
      "web_work_items": "JSON array of web work items assigned to the agent.",
      "web_latest_assigned_at": "Timestamp of the most recent web assignment.",
      "updated_at": "Timestamp indicating the latest update for the agent's availability."
    }
  },
  "monthly_hcf_growth_accounting_gmv_by_verticals": {
    "description": "",
    "columns": {}
  },
  "utilization2_users": {
    "description": "",
    "columns": {}
  },
  "wops_klaus__qa_ata": {
    "description": "This reporting model pivots the fact klaus reviews table by review ID, so each row is a unique review ID. It includes detailed information about the reviews, such as score for each criteria, overall score, review url, reviewer & reviewee information, and information regarding the Zendesk ticket such as contact channel and Wops ticket type. We are currently hardcoding the rating category name to get the value for the existing rating category name used in QA and ATA scorecards (53921 & 54262)",
    "columns": {
      "review_id": "Unique identifier for the review.",
      "ticket_id": "Unique identifier for the ticket.",
      "scorecard_id": "ID of the associated scorecard.",
      "scorecard_name": "Name of the associated scorecard.",
      "review_url": "URL link to the review.",
      "ticket_url": "URL link to the ticket.",
      "source_type": "Source type of the review.",
      "workspace_id": "Identifier for the workspace.",
      "review_comment": "Comments related to the review.",
      "reviewee_email": "Email of the reviewee.",
      "reviewee_name": "Name of the reviewee.",
      "reviewer_email": "Email of the reviewer.",
      "reviewer_name": "Name of the reviewer.",
      "created_at_iso": "The ISO-formatted creation date of the review.",
      "updated_at_iso": "The ISO-formatted last updated date of the review.",
      "review_created_at": "The timestamp when the review was created.",
      "review_updated_at": "The timestamp when the review was last updated.",
      "airbyte_extracted_at": "The timestamp when the data was extracted from airbyte.",
      "no_auto_fail_rating_score": "Indicates if there were no automatic failures to the audit.",
      "resolution_rating_score": "QA/ATA scoring based on whether the ticket resolution is correct and followed SOP.",
      "resolution_base": "QA/ATA scoring weightage based on whether the ticket resolution is correct and followed SOP.",
      "communication_rating_score": "QA/ATA scoring based on the evaluation of communication effectiveness.",
      "communication_base": "QA/ATA scoring weightage based on the evaluation of communication effectiveness.",
      "handling_rating_score": "QA/ATA scoring based on proper ticket handling.",
      "handling_base": "QA/ATA scoring weightage based on proper ticket handling.",
      "clerical_rating_score": "QA/ATA scoring based on proper clerical SOP followed by the agent.",
      "clerical_base": "QA/ATA scoring weightage based on proper clerical SOP followed by the agent.",
      "overall_score": "Overall score of the review.",
      "markdown_detail": "Communications markdown detail.",
      "wops_ticket_type_a": "Worker Operations Ticket type.",
      "payments_category_b": "Payments Ticket Category.",
      "contact_channel": "Contact channel for the review."
    }
  },
  "stg_invoiced_api__payments": {
    "description": "Contains a log of changes to payments from the invoice provider",
    "columns": {
      "payment_event_id": "Unique identifier to the log of changes to payments",
      "payment_id": "Payment ID",
      "customer_id": "Associated customer ID, if any",
      "ach_sender_id": "ACH PPD ID",
      "reference_number": "Reference number (i.e. check number)",
      "object_type": "Object Type, defaults to 'Payment'",
      "source": "Source of payment",
      "charges": "Collection of charges included for processed payments",
      "method": "Payment method used",
      "is_voided": "Indicates whether a payment was voided",
      "is_cash_matched": "Indicates whether there is a CashMatch suggestion",
      "applied_to": "An array of payment applications (i.e. how payments are applied)",
      "currency_code": "3-letter ISO currency code",
      "payment_notes": "Internal payment notes",
      "amount": "Payment amount",
      "balance": "Unapplied amount remaining",
      "payment_date": "Payment date",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "_airbyte_meta": "airbyte metadata",
      "metadata": "invoiced metadata",
      "pdf_url": "URL where receipt PDF can be downloaded"
    }
  },
  "report_zendesk__hcf_kops_tickets": {
    "description": "fact model for hcf kops tickets\n",
    "columns": {
      "ticket_id": "unique identifier for zendesk tickets",
      "requester_id": "Unique identifier for Zendesk requester.",
      "assignee_id": "Unique identifier for Zendesk assignee.",
      "brand_id": "Unique identifier for Zendesk brand.",
      "subject": "Subject of the ticket.",
      "requester_name": "Name of the requester.",
      "requester_email": "Email of the requester.",
      "assignee_name": "Name of the assignee.",
      "assignee_email": "Email of the assignee.",
      "group_name": "Name of the group.",
      "ticket_form_name": "Name of the ticket form.",
      "priority": "Priority of the ticket.",
      "recipient": "Recipient address of the ticket.",
      "description": "Description of the ticket.",
      "ticket_tags": "Tags associated with the ticket.",
      "reopens": "Number of times the ticket has been reopened.",
      "replies": "Number of replies on the ticket.",
      "calendar_reply_time_in_minutes": "Reply time in minutes.",
      "calendar_first_resolution_time_in_minutes": "First resolution time in minutes.",
      "calendar_full_resolution_time_in_minutes": "Full resolution time in minutes.",
      "progress_status": "Current progress status of the ticket.",
      "user_type": "Type of user who created the ticket.",
      "request_urgency": "Urgency level of the request.",
      "due_date": "Due date for the ticket resolution.",
      "product_update": "Product update related to the ticket.",
      "created_at": "Timestamp when the ticket was created.",
      "initially_assigned_at": "Timestamp of when the ticket was initially assigned.",
      "assigned_at": "Timestamp of when the ticket was assigned.",
      "solved_at": "Timestamp of when the ticket was solved.",
      "generated_timestamp": "Timestamp of when the record was generated.",
      "updated_at": "Timestamp of when the record was last updated."
    }
  },
  "int_subsidized_shifts": {
    "description": "intermediate model showing if a shift was subsidized. This model is built using pricing configurations from the pricing_parameters__market_params model.\n",
    "columns": {
      "shift_id": "unique identifier for the shift",
      "worker_id": "unique identifier for the worker",
      "workplace_id": "unique identifier for the workplace",
      "pricing_msa": "pricing market area for the shift",
      "workplace_state_code": "state code for the workplace",
      "worker_requirement": "worker requirement for the shift",
      "urgent_shift_type": "urgent shift type for the shift",
      "shift_pay": "pay for the shift",
      "shift_charge": "charge for the shift",
      "shift_net_revenue": "net revenue for the shift",
      "shift_net_pay": "net pay for the shift",
      "shift_net_charge": "net charge for the shift",
      "shift_margin": "margin for the shift",
      "subsidy_amount": "subsidy amount for the shift",
      "margin_cap": "margin cap for the shift",
      "weekday_base": "weekday base charge for the shift",
      "weekend_base": "weekend base charge for the shift",
      "weekday_charge": "weekday charge for the shift",
      "weekend_charge": "weekend charge for the shift",
      "is_weekend": "whether the shift is on a weekend",
      "target_charge": "target charge for the shift",
      "is_gtm_subsidy": "whether the shift is a gtm subsidy",
      "is_holiday_subsidy": "whether the shift is a holiday subsidy",
      "is_reliability_subsidy": "whether the shift is a reliability subsidy",
      "is_min_fill_low_charge_subsidy": "whether the shift is a min fill low charge subsidy",
      "is_min_fill_low_posting_subsidy": "whether the shift is a min fill low posting subsidy",
      "is_unsubsidized": "whether the shift is unsubsidized",
      "shift_length": "length of the shift",
      "shift_start_at": "timestamp when the shift starts",
      "shift_end_at": "timestamp when the shift ends",
      "pricing_config_valid_until": "timestamp when the pricing config is valid until",
      "created_at": "timestamp when the shift was created",
      "updated_at": "timestamp when the shift was updated"
    }
  },
  "past_month_facility_rev": {
    "description": "",
    "columns": {}
  },
  "pa_dashboard_All_shifts_posted_per_facility_per_week": {
    "description": "",
    "columns": {}
  },
  "pa_dashboard_worker_booked_weekly": {
    "description": "",
    "columns": {}
  },
  "stg_invoiced_api__customers": {
    "description": "Contains a log of changes to customers from the invoice provider",
    "columns": {
      "customer_id": "Unique Customer ID",
      "user_id": "User ID",
      "external_customer_id": "A unique ID to help tie customer to external systems",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "stripe_customer_id": "The customer's Stripe ID",
      "parent_customer_id": "Parent customer ID",
      "chasing_cadance_id": "Chasing cadance ID",
      "chasing_cadence_step_id": "Chasing cadance next step ID",
      "late_fee_schedule_id": "Late fee schedule ID",
      "object_type": "Object Type, defaults to 'Customer'",
      "customer_name": "Customer name",
      "organization_type": "Organization type, either company or person",
      "address1": "First address line",
      "address2": "Second address line (optional)",
      "city": "City",
      "state": "State or province",
      "postal_code": "Zip or postal code",
      "country": "Two-letter ISO code",
      "phone": "Phone number",
      "email": "Email address",
      "is_active": "Whether the customer is active",
      "has_chasing": "Whether chasing is enabled",
      "has_autopay": "Whether autopay is enabled",
      "has_credit_hold": "Whether customer is on credit hold",
      "is_consolidated": "Whether customer is consolidated",
      "has_bill_to_parent": "Whether the parent customer is billed",
      "is_taxable": "Whether customer is taxable",
      "has_convenience_fee": "Whether customer has surcharging enabled",
      "taxes": "Collection of Tax Rate IDs",
      "payment_terms": "Payment terms when AutoPay is off (i.e. NET 30)",
      "payment_source": "Customer's payment source, if attached",
      "notes": "Customer notes",
      "net_dispute_terms": "The length of the customer's net dispute terms, in days",
      "has_early_payment_incentive": "whether the customer has an early payment incentive",
      "payment_type": "The payment method used by the customer",
      "late_fee_schedule": "Late fee schedule",
      "autopay_delay_days": "Number of days to delay autopay",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "extracted_at": "Timestamp at which airbyte extracted the record from the source system",
      "statement_url": "URL to download the latest account statement",
      "statement_pdf_url": "URL to download the latest account statement in PDF format",
      "_airbyte_raw_id": "Airbyte unique identifier",
      "_airbyte_meta": "Airbyte metadata",
      "metadata": "Invoiced metadata"
    }
  },
  "stg_attendance_policy__workers": {
    "description": "Staging model for data coming from the attendance policy services' workers table\n",
    "columns": {
      "attendance_policy_worker_id": "Primary key, unique identifier for workers in attendance policy service",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "market_id": "The ID of the market that designates the attendance policy",
      "name": "Name of the worker",
      "msa": "Metropolitan statistical area (MSA) of the worker",
      "state": "State of the worker",
      "score": "Attendance score of the worker",
      "clipboard_score_updated_score": "Final clipboard score after the clipboard score change",
      "reliability_score": "Reliability score of the worker",
      "qualification": "Qualification (i.e. license) of the worker",
      "status": "Worker's current status or stage in the application",
      "timezone": "Timezone of the worker",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "last_worked_at": "Timestamp indicating when the worker last worked",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "pa_dashboard_worker_booked_weekly_by_start_date": {
    "description": "",
    "columns": {}
  },
  "stg_zendesk_wops__ticket_metrics": {
    "description": "This model represents various metrics related to tickets, such as resolution times and wait times, etc...",
    "columns": {
      "ticket_metric_id": "Ticket metric ID, automatically assigned when the ticket metric is created.",
      "ticket_id": "ID of the associated ticket.",
      "instance_id": "The instance of the metric associated with the ticket.",
      "ticket_metric_url": "The API URL of the ticket metric.",
      "metric_time": "The time the metric was recorded.",
      "metric_type": "The type of metric being recorded.",
      "metric_name": "The name of the metric.",
      "metric_status": "The status of the metric.",
      "number_of_reopens": "Total number of times the ticket was reopened.",
      "number_of_replies": "The number of public replies added to a ticket by an agent.",
      "group_stations": "Number of groups the ticket passed through.",
      "assignee_stations": "Number of assignees the ticket had.",
      "generated_timestamp": "The timestamp when the metric was generated.",
      "reply_time_in_minutes": "Number of minutes to the first reply during calendar and business hours.",
      "reply_time_in_seconds": "Number of seconds to the first reply during calendar hours, only available for Messaging tickets.",
      "on_hold_time_in_minutes": "Number of minutes the ticket was on hold.",
      "custom_status_updated_at": "The date and time the ticket's custom status was last updated.",
      "agent_wait_time_in_minutes": "Number of minutes the agent spent waiting during calendar and business hours.",
      "requester_wait_time_in_minutes": "Number of minutes the requester spent waiting during calendar and business hours.",
      "full_resolution_time_in_minutes": "Number of minutes to the full resolution during calendar and business hours.",
      "first_resolution_time_in_minutes": "Number of minutes to the first resolution time during calendar and business hours.",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "solved_at": "When the ticket was solved.",
      "initially_assigned_at": "When the ticket was initially assigned.",
      "assigned_at": "When the ticket was assigned.",
      "assignee_updated_at": "When the assignee last updated the ticket.",
      "status_updated_at": "When the status of the ticket was last updated.",
      "latest_comment_added_at": "When the latest comment was added.",
      "requester_updated_at": "When the requester last updated the ticket.",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake"
    }
  },
  "dim_customers": {
    "description": "Table containing the customers (HCF) from the invoice provider",
    "columns": {
      "customer_id": "Unique Customer ID",
      "user_id": "User ID",
      "salesforce_account_id": "The Salesforce ID of the Invoiced Customer",
      "salesforce_account_parent_id": "The Salesforce ID of the Invoiced Customer parent account",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "stripe_customer_id": "The customer's Stripe ID",
      "parent_customer_id": "Parent customer ID",
      "chasing_cadance_id": "Chasing cadance ID",
      "chasing_cadence_step_id": "Chasing cadance next step ID",
      "late_fee_schedule_id": "Late fee schedule ID",
      "billing_specialist_id": "The Salesforce ID of the Billing Rep assigned to the customer",
      "object_type": "Object Type, defaults to 'Customer'",
      "customer_name": "Customer name",
      "organization_type": "Organization type, either company or person",
      "address1": "First address line",
      "address2": "Second address line (optional)",
      "city": "City",
      "state": "State or province",
      "postal_code": "Zip or postal code",
      "country": "Two-letter ISO code",
      "phone": "Phone number",
      "email": "Email address",
      "is_active": "Whether the customer is active",
      "has_chasing": "Whether chasing is enabled",
      "has_autopay": "Whether autopay is enabled",
      "has_credit_hold": "Whether customer is on credit hold",
      "is_consolidated": "Whether customer is consolidated",
      "has_bill_to_parent": "Whether the parent customer is billed",
      "is_taxable": "Whether customer is taxable",
      "has_convenience_fee": "Whether customer has surcharging enabled",
      "taxes": "Collection of Tax Rate IDs",
      "payment_terms": "Payment terms when AutoPay is off (i.e. NET 30)",
      "payment_source": "Customer's payment source, if attached",
      "notes": "Customer notes",
      "net_dispute_terms": "The length of the customer's net dispute terms, in days",
      "has_early_payment_incentive": "whether the customer has an early payment incentive",
      "payment_type": "The payment method used by the customer",
      "account_stage": "Salesforce account stage/status",
      "late_fee_schedule": "Late fee schedule",
      "autopay_delay_days": "Number of days to delay autopay",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated"
    }
  },
  "hcp_activation_cohort_monthly_rev": {
    "description": "",
    "columns": {}
  },
  "worker_eta_trip_stg": {
    "description": "",
    "columns": {}
  },
  "net_rev_per_facility_per_nurse_by_city": {
    "description": "",
    "columns": {}
  },
  "worker_zip_code_distance": {
    "description": "table of zip code and worker pairs that calculates the workers' distance to the center of each zip code\n",
    "columns": {
      "worker_zip_code_id": "primary key, unique id for each worker and zip code pair\n",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "zip_code": "postal code for united states\n",
      "full_name": "full name of the worker\n",
      "account_stage": "the current stage of the worker's account\n",
      "distance_from_zip_code_center": "distance in miles from the worker's given coordinates to the center of the zip code"
    }
  },
  "pa_dashboard_worker_booked_daily": {
    "description": "",
    "columns": {}
  },
  "monthly_hcf_shift_accounting_verticals": {
    "description": "",
    "columns": {}
  },
  "stg_app__holidays": {
    "description": " Staging model for the list of holidays stored in the application",
    "columns": {
      "holiday_id": "Unique identifier for the holiday\n",
      "fee": "Fee associated with the holiday\n",
      "holiday_name": "Name of the holiday\n",
      "is_evening_holiday": "If the holiday takes place in the evening\n",
      "is_auto_date": "TBD\n",
      "is_deleted": "Indicates whether the holiday has been deleted.\n",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake",
      "loaded_at": "Timestamp of when the record was loaded into Snowflake"
    }
  },
  "hcf_cohortized_by_first_open_monthly_revenue": {
    "description": "",
    "columns": {}
  },
  "stg_invoiced__invoiced_credit_note_api": {
    "description": "",
    "columns": {
      "credit_note_sk": "This is a unique identifier for each credit note. It is generated using a combination of the credit note's ID and the time it was last updated. This key is used to track changes in the credit note over time.",
      "credit_note_id": "This is a unique identifier for each credit note. It is used to track and manage individual credit notes within the system.",
      "customer_id": "This is a unique identifier for each customer. It is used to link the credit note to the specific customer it is associated with.",
      "credit_note_number": "This field represents the unique number assigned to each credit note. It is used for tracking and referencing purposes in financial and accounting operations.",
      "name": "This field contains the name associated with the credit note.",
      "status": "This field indicates the current status of the credit note. It provides information on whether the credit note is still open, or has been paid.",
      "items": "This column contains the list of items that are included in the credit note. Each item is represented as a separate object within the list.",
      "metadata": "This column holds additional information about the credit note in a structured format. It can include any extra data that doesn't fit into the standard columns but is important for business operations or analysis.",
      "currency": "This column indicates the currency in which the credit note is issued. It is represented by the standard three-letter currency code, such as USD for United States Dollar, EUR for Euro, etc.",
      "discounts": "This column represents any discounts that have been applied to the credit note. It can be useful for understanding the financial adjustments made to the original invoice amount.",
      "object": "This column contains the type of the object. It helps in identifying the type of data stored in the record. For example, in this case, the object type would be 'credit_note'.",
      "pdf_url": "This column contains the URL of the PDF version of the credit note. This can be used to directly access the printable version of the credit note for record-keeping or sharing with the customer.",
      "shipping": "This column contains information about the shipping details associated with the credit note. It includes data such as the shipping address, shipping method, and shipping charges.",
      "url": "This column contains the URL of the credit note. This URL can be used to directly access the credit note on the Invoiced platform.",
      "notes": "This column contains any additional notes or comments that are associated with the credit note. These notes can include any special instructions or additional information that is relevant to the credit note.",
      "subtotal": "The subtotal represents the total amount of the credit note before any taxes or discounts are applied. This is the sum of the prices of all items listed in the credit note.",
      "taxes": "The taxes field indicates the total amount of taxes applied to the credit note. This is calculated based on the tax rates applicable to the items in the credit note.",
      "total": "The total field represents the final amount of the credit note after all taxes and discounts have been applied. This is the amount that will be credited to the customer's account.",
      "balance": "This column represents the remaining amount that is due on the credit note. It is calculated by subtracting the total amount paid from the total amount of the credit note. A balance of zero indicates that the credit note has been fully paid.",
      "is_paid": "This column indicates whether the credit note has been fully paid or not. If the value is 'true', it means that the credit note has been fully paid. If the value is 'false', it means that there is still an outstanding balance on the credit note.",
      "is_draft": "This column indicates whether the credit note is in draft status or not. If the value is 'true', it means that the credit note is still being prepared and has not been finalized or sent to the customer. If the value is 'false', it means that the credit note has been finalized and possibly sent to the customer.",
      "is_closed": "This field indicates whether the credit note is closed or not. If the value is 'true', it means the credit note is closed and no further actions can be taken on it. If the value is 'false', it means the credit note is still open and actions can be taken on it.",
      "credit_note_date": "This field represents the date when the credit note was issued. It is important for tracking the timeline of credit notes and for financial reporting purposes.",
      "created_at": "This field represents the date and time when the credit note record was created in the system. It helps in tracking when the credit note information was first recorded.",
      "updated_at": "This column represents the date and time when the credit note was last updated. It is useful for tracking changes made to the credit note over time.",
      "ingested_at": "This column indicates the date and time when the credit note data was ingested into the database from the source system. It helps in understanding when the data was last fetched from the source system.",
      "loaded_at": "This column signifies the date and time when the credit note data was loaded into the data warehouse. It is useful for data auditing and understanding when the data was made available for analysis and reporting."
    }
  },
  "pa_shift_summary": {
    "description": "TBD",
    "columns": {
      "shift_id": "TBD",
      "facility_id": "TBD",
      "agent_id": "TBD",
      "shift_creation_date": "TBD",
      "shift_updated_date": "TBD",
      "priority_till_date": "TBD",
      "shift_start_date": "TBD",
      "shift_windowed": "TBD",
      "booked_during_pa": "TBD",
      "booked_by_pa_worker": "TBD",
      "pa_worker_count": "TBD",
      "all_worker_view": "TBD",
      "pa_worker_view": "TBD",
      "pa_worker_view_during_pa": "TBD",
      "pa_worker_view_after_pa": "TBD"
    }
  },
  "app_wwf_phase_2_non_pilot_worker_shifts_stg": {
    "description": "",
    "columns": {}
  },
  "monthly_activation_cohort_daily_rev": {
    "description": "",
    "columns": {}
  },
  "resting_months": {
    "description": "",
    "columns": {}
  },
  "resting_weeks_in_days_mod": {
    "description": "",
    "columns": {}
  },
  "int_shifts_and_shiftlogs_by_action": {
    "description": "intermediate model that joins shifts and their shiftlogs by action",
    "columns": {
      "int_shift_log_id": "surrogate id created from the shift and the shift log id",
      "shift_id": "unique id for the shift",
      "shift_log_id": "unique id for the shift log",
      "workplace_id": "unique id for the workplace",
      "worker_id": "unique id for the worker",
      "timecard_id": "unique id for the timecard",
      "performed_by_id": "id of the user who performed the action",
      "worker_name": "name of the worker",
      "workplace_name": "name of the workplace",
      "shift_type": "type of the shift",
      "urgent_shift_type": "type of the urgent shift",
      "worker_requirement": "requirement of the worker",
      "action": "action performed on the shift",
      "sub_action": "sub action performed on the shift",
      "performed_by_type": "type of the user who performed the action",
      "lead_time": "lead time until the shift start",
      "is_verified": "whether the shift is verified",
      "is_invoiced": "whether the shift is invoiced",
      "is_billable": "whether the shift is billable",
      "is_signed": "whether the shift is signed",
      "is_verified_same_day": "whether the shift is verified on the same day",
      "is_holiday_shift": "whether the shift is a holiday shift",
      "is_hazard_shift": "whether the shift is a hazard shift",
      "is_urgently_booked": "whether the shift is urgently booked",
      "is_booked_event": "whether the shift is added, based on the action",
      "is_posted_event": "whether the shift is posted, based on the action",
      "is_removed_event": "whether the shift is removed, based on the action",
      "is_cancelled_event": "whether the shift is cancelled, based on the action",
      "shift_length": "length of the shift",
      "created_at_hour": "hour of shift creation",
      "created_at_day": "day of shift creation",
      "created_at_week": "week of shift creation",
      "created_at_month": "month of shift creation",
      "created_at_day_of_week": "day of week of shift creation",
      "created_at_week_hour": "week hour of shift creation",
      "start_day": "day of shift start",
      "start_week": "week of shift start",
      "start_month": "month of shift start",
      "start_day_of_week": "day of week of shift start",
      "net_pay": "net pay of the shift",
      "net_charge": "net charge of the shift",
      "net_revenue": "net revenue of the shift",
      "shift_margin": "margin of the shift",
      "base_pay": "base pay rate of the shift",
      "base_charge_rate": "base charge rate of the shift",
      "hazard_charge": "hazard charge rate of the shift",
      "hazard_pay": "hazard pay rate of the shift",
      "holiday_differential": "holiday differential rate of the shift",
      "shift_start_at": "start time of the shift",
      "shift_end_at": "end time of the shift",
      "shift_start_logs": "start logs of the shift",
      "shift_created_at": "creation time of the shift",
      "log_created_at": "creation time of the shift log"
    }
  },
  "pa_dashboard_Onboarded_at": {
    "description": "",
    "columns": {}
  },
  "app_invoices_stg": {
    "description": "Staging model for data coming from the application's invoices table. NOTE: fct_invoices is the source of truth for invoice information, app_invoices_stg has a number of failed syncs that render it a poor source of truth. Use at your own risk.\n",
    "columns": {
      "id": "Primary key, unique identifier for the invoice\n",
      "archived": "Flag indicating whether the invoice is archived",
      "closed": "Flag indicating whether the invoice is closed",
      "paid": "Flag indicating whether the invoice is paid",
      "facility_id": "Identifier for the facility associated with the invoice",
      "invoiced_com_id": "Identifier for the invoiced company",
      "invoice_period_start": "Start date of the invoice period",
      "invoice_period_end": "End date of the invoice period",
      "status": "Current status of the invoice",
      "disputed": "Flag indicating whether the invoice is disputed",
      "dispute_solved": "Flag indicating whether the dispute is solved",
      "dispute_status": "Current status of the invoice dispute",
      "dispute_draft_saved_at": "Timestamp indicating when the dispute draft was last saved",
      "dispute_submitted_at": "Timestamp indicating when the invoice dispute was submitted by the workplace user",
      "dispute_actioned_at": "Timestamp indicating when the invoice dispute was actioned by the admin user",
      "dispute_amount": "Dispute amount that was raised by the facility user",
      "dispute_accepted_amount": "Dispute amount that was accepted by the admin",
      "dispute_cases": "Salesforce or Zendesk cases attached to a particular dispute",
      "paid_amount": "Amount paid for the invoice",
      "processing_amount": "Amount being processed for the invoice",
      "expiry_in_days": "Number of days until the invoice expires",
      "due_date": "Due date for the invoice",
      "overridden_invoice_id": "Identifier for the overridden invoice",
      "created_by": "Unique id for the user who created the record",
      "created_at": "Timestamp of when the record was created",
      "updated_at": "timestamp of when the record was last updated",
      "days_between_created_and_updated": "Number of days between creation and last update of the invoice",
      "invoice_type": "Type of the invoice - can be Original or Regenerated",
      "parent_invoice_number": "Base invoice number ",
      "invoice_version": "Version of the invoice"
    }
  },
  "worker_eta_trip_history_stg": {
    "description": "",
    "columns": {}
  },
  "this_next_week_cumulative_fin": {
    "description": "",
    "columns": {}
  },
  "quarterly_churn_by_workplace": {
    "description": "Table that reports on workplace churn at the quarterly workplace grain. Churn is defined as the workplace having had at least one shift posted (based on the shift_start_at) in the previous quarter and having none posted in the current quarter. Deleted shifts are excluded from the shifts used to calculate churn.\n",
    "columns": {
      "quarterly_workplace_id": "Surrogate that is a combination of the workplace id and quarter\n",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "date_quarter": "The calender quarter\n",
      "msa": "MSA of the workplace\n",
      "type": "The type of workplace\n",
      "csa": "CSA of the workplace\n",
      "state": "State where the workplace is located\n",
      "salesforce_id": "Salesforce account ID for the workplace\n",
      "salesforce_parent_id": "Salesforce account ID of the workplace's parent\n",
      "num_shifts": "The number of shifts for the workpalce with start dates in the quarter\n",
      "cohort": "The quarter that the workplace first posted a shift\n",
      "is_first_shift_quarter": "If the date_quarter is also the quarter that the workplace first posted a shift\n",
      "initial_churn": "1 if the workplace is churned / churning for the first time, 0 otherwise\n",
      "reactivation_churn": "1 if the workplace is churned / churning for the second time or greater, 0 otherwise\n",
      "is_activate_never_churned": "1 if the workplace posted at least one shift in the quarter and has never churned previously, 0 otherwise\n",
      "is_activate_reactivated": "1 if the workplace posted at least one shift in the quarter but has churned in a previous quarter, 0 otherwise"
    }
  },
  "stg_ringcentral__phone_numbers": {
    "description": "Table containing all company phone numbers in RingCentral including company level and extension level numbers.",
    "columns": {
      "phone_internal_id": "Internal, unique identifer for a phone numbers.",
      "phone_id": "Phone number, can be used as an id to identify call information",
      "contact_extension_id": "Internal contact extension id",
      "contact_extension_number": "Extension short number",
      "phone_number_location": "Location (City, State). Filled for local US numbers.",
      "phone_number_label": "Custom user-defined name of a phone number, if any",
      "phone_number_status": "Status of a phone number. If the value is 'Normal', the phone number is ready to be used. If the value is 'Pending' it is an external number not yet ported to RingCentral.",
      "phone_number_type": "Phone number type (i.e. VoiceOnly, VoiceFax etc.)",
      "usage_type": "Usage type of phone number (i.e. MainCompanyNumber, DirectNumber etc.)",
      "payment_type": "Payment type. 'External' is returned for forwarded numbers which are not terminated in the RingCentral phone system",
      "is_primary": "Specifies if a phone number is primary, i.e. displayed as 'main number' and called by default",
      "extracted_at": "Timestamp at which airbyte extracted the record from the source system"
    }
  },
  "hcp_activation_cohort_pct_active_monthly": {
    "description": "",
    "columns": {}
  },
  "stg_zendesk__ticket_audits": {
    "description": "Staging model for Zendesk Ticket Audits, this data shows the history of changes on a Zendesk ticket.",
    "columns": {
      "ticket_audit_id": "Unique identifier for each ticket audit.",
      "ticket_id": "Unique identifier for the Zendesk ticket that we're tracking its history.",
      "event_author_id": "The user who created the audit.",
      "via": "Describes the channel which the object was created through",
      "ticket_events": "An array of the events that happened in this audit",
      "ticket_metadata": "Metadata for the ticket, custom and system data that were generated with the ticket",
      "attachments": "Uploaded files that were attached the ticket",
      "created_at": "Timestamp of when the record was created",
      "ingested_at": "Timestamp of when the record was first ingested into Snowflake"
    }
  },
  "pa_dashboard_Windowed_Shifts_by_Agent_Req": {
    "description": "",
    "columns": {}
  },
  "worker_eta_preciseness": {
    "description": "",
    "columns": {
      "valid_trip_history_id": ""
    }
  },
  "rpt_weekly_crawl_charts_by_vertical": {
    "description": "This model calculates cumulative and partitioned metrics for shifts and revenue. It builds on the `logs_and_shifts_int` and `dim_workplaces` models to produce daily and cumulative aggregates such as shifts gain, revenue gain, and posting ratios.\n",
    "columns": {
      "weekly_vertical_crawl_sk": "surrogate key created from the vertical_type, created_day and start_week",
      "vertical_type": "Type of vertical, derived from the `dim_workplaces` table.",
      "created_day": "The day the log record was created.",
      "start_week": "The starting day of the week for the shift logs.",
      "shifts_gain": "Net shift gain computed as num_more - num_less.",
      "revenue_gain": "Net revenue gain computed as added_rev - lost_rev.",
      "days_to_week_start": "The difference between the start_week and the created_day.",
      "cum_shifts_added": "Cumulative number of shifts added over the week.",
      "cum_shifts_posted": "Cumulative number of shifts posted over the week.",
      "cum_shifts_removed": "Cumulative number of shifts removed over the week.",
      "cum_shifts_lost": "Cumulative number of shifts lost over the week.",
      "cum_rev_added": "Cumulative revenue added over the week.",
      "cum_rev_lost": "Cumulative revenue lost over the week.",
      "cum_shifts": "Net cumulative shifts calculated as cum_shifts_added - cum_shifts_lost.",
      "cum_rev": "Net cumulative revenue calculated as cum_rev_added - cum_rev_lost.",
      "cum_posting": "Cumulative posting computed as cum_shifts_posted - cum_shifts_removed.",
      "cum_shifts_lost_to_added_ratio": "The ratio of cumulative shifts lost to cumulative shifts added. This is calculated only when cum_shifts_added > 0.\n",
      "cum_rev_lost_to_added_ratio": "The ratio of cumulative revenue lost to cumulative revenue added. This is calculated only when cum_rev_added > 0."
    }
  },
  "fct_test_shifts": {
    "description": "fact table for shifts from test accounts, where each records represents a single shift",
    "columns": {
      "shift_id": "Unique identifier for the shift",
      "worker_id": "CBH's unique indentifer for a worker, sometimes also called an agent or HCP",
      "workplace_id": "CBH's unique indentifer for a workplace, also referred to as a facility or HCF",
      "invoice_id": "Invoice associated to the shift. Note: this field is from the shifts table directly (i.e. from the app) so it does not tie to the invoice id in Invoiced, but rather to app_invoices_stg",
      "workplace_worker_combination_id": "Concat of the workplace and worker id, respectively",
      "group_id": "No additional info found. Note: potentially deprecated field",
      "verification_task_id": "Potentially used in table verification joins. Note: potentially deprecated field.",
      "timecard_id": "Timecard associated with the shift, if applicable",
      "verified_by_id": "No additional info found about this field",
      "previously_assigned_worker_id": "No additional info found about this field",
      "external_id": "No additional info found about this field",
      "request_replacement_by_id": "No additional info found about this field",
      "assigned_by_id": "No additional info found about this field",
      "shift_block_id": "Shift block which the shift is a part of",
      "shift_poster_id": "User who posted the shift",
      "shift_poster_name": "Name of the user who posted the shift",
      "shift_poster_type": "Type of the user who posted the shift, either can be EMPLOYEE or WORKPLACE_USER",
      "worker_name": "Name of the worker, if applicable",
      "shift_type": "The working time set by the facility (i.e. PM, AM, etc.)",
      "worker_requirement": "The type/level of worker that is required for the shift (i.e. nurse, EMT, etc.)",
      "original_requirement": "The type/level of worker when the shift was created, for unfilled shifts it will be the same as worker_requirement (we coaleasce original_requirement with worker_requirement) In most cases is the same as worker_requirement, but with exceptions for shifts posted as NURSE and CAREGIVER, for which the worker_requirement may be changed according to the worker that books the shift.\n",
      "cancellation_reason": "Reason why the shift was cancelled, if applicable",
      "invoice_number": "Invoice number from Invoiced.com (previously the invoice number from the shifts table which was inconsistent with the invoice number from invoiced.com)",
      "urgent_shift_type": "If a shift is defined as an urgent shift, this field denotes the type/urgency of the shift:\n\n| type           | description                                                      |\n|----------------|------------------------------------------------------------------|\n| 1              | No Call No Show (NCNS)                                           |\n| 2              | Late/Last Minute Cancellation (<= 8 hours before shift start)    |\n| 3              | Last minute shifts (posted within 24 hours of start)             |\n| 4              | DEPRECATED - part of instant fill feature                        |\n| NULL           | Not an urgent shift                                              |",
      "urgent_shift_reason": "The reason for the urgency of the shift. This field is only populated if the shift is an urgent shift. The reason can be one of the following:\n\n| enum value                          | description                                      |\n|-------------------------------------|--------------------------------------------------|\n| WORKER_REPLACEMENT_REQUESTED        | Worker replacement is requested                  |\n| ATTENDANCE_TRACKING_ALGO            | Urgency by attendance tracking algo              |\n| LATE_CANCELLATION                   | Urgency due to late shift cancellation           |\n| MAGIC_SHIFT                         | The shift is urgent because it's a magic shift   |",
      "urgent_shift_updated_at": "The date and time when the urgency of the shift was last updated. This field is only populated if the shift is an urgent shift.",
      "extend_bookability_to": "The date and time to which a shift's bookability was extended past it's start if the worker cancelled late or was a no show.",
      "clock_in_method": "Deprecated field, all values are NULL",
      "nfc_status_converted_by": "No additional info about this field",
      "nfc_status_converted_reason": "No additional info about this field",
      "verification_comments": "Notes regarding the verification of the shift",
      "market": "The market that the shift is in, msa, worker requirement tuple",
      "pricing_market": "The pricing market that the shift is in, msa, worker requirement tuple",
      "clock_in_connectivity_mode": "Indicates whether the worker was connected to the internet (i.e. online) when they clocked in, if applicable. Potentially deprecated",
      "clock_out_connectivity_mode": "Indicates whether the worker was connected to the internet (i.e. online) when they clocked out, if applicable. Potentially deprecated",
      "lunch_in_connectivity_mode": "Indicates whether the worker was connected to the internet (i.e. online) when they punched in from lunch, if applicable. Potentially deprecated",
      "lunch_out_connectivity_mode": "Indicates whether the worker was connected to the internet (i.e. online) when they punched out for lunch, if applicable. Potentially deprecated",
      "previously_assigned_worker_name": "No additional info about this field",
      "request_replacement_note": "If a facility requested a replacement worker, these are the notes added by the facility",
      "timecard_status": "Status of the worker's timecard for this shift, if applicable",
      "digital_signature": "The digital signature used to verify the shift, if applicable",
      "verification_method": "Method as to how the shift was verified, if applicable",
      "is_booked_same_shift": "No additional info about this field, potentially deprecated",
      "is_invoiced": "If shift is applicable to have an invoice, then TRUE",
      "is_deleted": "If shift is deleted/cancelled, then TRUE",
      "is_confirmed": "No additional info about this field, potentially deprecated",
      "is_verified": "If the worker's shift is verified by the workplace. This means the HCP should get paid and the facility charged. NOTE: This field may not be correct as it differs from the one found in fct_shift_logs",
      "is_signed": "No additional info about this field, potentially deprecated",
      "is_billable": "Related to \"Late Cancel\" and \"Sent Home\" fees, set to TRUE if toggled on from the manual bonus UI",
      "is_instant_pay": "If the shift is an instant pay shift, then TRUE",
      "is_urgently_booked": "If the shift is an urgent shift and booked, then TRUE",
      "is_hot_shift": "These shifts have the HotShift marker displayed in the HCP app.\n\n  These are subsidized shifts in GTM markets.",
      "is_hcppaid_cancellation": "If the worker was paid for the shift after it was cancelled, then TRUE",
      "is_self_claimed": "If the worker booked the shift in the app, then TRUE",
      "is_auto_clocked_out": "If the worker was auto-clocked out, then TRUE\"",
      "is_changed_to_non_instant_pay": "If the shift was changed from 'Instant Pay' to 'Non-Instant Pay', then TRUE",
      "is_hazard_shift": "If the shift is designated as a hazard shift, then TRUE",
      "has_hazard_pay": "If hazard pay is offered by facility, then TRUE",
      "is_by_facility": "No additional info about this field",
      "is_holiday_shift": "If the shift is on a holiday, the TRUE",
      "is_verified_same_day": "If the shift is verified the same day it was worked, then TRUE",
      "is_created_for_misc_payment": "If the shift is potentially created for any payment other than a shift (i.e. reimbursement, fees, etc.), then TRUE. Note: this field is based on a keyword search and is not exact. Keywords include: reimburse/reimbursement, milage, uber, lyft, hotel, bonus, overtime, extra time pay, sent home, cancellation, fee",
      "has_nfc_tag": "If the facility has NFC tags enabled, then TRUE",
      "has_left_facility_geofence": "If the worker left the facility geofence during the shift, then TRUE",
      "has_sedation_experience": "If the shift requires sedation experience, then TRUE",
      "has_tray_assembly_experience": "If the shift requires tray assembly experience, then TRUE",
      "pay_inheritance_level": "The pay level that the shift inherited parameters from (the MSA level are market pricing parameters, the facility level are from HCF-pricing parameters, etc)",
      "hazard_charge": "If hazard pay is offered by facility, then this is the harzard charge for the facility",
      "base_charge_rate": "Charge rate before any differentials are applied",
      "api_charge_rate": "Charge and pay breakdown when pay is configured",
      "time_differential": "Charge and pay breakdown when pay is configured",
      "holiday_differential": "Charge and pay breakdown when pay is configured",
      "manual_override": "Charge and pay breakdown when pay is configured",
      "hazard_pay": "If hazard pay is offered by facility, then this is that additional pay",
      "configured_pay": "Charge and pay breakdown when pay is configured",
      "holiday_pay": "Additonal pay for when shift is holiday shift",
      "rush_fee": "Charge and pay breakdown when pay is configured",
      "workplace_rating": "Rating of the facility/workplace (1-5 stars) that posted the shift, if available",
      "worker_rating": "Rating of the worker (1-5 starts) that worked the shift, if applicable",
      "api_pay": "Charge and pay breakdown when pay is configured",
      "base_pay": "Charge and pay breakdown when pay is configured",
      "boost_pay": "Additional amount to pay if the worker is eligible for boost pay related to streak rewards",
      "urgent_pay": "Additional amount to pay if the shift is an urgent shift",
      "pay": "Hourly pay of the shift for the worker, is null for shifts that are unclaimed",
      "estimated_pay": "Hourly estiamted pay of the shift for the worker for shifts that are unclaimed, is equal to pay for claimed shifts",
      "charge": "Hourly charge of the shift for the facility",
      "shift_length": "Length of the shift, in hours. This does not include any extra time worked (i.e. workers that worked through a break)",
      "extra_time_worked_length": "Length any extra time worked, of the shift, in hours. Note that this will pending on its approval status.",
      "net_pay": "Total net pay of the shift (i.e. pay * shift_length) for the worker. Note that this does not include any extra time worked.",
      "net_charge": "Total net charge of the shift (i.e. charge * shift_length) for the facility. Note that this does not include any extra time worked.",
      "net_revenue": "Total net revenue of the shift (i.e. net_charge - net_pay). Note that this does not include any extra time worked.",
      "total_shift_charge": "Total shift charge (shift_length * charge). Note that this does not include any extra time worked.",
      "total_shift_hazard_charge": "Total shift hazard charge (shift_length * hazard_charge). Note that this does not include any extra time worked.",
      "total_shift_base_charge_rate": "Total shift base charge rate (shift_length * base_charge_rate). Note that this does not include any extra time worked.",
      "total_shift_holiday_differential": "Total shift holiday differential (shift_length * holiday_differential). Note that this does not include any extra time worked.",
      "total_shift_manual_override": "Total shift manual override (shift_length * manual_override). Note that this does not include any extra time worked.",
      "total_shift_rush_fee": "Total shift rush fee (shift_length * rush_fee). Note that this does not include any extra time worked.",
      "total_shift_api_charge_rate": "Total shift API charge rate (shift_length * api_charge_rate). Note that this does not include any extra time worked.",
      "hours_between_shift_created_and_shift_start": "The number of hours between when the shift was created and when the shift is/was scheduled to start",
      "extra_time_worked_status": "If the shift has any extra time worked, this is the status of that extra time worked",
      "extra_time_worked_billed_to": "If the shift has any extra time worked, this is who paid for the extra time worked (i.e. HCF or CBH)",
      "extra_time_worked_reason": "If the shift has any extra time worked, this is the reason of that extra time worked",
      "clock_in_longitude": "Longitude of the worker when they clocked into the shift",
      "clock_in_latitude": "Latitude of the worker when they clocked into the shift",
      "clock_out_longitude": "Longitude of the worker when they clocked out of the shift",
      "clock_out_latitude": "Latitude of the worker when they clocked out of the shift",
      "lunch_out_longitude": "Longitude of the worker when they punched out to lunch",
      "lunch_out_latitude": "Latitude of the worker when they punched out to lunch",
      "lunch_in_longitude": "Longitude of the worker when they punched back in from lunch",
      "lunch_in_latitude": "Latitude of the worker when they punched back in from lunch",
      "lunch_skip_longitude": "If the worker skipped lunch, indicated their longitude at that point in time",
      "lunch_skip_latitude": "If the worker skipped lunch, indicated their latitude at that point in time",
      "shift_start_at": "Start timestamp of the shift in UTC",
      "shift_starts_at_local_time": "Start timestamp of the shift in the facility's timezone",
      "shift_end_at": "End timestamp of the shift in UTC",
      "shift_ends_at_local_time": "End timestamp of the shift in the facility's timezone",
      "updated_at": "timestamp of when the record was last updated",
      "created_at": "Timestamp of when the record was created",
      "created_week": "The date of the week that the shift was created, with the week starting on Mondays",
      "cancelled_at": "Timestamp of when the shift was cancelled, if applicable",
      "request_replacement_at": "Timestamp of when a replacement worker was requested by facility",
      "left_facility_geofence_at": "Timestamp of when a worker left the facility based on the geofence coordinates of the facility",
      "arrived_facility_geofence_at": "Timestamp of when a worker arrived at the facility based on the geofence coordinates of the facility",
      "timecard_created_at": "Timestamp that a corresponding timecard was created, if applicable",
      "verified_at": "Timestamp of when the shift was verified, if applicable",
      "clock_in_at": "Timestamp of when a worker clocked into the shift, if applicable",
      "clock_in_at_local_time": "Timestamp of when a worker clocked into the shift in facility's timezone, if applicable",
      "clock_out_at": "Timestamp of when a worker clocked out of the shift, if applicable",
      "clock_out_at_local_time": "Timestamp of when a worker clocked out of the shift in facility's timezone, if applicable",
      "lunch_in_at": "Timestamp of when a worker clocked in from lunch, if applicable",
      "lunch_in_at_local_time": "Timestamp of when a worker clocked in from lunch in facility's timezone, if applicable",
      "lunch_out_at": "Timestamp of when a worker clocked out to lunch, if applicable",
      "lunch_out_at_local_time": "Timestamp of when a worker clocked out to lunch in facility's timezone, if applicable",
      "lunch_skip_created_at": "No additional info about this field",
      "priority_till_at": "No additional info about this field",
      "workplace_salesforce_id": "workplace_salesforce_id\"",
      "workplace_type": "workplace_type",
      "workplace_name": "workplace_name",
      "workplace_email": "workplace_email",
      "workplace_account_stage": "workplace_account_stage",
      "workplace_timezone": "workplace_timezone",
      "workplace_state_code": "workplace_state_code",
      "workplace_csa": "workplace_csa",
      "workplace_msa": "workplace_msa",
      "workplace_pricing_msa": "workplace_pricing_msa",
      "workplace_longitude": "workplace_longitude",
      "workplace_latitude": "workplace_latitude",
      "workplace_zendesk_account_id": "workplace_zendesk_account_id",
      "workplace_salesforce_parent_id": "workplace_salesforce_parent_id",
      "worker_salesforce_id": "worker_salesforce_id",
      "worker_referrer_id": "worker_referrer_id",
      "worker_ota_build_id": "worker_ota_build_id",
      "worker_first_name": "worker_first_name",
      "worker_last_name": "worker_last_name",
      "worker_full_name": "worker_full_name",
      "worker_state_code": "worker_state_code",
      "worker_csa": "worker_csa",
      "worker_msa": "worker_msa",
      "worker_postal_code": "worker_postal_code",
      "worker_distance_preference": "worker_distance_preference",
      "worker_qualification": "worker_qualification",
      "worker_other_qualification": "worker_other_qualification",
      "worker_account_stage": "worker_account_stage",
      "worker_is_activated": "worker_is_activated",
      "worker_longitude": "worker_longitude",
      "worker_latitude": "worker_latitude",
      "deleted_reason": "deleted_reason",
      "is_100_instant_pay_enabled": "is_100_instant_pay_enabled",
      "is_stripe_payment": "is_stripe_payment",
      "instant_pay_rate": "instant_pay_rate",
      "total_amount": "total_amount",
      "paid_amount": "paid_amount",
      "remaining_amount": "remaining_amount",
      "instant_pay_status": "instant_pay_status",
      "instant_pay_shift_length": "instant_pay_shift_length",
      "hcp_clock_in_at": "hcp_clock_in_at",
      "hcp_lunch_out_at": "hcp_lunch_out_at",
      "hcp_lunch_in_at": "hcp_lunch_in_at",
      "hcp_clock_out_at": "hcp_clock_out_at",
      "submit_clock_in_at": "submit_clock_in_at",
      "submit_lunch_out_at": "submit_lunch_out_at",
      "submit_lunch_in_at": "submit_lunch_in_at",
      "submit_clock_out_at": "submit_clock_out_at",
      "admin_clock_in_at": "admin_clock_in_at",
      "admin_lunch_out_at": "admin_lunch_out_at",
      "admin_lunch_in_at": "admin_lunch_in_at",
      "admin_clock_out_at": "admin_clock_out_at",
      "completed_at": "completed_at",
      "instant_pay_shifts_updated_at": "Timestamp that the instant pay information for the shifts was last updated",
      "ncns_notes": "ncns_notes",
      "is_ncns": "is_ncns",
      "magic_points": "The number of 'Magic Points' that were used on the shift to give it Urgent Shift status and boost it's pay",
      "magic_shift_updated_at": "The date and time when the magic attributes were last updated."
    }
  }
}